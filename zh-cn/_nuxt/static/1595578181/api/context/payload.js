__NUXT_JSONP__("/api/context", {data:[{},{path:"\u002Fzh\u002Fapi\u002Fcontext",section:"api",page:{attrs:{title:"API: 上下文对象",description:"上下文是从Nuxt额外提供的对象（参数），而不是传统上可用的VUE组件，在\"asyncData\"、\"plugins\"、\"middlewares\"、\"modules\"和\"store\u002FnuxtServerInit\"等特殊的 Nuxt 生命周期区域中可以使用\"context\"。"},body:"\u003Ch2 id=\"上下文对象\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#上下文对象\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E上下文对象\u003C\u002Fh2\u003E\u003Cp\u003Econtext 变量的可用属性一览:\u003C\u002Fp\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003E属性字段\u003C\u002Fth\u003E\n\u003Cth\u003E类型\u003C\u002Fth\u003E\n\u003Cth\u003E可用\u003C\u002Fth\u003E\n\u003Cth\u003E描述\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eapp\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EVue 根实例\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E包含所有插件的 Vue 根实例。例如：在使用 \u003Ccode\u003Eaxios\u003C\u002Fcode\u003E 的时候，你想获取 \u003Ccode\u003E$axios\u003C\u002Fcode\u003E 可以直接通过 \u003Ccode\u003Econtext.app.$axios\u003C\u002Fcode\u003E 来获取\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EisClient\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E是否来自客户端渲染（废弃。请使用 \u003Ccode\u003Eprocess.client\u003C\u002Fcode\u003E ）\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EisServer\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E是否来自服务端渲染（废弃。请使用 \u003Ccode\u003Eprocess.server\u003C\u002Fcode\u003E ）\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EisStatic\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E是否来自 \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E 静态化（预渲染）（废弃。请使用 \u003Ccode\u003Eprocess.static\u003C\u002Fcode\u003E ）\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EisDev\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E是否是开发 dev 模式，在生产环境的数据缓存中用到\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EisHMR\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E是否是通过模块热替换 \u003Ccode\u003Ewebpack hot module replacement\u003C\u002Fcode\u003E (\u003Cem\u003E仅在客户端以 dev 模式\u003C\u002Fem\u003E)\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eroute\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Frouter.vuejs.org\u002Fzh\u002Fapi\u002F#%E8%B7%AF%E7%94%B1%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7\"\u003EVue Router 路由\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003EVue Router  路由实例\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Estore\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fvuex.vuejs.org\u002Fzh\u002Fapi\u002F\"\u003EVuex 数据\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EVuex.Store\u003C\u002Fcode\u003E 实例。\u003Cstrong\u003E只有\u003Ca href=\"\u002Fguide\u002Fvuex-store\"\u003Evuex 数据流\u003C\u002Fa\u003E存在相关配置时可用\u003C\u002Fstrong\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eenv\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EObject\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E 中配置的环境变量，见 \u003Ca href=\"\u002Fapi\u002Fconfiguration-env\"\u003E环境变量 api\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eparams\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EObject\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Eroute.params\u003C\u002Fcode\u003E 的别名\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Equery\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EObject\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Eroute.query\u003C\u002Fcode\u003E 的别名\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ereq\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fnodejs.org\u002Fapi\u002Fhttp.html#http_class_http_incomingmessage\"\u003E\u003Ccode\u003Ehttp.Request\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003ENode.js API 的 Request 对象。如果 Nuxt 以中间件形式使用的话，这个对象就根据你所使用的框架而定。\u003Cem\u003E\u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E 不可用\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eres\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ca href=\"https:\u002F\u002Fnodejs.org\u002Fapi\u002Fhttp.html#http_class_http_serverresponse\"\u003E\u003Ccode\u003Ehttp.Response\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003ENode.js API 的 Response 对象。如果 Nuxt 以中间件形式使用的话，这个对象就根据你所使用的框架而定。\u003Cem\u003E\u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E 不可用\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eredirect\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EFunction\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E用这个方法重定向用户请求到另一个路由。状态码在服务端被使用，默认 302 \u003Ccode\u003Eredirect([status,] path [, query])\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eerror\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EFunction\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端 &amp; 服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E用这个方法展示错误页：\u003Ccode\u003Eerror(params)\u003C\u002Fcode\u003E 。\u003Ccode\u003Eparams\u003C\u002Fcode\u003E 参数应该包含 \u003Ccode\u003EstatusCode\u003C\u002Fcode\u003E 和 \u003Ccode\u003Emessage\u003C\u002Fcode\u003E 字段\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EnuxtState\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EObject\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E客户端\u003C\u002Ftd\u003E\n\u003Ctd\u003ENuxt 状态，在使用 \u003Ccode\u003EbeforeNuxtRender\u003C\u002Fcode\u003E 之前，用于客户端获取 Nuxt 状态，仅在 \u003Ccode\u003Euniversal\u003C\u002Fcode\u003E 模式下可用\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EbeforeNuxtRender(fn)\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003EFunction\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E服务端\u003C\u002Ftd\u003E\n\u003Ctd\u003E使用此方法更新 \u003Ccode\u003E__NUXT__\u003C\u002Fcode\u003E 在客户端呈现的变量，\u003Ccode\u003Efn\u003C\u002Fcode\u003E 调用 (可以是异步) \u003Ccode\u003E{ Components, nuxtState }\u003C\u002Fcode\u003E ，参考 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fblob\u002Fcf6b0df45f678c5ac35535d49710c606ab34787d\u002Ftest\u002Ffixtures\u002Fbasic\u002Fpages\u002Fspecial-state.vue\"\u003E示例\u003C\u002Fa\u003E\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n"},contributors:[{author:"xuexb"},{author:"warriorBrian"},{author:"LeoZeda"},{author:"Hacker233"}]}],fetch:[],mutations:[]});