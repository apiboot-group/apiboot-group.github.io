__NUXT_JSONP__("/api/configuration-loading", {data:[{},{path:"\u002Fzh\u002Fapi\u002Fconfiguration-loading",section:"api",page:{attrs:{title:"API: loading 属性配置",description:"在页面切换的时候，Nuxt.js 使用内置的加载组件显示加载进度条。你可以定制它的样式，禁用或者创建自己的加载组件。"},body:"\u003Ch1 id=\"loading-属性配置\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#loading-属性配置\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003Eloading 属性配置\u003C\u002Fh1\u003E\u003Cul\u003E\n\u003Cli\u003E类型： \u003Ccode\u003EBoolean\u003C\u002Fcode\u003E 或 \u003Ccode\u003EObject\u003C\u002Fcode\u003E 或 \u003Ccode\u003EString\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E在页面切换的时候，Nuxt.js 使用内置的加载组件显示加载进度条。你可以定制它的样式，禁用或者创建自己的加载组件。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E在你的组件中你可以使用\u003Ccode\u003Ethis.$nuxt.$loading.start()\u003C\u002Fcode\u003E来启动加载条。使用\u003Ccode\u003Ethis.$nuxt.$loading.finish()\u003C\u002Fcode\u003E来使加载条结束。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs javascript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  mounted () {\n    \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$nextTick(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.$loading.start()\n\n      \u003Cspan class=\"hljs-built_in\"\u003EsetTimeout\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.$loading.finish(), \u003Cspan class=\"hljs-number\"\u003E500\u003C\u002Fspan\u003E)\n    })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E如果要在\u003Ccode\u003Emounted\u003C\u002Fcode\u003E方法中启动它，请确保使用\u003Ccode\u003Ethis.$nextTick\u003C\u002Fcode\u003E来调用它，因为\u003Ccode\u003E$loading\u003C\u002Fcode\u003E可能无法立即使用。\u003C\u002Fp\u003E\n\u003Ch2 id=\"禁用加载进度条\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#禁用加载进度条\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E禁用加载进度条\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003E类型： \u003Ccode\u003EBoolean\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E页面切换的时候如果不想显示加载进度条，可以在 \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E 里面增加 \u003Ccode\u003Eloading: false\u003C\u002Fcode\u003E 的配置：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-built_in\"\u003Emodule\u003C\u002Fspan\u003E.exports = {\n  \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"个性化加载进度条\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#个性化加载进度条\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E个性化加载进度条\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003E类型： \u003Ccode\u003EObject\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E以下表格为进度条定制化时可用到的配置项及其说明。\u003C\u002Fp\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003E键\u003C\u002Fth\u003E\n\u003Cth\u003E类型\u003C\u002Fth\u003E\n\u003Cth\u003E默认值\u003C\u002Fth\u003E\n\u003Cth\u003E描述\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ecolor\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EString\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E&#39;black&#39;\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E进度条的颜色\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003EfailedColor\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EString\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E&#39;red&#39;\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E页面加载失败时的颜色 （当 \u003Ccode\u003Edata\u003C\u002Fcode\u003E 或 \u003Ccode\u003Efetch\u003C\u002Fcode\u003E 方法返回错误时）。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eheight\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EString\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E&#39;2px&#39;\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E进度条的高度 (在进度条元素的 \u003Ccode\u003Estyle\u003C\u002Fcode\u003E 属性上体现)。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ethrottle\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ENumber\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E200\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E在ms中，在显示进度条之前等待指定的时间。用于防止条形闪烁。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eduration\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003ENumber\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003E5000\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E进度条的最大显示时长，单位毫秒。Nuxt.js 假设页面在该时长内加载完毕。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Econtinuous\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBoolean\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E当加载时间超过\u003Ccode\u003Eduration\u003C\u002Fcode\u003E时，保持动画进度条。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ecss\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBoolean\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Etrue\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E设置为false以删除默认进度条样式（并添加自己的样式）。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Ertl\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003EBoolean\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Ccode\u003Efalse\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E从右到左设置进度条的方向。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Cp\u003E举个例子，一个5像素高的蓝色进度条，可以在 \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E 中配置如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-built_in\"\u003Emodule\u003C\u002Fspan\u003E.exports = {\n  \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;blue&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Eheight\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;5px&#x27;\u003C\u002Fspan\u003E\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"自定义加载组件\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#自定义加载组件\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E自定义加载组件\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003E类型： \u003Ccode\u003EString\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E你可以新建一个加载组件替代 Nuxt.js 默认的。\n使用自己的加载组件，需要在 \u003Ccode\u003Eloading\u003C\u002Fcode\u003E 配置项里指定组件的路径，Nuxt.js 会自动调用该组件。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E自定义组件需要实现以下接口方法：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003E方法\u003C\u002Fth\u003E\n\u003Cth\u003E是否必须\u003C\u002Fth\u003E\n\u003Cth\u003E描述\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Estart()\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E是\u003C\u002Ftd\u003E\n\u003Ctd\u003E路由更新（即浏览器地址变化）时调用, 请在该方法内显示组件。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Efinish()\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E是\u003C\u002Ftd\u003E\n\u003Ctd\u003E路由更新完毕（即\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E方法调用完成且页面加载完）时调用，请在该方法内隐藏组件。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Efail(error)\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003E否\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E路由更新失败时调用（如\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E方法返回异常）。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Eincrease(num)\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E\u003Cem\u003E否\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E页面加载过程中调用, \u003Ccode\u003Enum\u003C\u002Fcode\u003E 是小于 100 的整数。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Cp\u003E我们可以在 \u003Ccode\u003Ecomponents\u003C\u002Fcode\u003E 目录下创建自定义的加载组件，如 \u003Ccode\u003Ecomponents\u002Floading.vue\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Elang\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;html&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;loading-page&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;loading&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003ELoading...\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Edata\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E ({\n    \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n  }),\n  \u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n    start () {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.loading = \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E\n    },\n    finish () {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.loading = \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.loading-page\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eposition\u003C\u002Fspan\u003E: fixed;\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eleft\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ewidth\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E100%\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eheight\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E100%\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Ergba\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E255\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E255\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E255\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E0.8\u003C\u002Fspan\u003E);\n  \u003Cspan class=\"hljs-attribute\"\u003Etext-align\u003C\u002Fspan\u003E: center;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-top\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E200px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-size\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E30px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-family\u003C\u002Fspan\u003E: sans-serif;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E然后, 更新 \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E 告诉 Nuxt.js 使用自定义加载组件：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-built_in\"\u003Emodule\u003C\u002Fspan\u003E.exports = {\n  \u003Cspan class=\"hljs-attr\"\u003Eloading\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002Floading.vue&#x27;\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"进度条时长说明\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#进度条时长说明\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E进度条时长说明\u003C\u002Fh2\u003E\u003Cp\u003ELoading组件不可能事先知道多长时间。加载新页面将需要。因此，无法将进度条准确地设置为100%的加载时间。\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt的加载组件通过让你设置 \u003Ccode\u003Eduration\u003C\u002Fcode\u003E 来部分解决这个问题，这应该设置为 \u003Cem\u003Eguestimate\u003C\u002Fem\u003E 加载过程需要多长时间。 除非您使用自定义加载组件，否则进度条将始终在 \u003Ccode\u003Eduration\u003C\u002Fcode\u003E 时间内从0%移至100%（无论实际进度如何）。 当加载时间超过 \u003Ccode\u003Eduration\u003C\u002Fcode\u003E 时，进度条将保持100%直到加载完成。\u003C\u002Fp\u003E\n\u003Cp\u003E您可以通过将\u003Ccode\u003Econtinuous\u003C\u002Fcode\u003E设置为true来更改默认行为，然后在达到100%后，进度条将在\u003Ccode\u003Eduration\u003C\u002Fcode\u003E时间内再次收缩回0%。当达到0%后仍未完成加载时，它将再次从0%开始增长到100%，这将重复直到加载完成。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cem\u003E持续进度条的示例：\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cimg src=\"\u002Fapi-continuous-loading.gif\" alt=\"continuous loading\"\u002F\u003E\n"},contributors:[{author:"warriorBrian"},{author:"Atinux"},{author:"MiffyCooper"}]}],fetch:[],mutations:[]});