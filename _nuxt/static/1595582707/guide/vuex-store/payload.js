__NUXT_JSONP__("/guide/vuex-store", {data:[{},{path:"\u002Fzh\u002Fguide\u002Fvuex-store",section:"guide",page:{attrs:{title:"Vuex 状态树",description:"对于每个大项目来说，使用状态树 (store) 管理状态 (state) 十分有必要。这就是为什么 Nuxt.js 内核实现了 Vuex。"},body:"\u003Cblockquote\u003E\n\u003Cp\u003E对于每个大项目来说，使用状态树 (store) 管理状态 (state) 十分有必要。这就是为什么 Nuxt.js 内核实现了 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvuex\"\u003EVuex\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cdiv class=\"Promo__Video\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fvueschool.io\u002Flessons\u002Futilising-the-vuex-store-nuxtjs?friend=nuxt\" target=\"_blank\"\u003E\n    \u003Cp class=\"Promo__Video__Icon\"\u003E\n    在Vue School 上观看关于\u003Cstrong\u003ENuxt.js 和 Vuex\u003C\u002Fstrong\u003E 的免费课程\n    \u003C\u002Fp\u003E\n  \u003C\u002Fa\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch2 id=\"使用状态树\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#使用状态树\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E使用状态树\u003C\u002Fh2\u003E\u003Cp\u003ENuxt.js 会尝试找到src目录（默认是应用根目录）下的 \u003Ccode\u003Estore\u003C\u002Fcode\u003E 目录，如果该目录存在，它将做以下的事情：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E引用 \u003Ccode\u003Evuex\u003C\u002Fcode\u003E 模块\u003C\u002Fli\u003E\n\u003Cli\u003E将 \u003Ccode\u003Evuex\u003C\u002Fcode\u003E 模块 加到 vendors 构建配置中去\u003C\u002Fli\u003E\n\u003Cli\u003E设置 \u003Ccode\u003EVue\u003C\u002Fcode\u003E 根实例的 \u003Ccode\u003Estore\u003C\u002Fcode\u003E 配置项\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003ENuxt.js 支持两种使用 \u003Ccode\u003Estore\u003C\u002Fcode\u003E 的方式，你可以择一使用：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003E模块方式：\u003C\u002Fstrong\u003E \u003Ccode\u003Estore\u003C\u002Fcode\u003E 目录下的每个 \u003Ccode\u003E.js\u003C\u002Fcode\u003E 文件会被转换成为状态树\u003Ca href=\"http:\u002F\u002Fvuex.vuejs.org\u002Fen\u002Fmodules.html\"\u003E指定命名的子模块\u003C\u002Fa\u003E （当然，\u003Ccode\u003Eindex\u003C\u002Fcode\u003E 是根模块）\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cp\u003E\u003Cstrong\u003EClassic(不建议使用)：\u003C\u002Fstrong\u003E \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E返回创建Vuex.Store实例的方法。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E无论使用那种模式，您的\u003Ccode\u003Estate\u003C\u002Fcode\u003E的值应该\u003Cstrong\u003E始终是\u003C\u002Fstrong\u003E\u003Ccode\u003Efunction\u003C\u002Fcode\u003E，为了避免返回引用类型，会导致多个实例相互影响。\u003C\u002Fp\u003E\n\u003Ch3 id=\"普通方式\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#普通方式\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E普通方式\u003C\u002Fh3\u003E\u003Cblockquote\u003E\n\u003Cp\u003ENuxt.js允许您拥有一个 \u003Ccode\u003Estore\u003C\u002Fcode\u003E 目录，其中包含与模块对应的每个文件。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E首先，只需将状态导出为 \u003Cem\u003E函数\u003C\u002Fem\u003E，将变量和操作作为 \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E 中的对象导出：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E state = \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E ({\n  \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n})\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E mutations = {\n  increment (state) {\n    state.counter++\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E然后，您可以拥有 \u003Ccode\u003Estore\u002Ftodos.js\u003C\u002Fcode\u003E 文件：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E state = \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E ({\n  \u003Cspan class=\"hljs-attr\"\u003Elist\u003C\u002Fspan\u003E: []\n})\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E mutations = {\n  add (state, text) {\n    state.list.push({\n      text,\n      \u003Cspan class=\"hljs-attr\"\u003Edone\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n    })\n  },\n  remove (state, { todo }) {\n    state.list.splice(state.list.indexOf(todo), \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E)\n  },\n  toggle (state, todo) {\n    todo.done = !todo.done\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EVuex将如下创建：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Vuex.Store({\n  \u003Cspan class=\"hljs-attr\"\u003Estate\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E ({\n    \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n  }),\n  \u003Cspan class=\"hljs-attr\"\u003Emutations\u003C\u002Fspan\u003E: {\n    increment (state) {\n      state.counter++\n    }\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Emodules\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Etodos\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Enamespaced\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Estate\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E ({\n        \u003Cspan class=\"hljs-attr\"\u003Elist\u003C\u002Fspan\u003E: []\n      }),\n      \u003Cspan class=\"hljs-attr\"\u003Emutations\u003C\u002Fspan\u003E: {\n        add (state, { text }) {\n          state.list.push({\n            text,\n            \u003Cspan class=\"hljs-attr\"\u003Edone\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n          })\n        },\n        remove (state, { todo }) {\n          state.list.splice(state.list.indexOf(todo), \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E)\n        },\n        toggle (state, { todo }) {\n          todo.done = !todo.done\n        }\n      }\n    }\n  }\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E在您的 \u003Ccode\u003Epages\u002Ftodos.vue\u003C\u002Fcode\u003E 中，使用 \u003Ccode\u003Etodos\u003C\u002Fcode\u003E 模块：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;todo in todos&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Einput\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;checkbox&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:checked\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;todo.done&quot;\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Echange\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;toggle(todo)&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:class\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ done: todo.done }&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ todo.text }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Einput\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;What needs to be done?&quot;\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Ekeyup.enter\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;addTodo&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E { mapMutations } \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vuex&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomputed\u003C\u002Fspan\u003E: {\n    todos () {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$store.state.todos.list\n    }\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n    addTodo (e) {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$store.commit(\u003Cspan class=\"hljs-string\"\u003E&#x27;todos\u002Fadd&#x27;\u003C\u002Fspan\u003E, e.target.value)\n      e.target.value = \u003Cspan class=\"hljs-string\"\u003E&#x27;&#x27;\u003C\u002Fspan\u003E\n    },\n    ...mapMutations({\n      \u003Cspan class=\"hljs-attr\"\u003Etoggle\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;todos\u002Ftoggle&#x27;\u003C\u002Fspan\u003E\n    })\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.done\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etext-decoration\u003C\u002Fspan\u003E: line-through;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003E模块方法也适用于顶级定义，而无需在 \u003Ccode\u003Estore\u003C\u002Fcode\u003E 目录中实现子目录\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E示例：您创建文件 \u003Ccode\u003Estore\u002Fstate.js\u003C\u002Fcode\u003E 并添加以下内容\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E () =&gt; ({\n  \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E相应的可以在文件夹中添加 \u003Ccode\u003Estore\u002Fmutations.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  increment (state) {\n    state.counter++\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"模块文件\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#模块文件\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E模块文件\u003C\u002Fh3\u003E\u003Cp\u003E您可以将模块文件分解为单独的文件：\u003Ccode\u003Estate.js\u003C\u002Fcode\u003E,\u003Ccode\u003Eactions.js\u003C\u002Fcode\u003E,\u003Ccode\u003Emutations.js\u003C\u002Fcode\u003E和\u003Ccode\u003Egetters.js\u003C\u002Fcode\u003E。如果您使用\u003Ccode\u003Eindex.js\u003C\u002Fcode\u003E来维护\u003Ccode\u003Estate\u003C\u002Fcode\u003E,\u003Ccode\u003Egetters\u003C\u002Fcode\u003E,\u003Ccode\u003Eactions\u003C\u002Fcode\u003E和\u003Ccode\u003Emutations\u003C\u002Fcode\u003E，同时具有单个单独的操作文件，那么仍然可以正确识别该文件。\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E注意：在使用拆分文件模块时，必须记住使用\u003Cstrong\u003E箭头函数功能\u003C\u002Fstrong\u003E， \u003Ccode\u003Ethis\u003C\u002Fcode\u003E 在词法上可用。词法范围\u003Ccode\u003Ethis\u003C\u002Fcode\u003E意味着它总是指向引用\u003Cstrong\u003E箭头函数\u003C\u002Fstrong\u003E的所有者。如果未包含\u003Cstrong\u003E箭头函数\u003C\u002Fstrong\u003E，那么\u003Ccode\u003Ethis\u003C\u002Fcode\u003E将是未定义的(\u003Ccode\u003Eundefined\u003C\u002Fcode\u003E)。解决方案是使用 &quot;normal&quot; 功能，该功能会将\u003Ccode\u003Ethis\u003C\u002Fcode\u003E指向自己的作用域，因此可以使用。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch3 id=\"插件\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#插件\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E插件\u003C\u002Fh3\u003E\u003Cp\u003E您可以将其他插件添加到store（在模块模式下），将其放入\u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E文件中：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E myPlugin \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;myPlugin&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E plugins = [ myPlugin ]\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E state = \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E ({\n  \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n})\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E mutations = {\n  increment (state) {\n    state.counter++\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E有关插件的更多信息: \u003Ca href=\"https:\u002F\u002Fvuex.vuejs.org\u002Fen\u002Fplugins.html\"\u003EVuex 文档\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"fetch-方法\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#fetch-方法\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003Efetch 方法\u003C\u002Fh2\u003E\u003Cblockquote\u003E\n\u003Cp\u003Efetch 方法会在渲染页面前被调用，作用是填充状态树 (store) 数据，与 asyncData 方法类似，不同的是它不会设置组件的数据。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E关于 \u003Ccode\u003Efetch\u003C\u002Fcode\u003E 方法的更多信息，请参考 \u003Ca href=\"\u002Fapi\u002Fpages-fetch\"\u003E页面 fetch 方法API\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n\u003Ch2 id=\"nuxtserverinit-方法\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#nuxtserverinit-方法\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EnuxtServerInit 方法\u003C\u002Fh2\u003E\u003Cp\u003E如果在状态树中指定了 \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E 方法，Nuxt.js 调用它的时候会将页面的上下文对象作为第2个参数传给它（服务端调用时才会酱紫哟）。当我们想将服务端的一些数据传到客户端时，这个方法是灰常好用的。\u003C\u002Fp\u003E\n\u003Cp\u003E举个例子，假设我们服务端的会话状态树里可以通过 \u003Ccode\u003Ereq.session.user\u003C\u002Fcode\u003E 来访问当前登录的用户。将该登录用户信息传给客户端的状态树，我们只需更新 \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E 如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eactions: {\n  nuxtServerInit ({ commit }, { req }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (req.session.user) {\n      commit(\u003Cspan class=\"hljs-string\"\u003E&#x27;user&#x27;\u003C\u002Fspan\u003E, req.session.user)\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003E如果你使用_状态树模块化_的模式，只有主模块（即 \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E）适用设置该方法（其他模块设置了也不会被调用）。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E这时\u003Ca href=\"\u002Fapi\u002Fcontext\"\u003Econtext\u003C\u002Fa\u003E被赋予\u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E作为第二个参数，它与\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E或\u003Ccode\u003Efetch\u003C\u002Fcode\u003E方法相同。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E 方法接收的上下文对象和 \u003Ccode\u003Efetch\u003C\u002Fcode\u003E 的一样，但不包括 \u003Ccode\u003Econtext.redirect()\u003C\u002Fcode\u003E 和 \u003Ccode\u003Econtext.error()\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E注意：异步\u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E操作必须返回Promise来通知\u003Ccode\u003Enuxt\u003C\u002Fcode\u003E服务器等待它们。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eactions: {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E nuxtServerInit({ dispatch }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E dispatch(\u003Cspan class=\"hljs-string\"\u003E&#x27;core\u002Fload&#x27;\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"vuex-严格模式\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#vuex-严格模式\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EVuex 严格模式\u003C\u002Fh2\u003E\u003Cp\u003E默认情况下，在开发模式下启用严格模式，在生产模式下关闭模式。要在dev中禁用严格模式，请遵循以下示例。\u003C\u002Fp\u003E\n\u003Ch3 id=\"module-mode\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#module-mode\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EModule Mode\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Eexport const strict = false\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"经典模式\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#经典模式\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E经典模式\u003C\u002Fh3\u003E\u003Cblockquote\u003E\n\u003Cp\u003E此功能已经弃用，将在Nuxt 3中删除。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E要使用经典模式创建Vuex，我们应该创建\u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E到处返回Vuex实例的方法的文件：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vuex \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vuex&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E createStore = \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Vuex.Store({\n    \u003Cspan class=\"hljs-attr\"\u003Estrict\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Estate\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E ({\n      \u003Cspan class=\"hljs-attr\"\u003Ecounter\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\n    }),\n    \u003Cspan class=\"hljs-attr\"\u003Emutations\u003C\u002Fspan\u003E: {\n      increment (state) {\n        state.counter++\n      }\n    }\n  })\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E createStore\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cblockquote\u003E\n\u003Cp\u003E我们不需要安装，因为Vuex由Nuxt.js提供。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E我们现在可以在我们的组件中使用\u003Ccode\u003Ethis.$store\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$store.commit(&#x27;increment&#x27;)&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $store.state.counter }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},contributors:[{author:"warriorBrian"},{author:"pi0"},{author:"yuushimizu"},{author:"alexchopin"},{author:"manniL"},{author:"CodinCat"},{author:"Atinux"},{author:"acidjazz"},{author:"yammyxing"},{author:"1353hk"},{author:"zollero"}]}],fetch:[],mutations:[]});