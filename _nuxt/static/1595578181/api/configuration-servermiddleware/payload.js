__NUXT_JSONP__("/api/configuration-servermiddleware", {data:[{},{path:"\u002Fzh\u002Fapi\u002Fconfiguration-servermiddleware",section:"api",page:{attrs:{title:"API: serverMiddleware 属性",description:"定义服务器端渲染中间件。"},body:"\u003Ch1 id=\"服务器端渲染中间件-servermiddleware-属性\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#服务器端渲染中间件-servermiddleware-属性\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E服务器端渲染中间件(serverMiddleware) 属性\u003C\u002Fh1\u003E\u003Cul\u003E\n\u003Cli\u003E类型: \u003Ccode\u003EArray\u003C\u002Fcode\u003E\u003Cul\u003E\n\u003Cli\u003EItems: \u003Ccode\u003EString\u003C\u002Fcode\u003E 或 \u003Ccode\u003EObject\u003C\u002Fcode\u003E 或 \u003Ccode\u003EFunction\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ENuxt在内部创建一个\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsenchalabs\u002Fconnect\"\u003E连接\u003C\u002Fa\u003E实例，所以我们可以将我们的中间件注册到它的堆栈，并有机会提供更多的路由，如API，而无需\u003Cstrong\u003E外部服务器\u003C\u002Fstrong\u003E。因为连接本身是一个中间件，所以注册的中间件既可以用于\u003Ccode\u003Enuxt start\u003C\u002Fcode\u003E，也可以用作具有编程用法的中间件，如\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fexpress-template\"\u003Eexpress-template\u003C\u002Fa\u003E。Nuxt \u003Ca href=\"\u002Fguide\u002Fmodules\"\u003EModules\u003C\u002Fa\u003E还可以使用\u003Ca href=\"\u002Fapi\u002Finternals-module-container#addservermiddleware-middleware-\"\u003Ethis.addServerMiddleware()\u003C\u002Fa\u003E设置\u003Ccode\u003EserverMiddleware\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch2 id=\"服务器端渲染中间件-servermiddleware-vs-中间件-middleware-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#服务器端渲染中间件-servermiddleware-vs-中间件-middleware-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E服务器端渲染中间件(serverMiddleware) vs 中间件(middleware)!\u003C\u002Fh2\u003E\u003Cp\u003E不要将它与客户端或SSR中Vue在每条路由之前调用的\u003Ca href=\"\u002Fguide\u002Frouting#middleware\"\u003Eroutes middleware\u003C\u002Fa\u003E混淆。\u003Ccode\u003EserverMiddleware\u003C\u002Fcode\u003E只是在vue-server-renderer\u003Cstrong\u003E之前\u003C\u002Fstrong\u003E在服务器端运行，可用于服务器特定的任务，如处理API请求或服务资产。\u003C\u002Fp\u003E\n\u003Ch2 id=\"用法\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#用法\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E用法\u003C\u002Fh2\u003E\u003Cp\u003E如果中间件是\u003Ccode\u003EString\u003C\u002Fcode\u003E，Nuxt.js将尝试自动解析它。\u003C\u002Fp\u003E\n\u003Cp\u003E例如 (\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E):\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E serveStatic \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;serve-static&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EserverMiddleware\u003C\u002Fspan\u003E: [\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Will register redirect-ssl npm package\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-string\"\u003E&#x27;redirect-ssl&#x27;\u003C\u002Fspan\u003E,\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Will register file from project api directory to handle \u002Fapi\u002F* requires\u003C\u002Fspan\u003E\n    { \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fapi&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ehandler\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fapi\u002Findex.js&#x27;\u003C\u002Fspan\u003E },\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F We can create custom instances too\u003C\u002Fspan\u003E\n    { \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fstatic2&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ehandler\u003C\u002Fspan\u003E: serveStatic(__dirname + \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fstatic2&#x27;\u003C\u002Fspan\u003E) }\n  ]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp class=\"Alert Alert--danger\"\u003E\n    \u003Cb\u003E提示! \u003C\u002Fb\u003E\n    如果您不希望中间件注册所有路由，则必须使用具有特定路径的`object`，否则nuxt默认处理程序将不起作用！\n\u003C\u002Fp\u003E\n\n\u003Ch2 id=\"自定义服务器端渲染中间件-server-middleware-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#自定义服务器端渲染中间件-server-middleware-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E自定义服务器端渲染中间件 (Server Middleware)\u003C\u002Fh2\u003E\u003Cp\u003E编写自定义中间件也是可能的。有关更多信息，请参阅 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsenchalabs\u002Fconnect#appusefn\"\u003EConnect Docs\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EMiddleware (\u003Ccode\u003Eapi\u002Flogger.js\u003C\u002Fcode\u003E):\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Ereq, res, next\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F req 是 Node.js http request 对象\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(req.path)\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F res 是 Node.js http response 对象\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F next是一个调用下一个中间件的函数\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 如果您的中间件不是最终执行，请不要忘记在最后调用next！\u003C\u002Fspan\u003E\n  next()\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENuxt 配置 (\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E):\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EserverMiddleware: [\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fapi\u002Flogger&#x27;\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E"},contributors:[{author:"warriorBrian"}]}],fetch:[],mutations:[]});