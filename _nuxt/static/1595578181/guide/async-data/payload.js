__NUXT_JSONP__("/guide/async-data", {data:[{},{path:"\u002Fzh\u002Fguide\u002Fasync-data",section:"guide",page:{attrs:{title:"异步数据",description:"Nuxt.js 扩展了 Vue.js，增加了一个叫 `asyncData` 的方法，使得我们可以在设置组件的数据之前能异步获取或处理数据。"},body:"\u003Cblockquote\u003E\n\u003Cp\u003ENuxt.js 扩展了 Vue.js，增加了一个叫 \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E 的方法，使得我们可以在设置组件的数据之前能异步获取或处理数据。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cdiv\u003E\n  \u003Ca href=\"http:\u002F\u002Fvueschool.io\u002F?friend=nuxt\" target=\"_blank\" class=\"Promote\"\u003E\n    \u003Cimg src=\"\u002Fasync-data-with-nuxtjs.png\" srcset=\"\u002Fasync-data-with-nuxtjs-2x.png 2x\" alt=\"AsyncData by vueschool\"\u002F\u003E\n    \u003Cdiv class=\"Promote__Content\"\u003E\n      \u003Ch4 class=\"Promote__Content__Title\"\u003E使用Nuxt.js的异步数据\u003C\u002Fh4\u003E\n      \u003Cp class=\"Promote__Content__Description\"\u003E了解如何使用Nuxt.js管理异步数据。\u003C\u002Fp\u003E\n      \u003Cp class=\"Promote__Content__Signature\"\u003E由VueSchool制作视频课程，用于支持Nuxt.js开发。\u003C\u002Fp\u003E\n    \u003C\u002Fdiv\u003E\n  \u003C\u002Fa\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch2 id=\"asyncdata-方法\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#asyncdata-方法\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EasyncData 方法\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E方法会在组件（\u003Cstrong\u003E限于页面组件\u003C\u002Fstrong\u003E）每次加载之前被调用。它可以在服务端或路由更新之前被调用。\n在这个方法被调用的时候，第一个参数被设定为当前页面的\u003Ca href=\"\u002Fapi#%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AF%B9%E8%B1%A1\"\u003E上下文对象\u003C\u002Fa\u003E，你可以利用 \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E方法来获取数据，Nuxt.js 会将 \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E 返回的数据融合组件 \u003Ccode\u003Edata\u003C\u002Fcode\u003E 方法返回的数据一并返回给当前组件。\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--orange\"\u003E\n\n\u003Cp\u003E注意：由于\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E方法是在组件 \u003Cstrong\u003E初始化\u003C\u002Fstrong\u003E 前被调用的，所以在方法内是没有办法通过 \u003Ccode\u003Ethis\u003C\u002Fcode\u003E 来引用组件的实例对象。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003ENuxt.js 提供了几种不同的方法来使用 \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E 方法，你可以选择自己熟悉的一种来用：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E返回一个 \u003Ccode\u003EPromise\u003C\u002Fcode\u003E, nuxt.js会等待该\u003Ccode\u003EPromise\u003C\u002Fcode\u003E被解析之后才会设置组件的数据，从而渲染组件.\u003C\u002Fli\u003E\n\u003Cli\u003E使用 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Flukehoban\u002Fecmascript-asyncawait\"\u003Easync 或 await\u003C\u002Fa\u003E (\u003Ca href=\"https:\u002F\u002Fzeit.co\u002Fblog\u002Fasync-and-await\"\u003E了解更多\u003C\u002Fa\u003E)\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cdiv class=\"Alert Alert--grey\"\u003E\n\n\u003Cp\u003E我们使用 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmzabriskie\u002Faxios\"\u003Eaxios\u003C\u002Fa\u003E 重构 HTTP 请求, 我们 \u003Cstrong\u003E强烈建议您\u003C\u002Fstrong\u003E 使用我们的 \u003Ca href=\"https:\u002F\u002Faxios.nuxtjs.org\u002F\"\u003Eaxios 模块\u003C\u002Fa\u003E 用于您的Nuxt项目中。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003E如果您的项目中直接使用了\u003Ccode\u003Enode_modules\u003C\u002Fcode\u003E中的\u003Ccode\u003Eaxios\u003C\u002Fcode\u003E，并且使用\u003Ccode\u003Eaxios.interceptors\u003C\u002Fcode\u003E添加拦截器对请求或响应数据进行了处理，确保使用 \u003Ccode\u003Eaxios.create\u003C\u002Fcode\u003E创建实例后再使用。否则多次刷新页面请求服务器，服务端渲染会重复添加拦截器，导致数据处理错误。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E axios \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;axios&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E myaxios = axios.create({\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n})\nmyaxios.interceptors.response.use(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Eresponse\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E response.data\n}, \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Eerror\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n})\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"返回-promise\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#返回-promise\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E返回 Promise\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  asyncData ({ params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n      .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: res.data.title }\n      })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"使用-async或await\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#使用-async或await\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E使用 async或await\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { data } = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: data.title }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"使用-回调函数\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#使用-回调函数\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E使用 回调函数\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  asyncData ({ params }, callback) {\n    axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n      .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        callback(\u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E, { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: res.data.title })\n      })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"返回-对象\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#返回-对象\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E返回 对象\u003C\u002Fh3\u003E\u003Cp\u003E如果组件的数据不需要异步获取或处理，可以直接返回指定的字面对象作为组件的数据。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  data () {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Efoo\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;bar&#x27;\u003C\u002Fspan\u003E }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"数据的展示\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#数据的展示\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E数据的展示\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E 方法返回的数据在融合 \u003Ccode\u003Edata\u003C\u002Fcode\u003E 方法返回的数据后，一并返回给模板进行展示，如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"上下文对象\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#上下文对象\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E上下文对象\u003C\u002Fh2\u003E\u003Cp\u003E可通过 \u003Ca href=\"\u002Fapi\u002Fcontext\"\u003EAPI \u003Ccode\u003Econtext\u003C\u002Fcode\u003E\u003C\u002Fa\u003E 来了解该对象的所有属性和方法。\u003C\u002Fp\u003E\n\u003Ch3 id=\"使用-code-req-code-code-res-code-code-request-code-code-response-code-对象\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#使用-code-req-code-code-res-code-code-request-code-code-response-code-对象\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E使用 \u003Ccode\u003Ereq\u003C\u002Fcode\u003E\u002F\u003Ccode\u003Eres\u003C\u002Fcode\u003E(\u003Ccode\u003Erequest\u003C\u002Fcode\u003E\u002F\u003Ccode\u003Eresponse\u003C\u002Fcode\u003E) 对象\u003C\u002Fh3\u003E\u003Cp\u003E在服务器端调用\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E时，您可以访问用户请求的\u003Ccode\u003Ereq\u003C\u002Fcode\u003E和\u003Ccode\u003Eres\u003C\u002Fcode\u003E对象。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ req, res }) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 请检查您是否在服务器端\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 使用 req 和 res\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Ehost\u003C\u002Fspan\u003E: req.headers.host }\n    }\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {}\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"访问动态路由数据\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#访问动态路由数据\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E访问动态路由数据\u003C\u002Fh3\u003E\u003Cp\u003E您可以使用\u003Ccode\u003E注入\u003C\u002Fcode\u003EasyncData属性的\u003Ccode\u003Econtext\u003C\u002Fcode\u003E对象来访问动态路由数据。例如，可以使用配置它的文件或文件夹的名称访问动态路径参数。所以，如果你定义一个名为\u003Ccode\u003E_slug.vue\u003C\u002Fcode\u003E的文件，您可以通过\u003Ccode\u003Econtext.params.slug\u003C\u002Fcode\u003E来访问它。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E slug = params.slug \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F When calling \u002Fabc the slug will be &quot;abc&quot;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { slug }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"监听-query-参数改变\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#监听-query-参数改变\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E监听 query 参数改变\u003C\u002Fh3\u003E\u003Cp\u003E默认情况下，query的改变不会调用\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E方法。如果要监听这个行为，例如，在构建分页组件时，您可以设置应通过页面组件的\u003Ccode\u003EwatchQuery\u003C\u002Fcode\u003E属性监听参数。了解更多有关\u003Ca href=\"\u002Fapi\u002Fpages-watchquery\"\u003EAPI watchQuery\u003C\u002Fa\u003E的信息。\u003C\u002Fp\u003E\n\u003Ch2 id=\"错误处理\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#错误处理\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E错误处理\u003C\u002Fh2\u003E\u003Cp\u003ENuxt.js 在上下文对象\u003Ccode\u003Econtext\u003C\u002Fcode\u003E中提供了一个 \u003Ccode\u003Eerror(params)\u003C\u002Fcode\u003E 方法，你可以通过调用该方法来显示错误信息页面。\u003Ccode\u003Eparams.statusCode\u003C\u002Fcode\u003E 可用于指定服务端返回的请求状态码。\u003C\u002Fp\u003E\n\u003Cp\u003E以返回 \u003Ccode\u003EPromise\u003C\u002Fcode\u003E 的方式举个例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  asyncData ({ params, error }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n      .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: res.data.title }\n      })\n      .catch(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Ee\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        error({ \u003Cspan class=\"hljs-attr\"\u003EstatusCode\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Emessage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;Post not found&#x27;\u003C\u002Fspan\u003E })\n      })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E如果你使用 \u003Ccode\u003E回调函数\u003C\u002Fcode\u003E 的方式, 你可以将错误的信息对象直接传给该回调函数， Nuxt.js 内部会自动调用 \u003Ccode\u003Eerror\u003C\u002Fcode\u003E 方法：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  asyncData ({ params }, callback) {\n    axios.get(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fmy-api\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n      .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        callback(\u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E, { \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: res.data.title })\n      })\n      .catch(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Ee\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n        callback({ \u003Cspan class=\"hljs-attr\"\u003EstatusCode\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Emessage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;Post not found&#x27;\u003C\u002Fspan\u003E })\n      })\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E如果你想定制 Nuxt.js 默认的错误提示页面，请参考 \u003Ca href=\"\u002Fguide\u002Fviews#%E5%B8%83%E5%B1%80\"\u003E页面布局\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n"},contributors:[{author:"Atinux"},{author:"warriorBrian"},{author:"Chzfly"},{author:"alexchopin"},{author:"manniL"},{author:"pi0"},{author:"totzcc"},{author:"LeoZeda"},{author:"clarkdo"}]}],fetch:[],mutations:[]});