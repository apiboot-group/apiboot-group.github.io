__NUXT_JSONP__("/blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K){return {data:[{posts:[{path:"zh\u002Fblog\u002Fcreating-blog-with-nuxt-content.md",slug:F,readtime:{text:"36 min read",minutes:35.13,time:2107800,words:7026},title:D,description:"The Content module is a git files based headless CMS that provides powerful features when it comes to write blogs, documentation sites or just adding content to any regular website. In this post we will go through most of the benefits of this module and discover how we can create a blog with it.",imgUrl:"blog\u002Fcreating-blog-with-nuxt-content\u002Fmain.png",date:"2020-07-02T00:00:00.000Z",authors:[{name:l,avatarUrl:f,link:k}],tags:[a,"Content","Markdown"],body:"\u003Cp\u003EThe \u003Ca href=\"https:\u002F\u002Fcontent.nuxtjs.org\"\u003Econtent module\u003C\u002Fa\u003E is a git files based headless CMS that provides powerful features when it comes to write blogs, documentation sites or just adding content to any regular website. In this post we will go through most of the benefits of this module and discover how we can create a blog with it.\u003C\u002Fp\u003E\n\u003Cvideo poster=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Fdemo-blog-content_shk6kw.jpg\" loop=\"loop\" plays-inline=\"true\" controls=\"controls\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Fdemo-blog-content_shk6kw.webm\" type=\"video\u002Fwebm\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1592314331\u002Fdemo-blog-content_shk6kw.mp4\" type=\"video\u002Fmp4\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Fdemo-blog-content_shk6kw.ogv\" type=\"video\u002Fogg\"\u003E\n\u003C\u002Fvideo\u003E\n\n\u003Cp align=\"center\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fblog-with-nuxt-content.netlify.app\u002F\" target=\"_blank\" rel=\"noopener nofollow\"\u003EView demo\u003C\u002Fa\u003E \u002F \n  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-company\u002Fdemo-blog-nuxt-content\" target=\"_blank\" rel=\"noopener nofollow\"\u003ESource code\u003C\u002Fa\u003E\n\u003C\u002Fp\u003E\n\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#getting-started\"\u003EGetting started\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#installation\"\u003EInstallation\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#lets-create-our-markdown-page\"\u003ELet&#39;s create our markdown page\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#displaying-your-content\"\u003EDisplaying your content\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#default-injected-variables\"\u003EDefault Injected variables\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#custom-injected-variables\"\u003ECustom Injected variables\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#styling-our-markdown-content\"\u003EStyling our markdown content\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-an-icon-to-our-headings-anchor\"\u003EAdding an icon to our headings anchor\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#add-a-table-of-contents\"\u003EAdd a table of contents\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#use-html-into-your-markdown-files\"\u003EUse HTML into your markdown files\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-vue-component\"\u003EAdding a Vue component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-an-author-component-with-props\"\u003EAdding an Author component with props\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-code-block-to-your-post\"\u003EAdding a code block to your post\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-a-previous-and-next-component\"\u003ECreating a previous and next component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#working-with-the-api\"\u003EWorking with the API\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#list-all-the-blog-posts\"\u003EList all the blog posts\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-the-where-query-to-create-an-author-page\"\u003EUsing the where query to create an Author page\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#add-a-search-field\"\u003EAdd a search field\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#live-editing-our-content\"\u003ELive editing our content\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#generating-our-content\"\u003EGenerating our content\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"getting-started\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#getting-started\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EGetting started\u003C\u002Fh2\u003E\u003Ch3 id=\"installation\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#installation\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInstallation\u003C\u002Fh3\u003E\u003Cp\u003ETo get started with content module we will first need to install the module using npm or yarn. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Enpm install @nuxt\u002Fcontent\n\u002F\u002F or\nyarn add @nuxt\u002Fcontent\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen we can add it to our modules property inside our nuxt.config file. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Emodules\u003C\u002Fspan\u003E: [\n    \u003Cspan class=\"hljs-string\"\u003E&#x27;@nuxt\u002Fcontent&#x27;\u003C\u002Fspan\u003E\n  ]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EIf you have created a new project with \u003Ccode\u003Ecreate nuxt-app\u003C\u002Fcode\u003E you can choose to add the content module and therefore it will be installed for you. \u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"let-39-s-create-our-markdown-page\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#let-39-s-create-our-markdown-page\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELet&#39;s create our markdown page\u003C\u002Fh3\u003E\u003Cp\u003EThe content module works by reading the files in our \u003Ccode\u003Econtent\u002F\u003C\u002Fcode\u003E directory. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Emkdir content\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EIf you have created your project with \u003Ccode\u003Ecreate nuxt-app\u003C\u002Fcode\u003E, the \u003Ccode\u003Econtent\u002F\u003C\u002Fcode\u003E directory will be already created. \u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003ELet&#39;s create an \u003Ccode\u003Earticles\u002F\u003C\u002Fcode\u003E directory where we can add the articles for our blog.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Emkdir content\u002Farticles\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe content module can parse markdown, csv, yaml, json, json5 or xml. Let&#39;s create our first article with a markdown file:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Etouch content\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now add a title and text for our blog post: \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs markdown\"\u003E\u003Cspan class=\"hljs-section\"\u003E# My first blog post\u003C\u002Fspan\u003E\n\nWelcome to my first blog post using content module\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EIn markdown we create a \u003Ccode\u003E&lt;h1&gt;\u003C\u002Fcode\u003E title by using \u003Ccode\u003E#\u003C\u002Fcode\u003E. Make sure you leave a space between it and your blog title. For more info on writing in markdown see the \u003Ca href=\"https:\u002F\u002Fwww.markdownguide.org\u002Fbasic-syntax\"\u003Ebasic syntax guide\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"displaying-your-content\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#displaying-your-content\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDisplaying your content\u003C\u002Fh3\u003E\u003Cp\u003ETo display our content in our page, we can use a \u003Ca href=\"\u002Fguide\u002Frouting#dynamic-routes\"\u003Edynamic page\u003C\u002Fa\u003E by prefixing the page with an underscore(\u003Ccode\u003E_\u003C\u002Fcode\u003E). By creating a page component named \u003Ccode\u003E_slug.vue\u003C\u002Fcode\u003E inside our blog folder, we are able to use the \u003Ccode\u003Eparams.slug\u003C\u002Fcode\u003E variable provides by vue router to get the name of each article. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Etouch pages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen we can use \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E in our page component to fetch our article content before the page has been rendered. We can access to our content through the context by using the variable \u003Ccode\u003E$content\u003C\u002Fcode\u003E. As we want to fetch a dynamic page we also need to know which article to fetch with \u003Ccode\u003Eparams.slug\u003C\u002Fcode\u003E which is available to us through \u003Ca href=\"\u002Fapi\u002Fcontext\"\u003Ethe context\u003C\u002Fa\u003E. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ $content, params }) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F fetch our article here\u003C\u002Fspan\u003E\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EInside our \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E function we create a variable named \u003Ccode\u003Earticle\u003C\u002Fcode\u003E and fetch our content using the \u003Ccode\u003Eawait\u003C\u002Fcode\u003E followed by \u003Ccode\u003E$content\u003C\u002Fcode\u003E. We need to pass into \u003Ccode\u003E$content\u003C\u002Fcode\u003E what we want to fetch, which in our case is the article folder followed by the slug, which we get from our URL params. We then chain the fetch method to the end and return the article which will contain the result of our fetch.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ $content, params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E $content(\u003Cspan class=\"hljs-string\"\u003E&#x27;articles&#x27;\u003C\u002Fspan\u003E, params.slug).fetch()\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { article }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ETo display our content we are using the \u003Ccode\u003E&lt;nuxt-content \u002F&gt;\u003C\u002Fcode\u003E component by passing in the variable we returned into the \u003Ccode\u003Edocument\u003C\u002Fcode\u003E prop. In this example we have wrapped it in a HTML article tag as it is better semantic HTML but you can use a div or another HTML tag if you prefer. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-content\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:document\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now run our dev server and go to the route \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002Fblog\u002Fmy-first-blog-post\"\u003Ehttp:\u002F\u002Flocalhost:3000\u002Fblog\u002Fmy-first-blog-post\u003C\u002Fa\u003E and we should see our content from our markdown file. \u003C\u002Fp\u003E\n\u003Cimg alt=\"content from markdown\" src=\"\u002Fblog\u002Fcreating-blog-with-nuxt-content\u002Fget-started-with-nuxt-content.png\"\u003E\n\n\u003Ch3 id=\"default-injected-variables\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#default-injected-variables\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDefault Injected variables\u003C\u002Fh3\u003E\u003Cp\u003EThe nuxt content module gives us access to injected variables that we can access and show in our template. Let&#39;s take a look at the default variables that are injected into our document:  \u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003Ebody\u003C\u002Fstrong\u003E: body text\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Edir\u003C\u002Fstrong\u003E: directory\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eextension\u003C\u002Fstrong\u003E: file extension (.md in this example)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Epath\u003C\u002Fstrong\u003E: the file path\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eslug\u003C\u002Fstrong\u003E: the file slug\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Etoc\u003C\u002Fstrong\u003E: an array containing our table of contents\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EcreatedAt\u003C\u002Fstrong\u003E: the file creation date\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EupdatedAt\u003C\u002Fstrong\u003E: the date of the last file update\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EWe can access all these variables by using the \u003Ccode\u003Earticle\u003C\u002Fcode\u003E variable that we created earlier. \u003Ccode\u003Earticle\u003C\u002Fcode\u003E is an object that contains all these extra injected variables that we have access to. Let&#39;s inspect them by printing it out using a \u003Ccode\u003E&lt;pre&gt;\u003C\u002Fcode\u003E tag.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Epre\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E {{ article }} \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Epre\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow on our page we can see we have an object with a variable property which is an empty array and a body variable which has our h1 and p tag as well as some other info that we will look at later. If we scroll down you will see we have all the other variables that we have access to. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003E\u003Cspan class=\"hljs-string\"\u003E&quot;dir&quot;\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;\u002Farticles&quot;\u003C\u002Fspan\u003E,\n\u003Cspan class=\"hljs-string\"\u003E&quot;path&quot;\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;\u002Farticles\u002Fmy-first-blog-post&quot;\u003C\u002Fspan\u003E,\n\u003Cspan class=\"hljs-string\"\u003E&quot;extension&quot;\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;.md&quot;\u003C\u002Fspan\u003E,\n\u003Cspan class=\"hljs-string\"\u003E&quot;slug&quot;\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;my-first-blog-post&quot;\u003C\u002Fspan\u003E,\n\u003Cspan class=\"hljs-string\"\u003E&quot;createdAt&quot;\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;2020-06-22T10:58:51.640Z&quot;\u003C\u002Fspan\u003E,\n\u003Cspan class=\"hljs-string\"\u003E&quot;updatedAt&quot;\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;2020-06-22T10:59:27.863Z&quot;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThis means we can access these variables by using our article variable followed by the what we want to use. For example \u003Ccode\u003Earticle.updatedAt\u003C\u002Fcode\u003E will give us the date the post was last updated. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EPost last updated: {{ article.updatedAt }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAs you can see the date is not that human friendly. We can format this by creating a method that takes in a date and returns a new date with the options of year, month and day formatted to how we want. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Emethods: {\n    formatDate(date) {\n      \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E options = { \u003Cspan class=\"hljs-attr\"\u003Eyear\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;numeric&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Emonth\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;long&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eday\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;numeric&#x27;\u003C\u002Fspan\u003E }\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E(date).toLocaleDateString(\u003Cspan class=\"hljs-string\"\u003E&#x27;en&#x27;\u003C\u002Fspan\u003E, options)\n    }\n }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd then in our template we can use the formatDate method passing in the date we get from our content which will return a nicely formatted date for us. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EArticle last updated: {{ formatDate(article.updatedAt) }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"custom-injected-variables\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#custom-injected-variables\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECustom Injected variables\u003C\u002Fh3\u003E\u003Cp\u003EWe can also add custom injected variables by adding a block of YAML front matter to our markdown file. It must be at the top the file and must be a valid YAML format set between three triple dashed lines. This is useful for adding SEO variables such as title, description and image of your article.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econtent\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs yaml\"\u003E\u003Cspan class=\"hljs-meta\"\u003E---\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Etitle:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EMy\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Efirst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EBlog\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EPost\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Edescription:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ELearning\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ehow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eto\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Euse\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E@nuxt\u002Fcontent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eto\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ecreate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ea\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eblog\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Eimg:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Efirst-blog-post.jpg\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Ealt:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Emy\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Efirst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eblog\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Epost\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E---\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe now have a title, description, img and alt variable that we can access to by using our \u003Ccode\u003Earticle\u003C\u002Fcode\u003E object variable. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.description }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.img&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.alt&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EArticle last updated: {{ formatDate(article.updatedAt) }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-content\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:document\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"styling-our-markdown-content\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#styling-our-markdown-content\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EStyling our markdown content\u003C\u002Fh3\u003E\u003Cp\u003EIf we inspect this page we can see that everything written inside our markdown is wrapped inside a div with a class of nuxt-content. That means we can easily add styles to all our elements coming from our markdown file by wrapping them in the nuxt-content class.\u003C\u002Fp\u003E\n\u003Cp\u003E \u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.nuxt-content\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-selector-tag\"\u003Eh2\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-weight\u003C\u002Fspan\u003E: bold;\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-size\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E28px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.nuxt-content\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-selector-tag\"\u003Eh3\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-weight\u003C\u002Fspan\u003E: bold;\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-size\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E22px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.nuxt-content\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-selector-tag\"\u003Ep\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin-bottom\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAll other tags that come from our YAML front matter can be styled as normal either using \u003Ca href=\"https:\u002F\u002Ftailwindcss.com\u002F\"\u003ETailwindCSS\u003C\u002Fa\u003E or adding css in the style tag.\u003C\u002Fp\u003E\n\u003Cp\u003E⚠️ Scoped styles will not work with nuxt-content so if adding then in the style tag you shouldn&#39;t use scoped. You can add the styles here or as a global style in your css folder.\u003C\u002Fp\u003E\n\u003Cp\u003EOur markdown tags are converted into the correct tags which means we now have two \u003Ccode\u003E&lt;h1&gt;\u003C\u002Fcode\u003E tags. We should now remove the one from our markdown file.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-an-icon-to-our-headings-anchor\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-an-icon-to-our-headings-anchor\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding an icon to our headings anchor\u003C\u002Fh3\u003E\u003Cp\u003ENotice that inside the \u003Ccode\u003E&lt;h2&gt;\u003C\u002Fcode\u003E tag there is an \u003Ccode\u003E&lt;a&gt;\u003C\u002Fcode\u003E tag with a \u003Ccode\u003Ehref\u003C\u002Fcode\u003E that includes an anchor to link to itself and a \u003Ccode\u003Espan\u003C\u002Fcode\u003E tag inside it with \u003Ccode\u003Eicon\u003C\u002Fcode\u003E and \u003Ccode\u003Eicon-link\u003C\u002Fcode\u003E classes. This is useful for linking to that section of the page. The links in the headings are empty and therefore hidden so let&#39;s add a style to them. Using the icon classes we can add an svg as a background image for our icon. You will have to first add the svg to your assets folder. In this example I have added it to an svg folder and I have taken the icon from \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fsschoger\u002Fheroicons-ui\"\u003ESteve Schoger&#39;s Hero Icons.\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.icon\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.icon-link\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-image\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eurl\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;~assets\u002Fsvg\u002Ficon-hashtag.svg&#x27;\u003C\u002Fspan\u003E);\n  \u003Cspan class=\"hljs-attribute\"\u003Edisplay\u003C\u002Fspan\u003E: inline-block;\n  \u003Cspan class=\"hljs-attribute\"\u003Ewidth\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eheight\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-size\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"add-a-table-of-contents\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#add-a-table-of-contents\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdd a table of contents\u003C\u002Fh3\u003E\u003Cp\u003EThe generated \u003Ccode\u003Etoc\u003C\u002Fcode\u003E variable allows us to add a table of contents to our blog post. Let&#39;s add some headings to our blog post.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs markdown\"\u003E\u003Cspan class=\"hljs-section\"\u003E## This is a heading\u003C\u002Fspan\u003E\nThis is some more info\n\n\u003Cspan class=\"hljs-section\"\u003E## This is another heading\u003C\u002Fspan\u003E\nThis is some more info\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow we can see these new headings inside the \u003Ccode\u003Etoc\u003C\u002Fcode\u003E array with an id, a depth and the text. The depth value refer to the heading tag value, so \u003Ccode\u003E&lt;h2&gt;\u003C\u002Fcode\u003E value is 2, \u003Ccode\u003E&lt;h3&gt;\u003C\u002Fcode\u003E value is 3, etc.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econtent\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs markdown\"\u003E\u003Cspan class=\"hljs-section\"\u003E## This is a heading\u003C\u002Fspan\u003E\nThis is some more info\n\n\u003Cspan class=\"hljs-section\"\u003E### This is a sub heading\u003C\u002Fspan\u003E\nThis is some more info\n\n\u003Cspan class=\"hljs-section\"\u003E### This is another sub heading\u003C\u002Fspan\u003E\nThis is some more info\n\n\u003Cspan class=\"hljs-section\"\u003E## This is another heading\u003C\u002Fspan\u003E\nThis is some more info\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAs we have access to the \u003Ccode\u003Etoc\u003C\u002Fcode\u003E id and text we can loop over these and print each one out and use the \u003Ccode\u003E&lt;NuxtLink&gt;\u003C\u002Fcode\u003E component to link to the id of the section we want to link to. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enav\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;link of article.toc&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;link.id&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n         \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;`#${link.id}`&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ link.text }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enav\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow the ToC links are working and clicking on one will bring us to the correct part of the document. The content module automatically adds an id and a link to each heading. If we inspect one of the headings from our markdown file in our dev tools we will see our \u003Ccode\u003E&lt;h2&gt;\u003C\u002Fcode\u003E tag has an id. This is the same id that is found in the \u003Ccode\u003Etoc\u003C\u002Fcode\u003E which is basically how the \u003Ccode\u003Etoc\u003C\u002Fcode\u003E can link to the correct heading.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can improve this further by using dynamic classes to style the heading classes based on the depth of the heading which we can add to our nuxt-link tag. If the link has a depth of 2 add a padding on the y axis and if the the depth is 3 add a margin left and a padding bottom. Here we are using \u003Ca href=\"https:\u002F\u002Ftailwindcss.com\u002F\"\u003ETailwindCSS\u003C\u002Fa\u003E classes but feel free to use custom class names and styles.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E:class=&quot;{\n     &#x27;py-2&#x27;: link.depth === 2,\n     &#x27;ml-2 pb-2&#x27;: link.depth === 3\n}&quot;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"use-html-into-your-markdown-files\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#use-html-into-your-markdown-files\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUse HTML into your markdown files\u003C\u002Fh3\u003E\u003Cp\u003ESometimes we might want to add HTML to our markdown files. Let&#39;s add a div with some classes so it has a background color of blue with white text, some padding and a margin bottom.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econtent\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;bg-blue-500 text-white p-4 mb-4&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  This is HTML inside markdown that has a class of note\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"adding-a-vue-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-vue-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a Vue component\u003C\u002Fh3\u003E\u003Cp\u003EWe can also add Vue components inside our markdown files. This means if we are re-using components such as an info or alert box, we can create one with the styles we need and pass in the text as a slot.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can now add components to our application by setting the property \u003Ccode\u003Ecomponents\u003C\u002Fcode\u003E to \u003Ccode\u003Etrue\u003C\u002Fcode\u003E in our \u003Ccode\u003Enuxt.config file\u003C\u002Fcode\u003E. (since v2.13)\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAuto importing components will not work for \u003Ccode\u003E&lt;nuxt-content&gt;\u003C\u002Fcode\u003E unless we globally register them by adding a global folder inside the components folder.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Emkdir components\u002Fglobal\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can then create our InfoBox component inside this folder.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002Fglobal\u002FInfoBox.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;bg-blue-500 text-white p-4 mb-4&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eslot\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;info-box&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003Edefault\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eslot\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen in our markdown these components will be available without having to import them. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econtent\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs markdown\"\u003E\u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Einfo-box\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n  \u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E #\u003Cspan class=\"hljs-attr\"\u003Einfo-box\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-code\"\u003E    This is a vue component inside markdown using slots\n  &lt;\u002Ftemplate&gt;\n&lt;\u002Finfo-box&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Warning\"\u003E\n\n\u003Cp\u003EThe global components will be available throughout our whole application so be careful when adding components to this folder. This works different to adding components in the components folder which are only added if they are being used.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"adding-an-author-component-with-props\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-an-author-component-with-props\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding an Author component with props\u003C\u002Fh3\u003E\u003Cp\u003EAn other advantage of the YAML properties is that we can make them available to our component through props. For example, we can have an about the author component and if we have guest bloggers the author will change. \nIn our markdown file we can add a new object to our frontmatter which contains the author&#39;s name and bio and image. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econtent\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs yaml\"\u003E\u003Cspan class=\"hljs-meta\"\u003E---\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Eauthor:\u003C\u002Fspan\u003E \n    \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EBenjamin\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Ebio:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EAll\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eabout\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EBenjamin\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eimage:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ehttps:\u002F\u002Fimages.unsplash.com\u002F.....\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E---\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now create the author component. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Etouch components\u002Fglobal\u002FAuthor.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EHere we create a div the author image, a title of Author and a dynamic name and bio of the author. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002Fglobal\u002FAuthor.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;author.img&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh4\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EAuthor\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh4\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ author.name }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ author.bio }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EStyles have been removed from these examples, feel free to add the styles yourself or copy the styles from the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-company\u002Fdemo-blog-nuxt-content\"\u003Edemo code\u003C\u002Fa\u003E. \u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003EThen in our script tag we can add our props of author which is an object and set required to true.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002Fglobal\u002FAuthor.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Eprops\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Eauthor\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Erequired\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ETo use the component we will need to add it to our markdown and pass in our props. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econtent\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs markdown\"\u003E\u003Cspan class=\"xml\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eauthor\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:author\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;author&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EPutting the component here means we will have to repeat it for every article. In this case it would be better to add it directly to the slug page. We will need to change the author prop to \u003Ccode\u003Earticle.author\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.description }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.img&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.alt&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EArticle last updated: {{ formatDate(article.updatedAt) }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-content\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:document\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eauthor\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:author\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.author&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now move this component out of the global folder and into the components folder directly and it will be auto imported into our slug page as we are using it in the template.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-code-block-to-your-post\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-code-block-to-your-post\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a code block to your post\u003C\u002Fh3\u003E\u003Cp\u003EWith the content module we can style our code blocks with to the automatic inclusion of \u003Ca href=\"https:\u002F\u002Fprismjs.com\u002F\"\u003EprismJS\u003C\u002Fa\u003E. That means we can write our code block using the correct markdown syntax and our code block will display with styling depending on the language.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Econtent\u002Farticles\u002Fmy-first-blog-post.md\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Enuxt\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;is the best&quot;\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003Ecode styling is easy\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can also add the file name of the code block by adding it inside square brackets after the code block&#39;s language.\nFor example: js[my-first-blog-post.md]\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js[my-first-blog-post.md]\"\u003Eexport default {\n  nuxt: \"is the best\"\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe filename will be converted to a span with a filename class which we can then style how we like. For this example I am using tailwind classes but you can use ordinary CSS if you prefer.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eassets\u002Fcss\u002Ftailwind.css\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E.nuxt-content-highlight {\n  @apply relative;\n}\n.nuxt-content-highlight .filename {\n  @apply absolute right-0 text-gray-600 font-light z-10 mr-2 mt-1 text-sm;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EDifferent theme can be used, for example \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FPrismJS\u002Fprism-themes\"\u003Eprism-themes\u003C\u002Fa\u003E, we can install it and then add our preferred theme to the content options of your \u003Ccode\u003Enuxt.config file\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Enpm install prism-themes\n\u002F\u002F or\nyarn add prism-themes\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen in our \u003Ccode\u003Enuxt.config\u003C\u002Fcode\u003E file, in the content options, we can add a markdown object with prism and add the theme that we want to use. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Econtent: {\n  \u003Cspan class=\"hljs-attr\"\u003Emarkdown\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Eprism\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Etheme\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;prism-themes\u002Fthemes\u002Fprism-material-oceanic.css&#x27;\u003C\u002Fspan\u003E\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"creating-a-previous-and-next-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-previous-and-next-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECreating a previous and next component\u003C\u002Fh3\u003E\u003Cp\u003EWe now have a pretty complete blog post but wouldn&#39;t it be great if users could easily go from one post to another. First let&#39;s duplicate our post so we have 3 posts. Then, let&#39;s create a new component for our prev and next posts. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Etouch components\u002FPrevNext.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn this component we use a \u003Ccode\u003Ev-if\u003C\u002Fcode\u003E inside our \u003Ccode\u003ENuxtLink\u003C\u002Fcode\u003E component to see if there is a previous blog post and if there is we add a link to it. We can print out the title of our article using the \u003Ccode\u003Eprev\u003C\u002Fcode\u003E and \u003Ccode\u003Enext\u003C\u002Fcode\u003E variables as these contain all the information from the article. This means we could create a card with an image and description to show the next and previous article but for this example we will just display the title. If there isn&#39;t a previous post we just print an empty span which is useful for styling purposes. We then do the exact same with our next link.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FPrevNext.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;flex justify-between&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;prev&quot;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ name: &#x27;blog-slug&#x27;, params: { slug: prev.slug } }&quot;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;text-primary font-bold hover:underline&quot;\u003C\u002Fspan\u003E\n    &gt;\u003C\u002Fspan\u003E\n      {{ prev.title }}\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-symbol\"\u003E&amp;nbsp;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;next&quot;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ name: &#x27;blog-slug&#x27;, params: { slug: next.slug } }&quot;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;font-bold hover:underline&quot;\u003C\u002Fspan\u003E\n    &gt;\u003C\u002Fspan\u003E\n      {{ next.title }}\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-symbol\"\u003E&amp;nbsp;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn our component we pass the props \u003Ccode\u003Eprev\u003C\u002Fcode\u003E and \u003Ccode\u003Enext\u003C\u002Fcode\u003E to makes them available to us on our blog post page. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FPrevNext.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Eprops\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Eprev\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Edefault\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\n    },\n    \u003Cspan class=\"hljs-attr\"\u003Enext\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Edefault\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now get our prev and next articles by adding them to our \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E. We create an array of const with with the name \u003Ccode\u003Eprev\u003C\u002Fcode\u003E and \u003Ccode\u003Enext\u003C\u002Fcode\u003E and we await the content from the articles folder. This time we only need the title and the slug so we can chain \u003Ccode\u003Eonly()\u003C\u002Fcode\u003E to our await and pass in title and slug. \u003C\u002Fp\u003E\n\u003Cp\u003EWe can use the \u003Ccode\u003EsortBy()\u003C\u002Fcode\u003E method to sort our data by the createdAt date in ascending order. We then use the \u003Ccode\u003Esurround()\u003C\u002Fcode\u003E method and pass in the slug from params so that it can get the correct  slug for the previous and next posts. \u003C\u002Fp\u003E\n\u003Cp\u003EWe then return prev and next just like we did with article.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData({ $content, params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E $content(\u003Cspan class=\"hljs-string\"\u003E&#x27;articles&#x27;\u003C\u002Fspan\u003E, params.slug).fetch()\n\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E [prev, next] = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E $content(\u003Cspan class=\"hljs-string\"\u003E&#x27;articles&#x27;\u003C\u002Fspan\u003E)\n      .only([\u003Cspan class=\"hljs-string\"\u003E&#x27;title&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;slug&#x27;\u003C\u002Fspan\u003E])\n      .sortBy(\u003Cspan class=\"hljs-string\"\u003E&#x27;createdAt&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;asc&#x27;\u003C\u002Fspan\u003E)\n      .surround(params.slug)\n      .fetch()\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      article,\n      prev,\n      next\n    }\n  },\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now add our \u003Ccode\u003E&lt;prev-next&gt;\u003C\u002Fcode\u003E component to our slug page passing in the props of prev and next.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.description }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.img&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.alt&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EArticle last updated: {{ formatDate(article.updatedAt) }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-content\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:document\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eauthor\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:author\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.author&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eprev-next\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:prev\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;prev&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:next\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;next&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Earticle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EAs we have set \u003Ccode\u003Ecomponents: true\u003C\u002Fcode\u003E in our nuxt.config file we do not need to import this component in order to be able to use it.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"working-with-the-api\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#working-with-the-api\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWorking with the API\u003C\u002Fh3\u003E\u003Cp\u003EWhen querying data the Content module gives us access to the API so that we can query it directly to see what is being returned. We have access to the API in dev mode with the following url: \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F_content\u002F\"\u003Ehttp:\u002F\u002Flocalhost:3000\u002F_content\u002F\u003C\u002Fa\u003E. In our example this will be empty as our articles are in a folder called articles therefore we need to use this url \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles\"\u003Ehttp:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles\u003C\u002Fa\u003E to see our list of articles. \u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EWe can see individual articles by adding the name of the slug \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles\u002Fmy-first-blog-post\"\u003Ehttp:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles\u002Fmy-first-blog-post\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EYou can use a chrome extension such as \u003Ca href=\"https:\u002F\u002Fchrome.google.com\u002Fwebstore\u002Fdetail\u002Fjson-viewer-awesome\u002Fiemadiahhbebdklepanmkjenfdebfpfe?hl=en\"\u003EJSON Viewer Awesome\u003C\u002Fa\u003E so you can better see your results.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003EWe can now query our results directly in the url and see our results as a JSON which we can then use to create our blog index page that will have a list of all the blog posts. We can see using our API what we have available to us and for the blog index page we only want to return the title, description, img, slug and author. Let&#39;s take a look at what that would be like. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles?only=title&amp;only=description&amp;only=img&amp;only=slug&amp;only=author\"\u003Ehttp:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles?only=title&amp;only=description&amp;only=img&amp;only=slug&amp;only=author\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cvideo poster=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Fcontent-api_aocbcn.jpg\" loop=\"loop\" plays-inline=\"true\" controls=\"controls\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Fcontent-api_aocbcn.webm\" type=\"video\u002Fwebm\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1592314331\u002Fcontent-api_aocbcn.mp4\" type=\"video\u002Fmp4\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Fcontent-api_aocbcn.ogv\" type=\"video\u002Fogg\"\u003E\n\u003C\u002Fvideo\u003E\n\n\n\u003Ch3 id=\"list-all-the-blog-posts\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#list-all-the-blog-posts\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EList all the blog posts\u003C\u002Fh3\u003E\u003Cp\u003EWe can now create our blog index page to list out our blog posts. As we already have an index page created we just need to delete all the demo code inside this page.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EIn the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-company\u002Fdemo-blog-nuxt-content\"\u003Edemo code\u003C\u002Fa\u003E I used the main index page instead of creating an index file inside the blog folder because for this example I have no other pages but normally you might have a home page, contact page and then the blog page etc.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003EPassing in \u003Ccode\u003E$content\u003C\u002Fcode\u003E and \u003Ccode\u003Eparams\u003C\u002Fcode\u003E to the context in our \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E function we then use a const of articles to await our returned content by passing into \u003Ccode\u003E$content\u003C\u002Fcode\u003E the arguments of articles, as that is the folder where our articles are and our slug from params. We can then use \u003Ccode\u003Eonly()\u003C\u002Fcode\u003E to get our title, description, img, slug and author as we tested from our API this will give us exactly what we need. We can use \u003Ccode\u003EsortBy()\u003C\u002Fcode\u003E to sort by the createdAt date and then we chain our \u003Ccode\u003Efetch()\u003C\u002Fcode\u003E to the end and return our articles.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData({ $content, params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E $content(\u003Cspan class=\"hljs-string\"\u003E&#x27;articles&#x27;\u003C\u002Fspan\u003E, params.slug)\n      .only([\u003Cspan class=\"hljs-string\"\u003E&#x27;title&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;description&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;img&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;slug&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;author&#x27;\u003C\u002Fspan\u003E])\n      .sortBy(\u003Cspan class=\"hljs-string\"\u003E&#x27;createdAt&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;asc&#x27;\u003C\u002Fspan\u003E)\n      .fetch()\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      articles\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EOur articles are now available to us just like any data property so we can use it in our template using a \u003Ccode\u003Ev-for\u003C\u002Fcode\u003E to loop over all the articles and print out the article title and author name, the description the date it was updated and the image using the \u003Ccode\u003E&lt;NuxtLink&gt;\u003C\u002Fcode\u003E component to link to the slug of the article.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EBlog Posts\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article of articles&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.slug&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ name: &#x27;blog-slug&#x27;, params: { slug: article.slug } }&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.img&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh2\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh2\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003Eby {{ article.author.name }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.description }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"using-the-where-query-to-create-an-author-page\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-the-where-query-to-create-an-author-page\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing the where query to create an Author page\u003C\u002Fh3\u003E\u003Cp\u003EWith the content module we can also filter out results using the where query. We could have an author page that shows the author details and all posts by that author.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Etouch pages\u002Fblog\u002Fauthor\u002F_author.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EJust like before we use asyncData to fetch our data but this time we add in a where() method. We want to get the posts where the author is the same as the author name that comes from params. \u003C\u002Fp\u003E\n\u003Cp\u003EFor example: \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles?author.name=Maria\"\u003Ehttp:\u002F\u002Flocalhost:3000\u002F_content\u002Farticles?author.name=Maria\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EBecause we have used an object for our author we need to add nestedProperties as an option to our content property in our nuxt.config file and pass in what we want to query (only for dot notation queries).\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Econtent\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003EnestedProperties\u003C\u002Fspan\u003E: [\n        \u003Cspan class=\"hljs-string\"\u003E&#x27;author.name&#x27;\u003C\u002Fspan\u003E\n      ]\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAs we can see we get all our data back only for the author Maria. If we were to use maria without a capital letter we wouldn&#39;t get anything back. We can therefore use \u003Ccode\u003E$regex\u003C\u002Fcode\u003E so that it remains with a capital letter. \u003C\u002Fp\u003E\n\u003Cp\u003EWe then fetch all the details we want to show on this page. In the last example we used the \u003Ccode\u003Eonly()\u003C\u002Fcode\u003E method to return what we wanted but as we require quite a lot of content we can instead use the \u003Ccode\u003Ewithout()\u003C\u002Fcode\u003E method and pass in what we don&#39;t wan&#39;t to return which is the body of the post. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002Fauthor\u002F_author.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData({ $content, params }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E $content(\u003Cspan class=\"hljs-string\"\u003E&#x27;articles&#x27;\u003C\u002Fspan\u003E, params.slug)\n      .where({\n        \u003Cspan class=\"hljs-string\"\u003E&#x27;author.name&#x27;\u003C\u002Fspan\u003E: {\n          \u003Cspan class=\"hljs-attr\"\u003E$regex\u003C\u002Fspan\u003E: [params.author, \u003Cspan class=\"hljs-string\"\u003E&#x27;i&#x27;\u003C\u002Fspan\u003E]\n        }\n      })\n      .without(\u003Cspan class=\"hljs-string\"\u003E&#x27;body&#x27;\u003C\u002Fspan\u003E)\n      .sortBy(\u003Cspan class=\"hljs-string\"\u003E&#x27;createdAt&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;asc&#x27;\u003C\u002Fspan\u003E)\n      .fetch()\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      articles\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EYou can use an array and pass in more than just &#39;body&#39; to the \u003Ccode\u003Ewithout()\u003C\u002Fcode\u003E method:\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Ewithout([\u003Cspan class=\"hljs-string\"\u003E&#x27;body&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;title&#x27;\u003C\u002Fspan\u003E])\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can then use our data to print out a nice author page showing the author name and bio as well as each post. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002Fauthor\u002F_author.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EAuthor: {{ articles[0].author.name }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EBio: {{ articles[0].author.bio }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh3\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EHere are a list of articles by {{ articles[0].author.name }}:\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh3\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article in articles&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.slug&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ name: &#x27;blog-slug&#x27;, params: { slug: article.slug } }&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.img&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.alt&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh2\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh2\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.description }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ formatDate(article.updatedAt) }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003EPlease note all styles have been removed from this example. You can either style the page yourself or copy the styles from the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-company\u002Fdemo-blog-nuxt-content\"\u003Edemo code\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003ETo format our date we can add the method we created earlier:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Fblog\u002Fauthor\u002F_author.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Emethods: {\n    formatDate(date) {\n      \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E options = { \u003Cspan class=\"hljs-attr\"\u003Eyear\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;numeric&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Emonth\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;long&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eday\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;numeric&#x27;\u003C\u002Fspan\u003E }\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E(date).toLocaleDateString(\u003Cspan class=\"hljs-string\"\u003E&#x27;en&#x27;\u003C\u002Fspan\u003E, options)\n    }\n  }\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd of course we should link from our blog post to our new author page.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FAuthor.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;`\u002Fblog\u002Fauthor\u002F${author.name}`&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;author.img&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh4\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EAuthor\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh4\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ author.name }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ author.bio }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"add-a-search-field\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#add-a-search-field\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdd a search field\u003C\u002Fh3\u003E\u003Cp\u003EThe Nuxt content module gives us the possibility of searching through our articles by using the \u003Ccode\u003Esearch()\u003C\u002Fcode\u003E method.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s first create a search component.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Etouch components\u002FAppSearchInput.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe then add a data property which will return the searchQuery which starts off as an empty string and the articles array which is also empty. We then use the watch method from Vue to watch our searchQuery function passing in the argument of searchQuery. If there is no searchQuery then the articles array is empty and we just call return. If not we get our articles and await our \u003Ccode\u003E$content\u003C\u002Fcode\u003E passing in articles. We can now use the \u003Ccode\u003Elimit()\u003C\u002Fcode\u003E method to limit the number of returned results and then we use the \u003Ccode\u003Esearch()\u003C\u002Fcode\u003E method passing in our searchQuery as an argument and then we chain the \u003Ccode\u003Efetch()\u003C\u002Fcode\u003E method to the end. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FAppSearchInput.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  data() {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003EsearchQuery\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;&#x27;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Earticles\u003C\u002Fspan\u003E: []\n    }\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Ewatch\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E searchQuery(searchQuery) {\n      \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (!searchQuery) {\n        \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.articles = []\n        \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E\n      }\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$content(\u003Cspan class=\"hljs-string\"\u003E&#x27;articles&#x27;\u003C\u002Fspan\u003E)\n        .limit(\u003Cspan class=\"hljs-number\"\u003E6\u003C\u002Fspan\u003E)\n        .search(searchQuery)\n        .fetch()\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENext we need to add to our template an input and using \u003Ccode\u003Ev-model\u003C\u002Fcode\u003E we connect it to our SearchQuery data property. Then if there are articles we use a \u003Ccode\u003Ev-for\u003C\u002Fcode\u003E to list out the articles using the \u003Ccode\u003E&lt;NuxtLink&gt;\u003C\u002Fcode\u003E component to link to them.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FAppSearchInput.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Einput\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Ev-model\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;searchQuery&quot;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;search&quot;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Eautocomplete\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;off&quot;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;Search Articles&quot;\u003C\u002Fspan\u003E\n    \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;articles.length&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article of articles&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.slug&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ name: &#x27;blog-slug&#x27;, params: { slug: article.slug } }&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          {{ article.title }}\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003ENuxtLink\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now use our \u003CAppSearchInput\u003E component by adding it anywhere on our page.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002F_slug.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EAppSearchInput\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003ESee the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-company\u002Fdemo-blog-nuxt-content\"\u003Edemo code\u003C\u002Fa\u003E for improved styling of this page as well as the header component that was added which includes the search component and is therefore displayed on the author and index page.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch2 id=\"live-editing-our-content\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#live-editing-our-content\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELive editing our content\u003C\u002Fh2\u003E\u003Cp\u003EOur blog is looking really great and if we need to modify any of the content on the page we can do so directly in the browser thanks to the live edit feature. All you have to do is double click on your page while in dev mode and and the live edit will open. Here you can modify any of your text and also the front matter. You can even add a component that is in the global components folder and just by clicking away you will see your changes live in the browser and you will see in your editor and console that the file has been modified and saved. \u003C\u002Fp\u003E\n\u003Cvideo poster=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Flive-edit-content_kdorvi.jpg\" loop=\"loop\" plays-inline=\"true\" controls=\"controls\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Flive-edit-content_kdorvi.webm\" type=\"video\u002Fwebm\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1592314331\u002Flive-edit-content_kdorvi.mp4\" type=\"video\u002Fmp4\"\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588091670\u002Flive-edit-content_kdorvi.ogv\" type=\"video\u002Fogg\"\u003E\n\u003C\u002Fvideo\u003E\n\n\u003Ch2 id=\"generating-our-content\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#generating-our-content\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EGenerating our content\u003C\u002Fh2\u003E\u003Cp\u003EIf we now want to deploy our amazing new blog we can run the \u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E and \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E command. The \u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E command will build our app adding all our webpack assets and creating .js bundles for us. We can then run the \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E command which will export our html, css, js and images as static assets. You will also notice that we didn&#39;t have to add a routes property or do anything to get our new page as the \u003Cstrong\u003Ecrawler\u003C\u002Fstrong\u003E will crawl all links for us and generate our dynamic routes for us.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can then use the \u003Ccode\u003Enuxt serve\u003C\u002Fcode\u003E command which will serve our production ready static site so we can see it in our browser before deploying.\u003C\u002Fp\u003E\n\u003Cp\u003EBy separating our content from our build it means we can now add a new markdown page and this time we only need to run \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E and we will see our new page with our new content in seconds. We only need to run \u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E if we are modifying our .vue pages or components or anything that is not in our content folder. \u003C\u002Fp\u003E\n\u003Ch2 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh2\u003E\u003Cp\u003EWorking with content is great fun and there is so much more you can do and build. Don&#39;t forget to showcase your work to use on our discord channel named \u003Cstrong\u003Eshowcase\u003C\u002Fstrong\u003E so we can see the cool things you have created and perhaps even feature them in our NuxtLetter. Not signed up yet? Well now is a great time to \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002F#subscribe-to-newsletter\"\u003Esign up\u003C\u002Fa\u003E as we keep releasing more new content and features for Nuxt.js. Enjoy :)\u003C\u002Fp\u003E\n",links:{previous:{title:b,slug:b},next:{title:g,slug:h}}},{path:"zh\u002Fblog\u002Fimprove-your-developer-experience-with-nuxt-components.md",slug:h,readtime:{text:"21 min read",minutes:20.34,time:1220400,words:4068},title:g,description:"Explore how you can import and register Vue components automatically using @nuxt\u002Fcomponents module.",imgUrl:"blog\u002Fimprove-developer-experience-nuxt-components\u002Fmain.png",date:"2020-06-24T00:00:00.000Z",authors:[{name:G,avatarUrl:x,link:z}],tags:["components","auto-import","lazy-loading","dynamic-import","ignore-rules","3rd-party-library"],body:"\u003Ch2 id=\"introduction\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#introduction\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EIntroduction\u003C\u002Fh2\u003E\u003Cp\u003EThe Nuxt team has introduced \u003Cstrong\u003E\u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@nuxt\u002Fcomponents\"\u003E@nuxt\u002Fcomponents\u003C\u002Fa\u003E\u003C\u002Fstrong\u003E module with the purpose to make Nuxt development faster and to make you, as a developer, more productive. This module comes with amazing features and options that will improve your development experience with Nuxt. No matter if you’re just starting out or an advanced user, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fcomponents\"\u003E@nuxt\u002Fcomponents\u003C\u002Fa\u003E provides a range of options from the simplest setup to advance configurations that will certainly benefit your projects.\u003C\u002Fp\u003E\n\u003Cp\u003EIn a nutshell, this module automatically scans, imports and registers Vue components found in the \u003Cstrong\u003E\u003Ccode\u003E~\u002Fcomponents\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E directory, so that we don&#39;t have to write import statements when we use them in either pages, layouts or even within components.\u003C\u002Fp\u003E\n\u003Cp\u003EHere is how \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fdebs_obrien\"\u003EDebbie O’Brien\u003C\u002Fa\u003E explains how it works,\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cem\u003EThis module parses your template and automatically includes the component in the file where you are using it such as a page, layout or even a component. Because Nuxt.js uses automatic code splitting to split your pages by default this module works perfect as it will only contain the components that are used on that page. Also, if you use a component in more than 2 pages, Nuxt.js will automatically create a shared chunk for them thanks to the magic of WebPack.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"table-of-contents\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#table-of-contents\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETable of Contents\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#introduction\"\u003EIntroduction\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#module-setup\"\u003EModule Setup\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#cheatsheet\"\u003ECheatsheet\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#directory-path-as-a-string\"\u003EDirectory path as a String\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#directory-path-as-an-object\"\u003EDirectory path as an Object\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#try-it-yourself-directory-paths\"\u003ETry it yourself - Directory Paths\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#inclusion-paths\"\u003EInclusion paths\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#extensions-option\"\u003EExtensions option\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#pattern-option\"\u003EPattern option\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#exclusion-paths\"\u003EExclusion paths\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#ignore-option\"\u003EIgnore option\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#nuxtignore-ignore-property-ignore-option\"\u003E.nuxtignore, ignore property &amp; ignore option\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#Lazy-loading-your-components\"\u003ELazy loading your components\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#try-it-yourself-lazy-loading\"\u003ETry it yourself - Lazy-loading\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#third-party-component-library\"\u003EThird-party component library\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#try-it-yourself-third-party-library\"\u003ETry it yourself - Third-party library\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EIn this article, we&#39;ll learn about \u003Ccode\u003E@nuxt\u002Fcomponents\u003C\u002Fcode\u003E by example. I have setup a demo with two sets of UI components, \u003Ccode\u003Eui-1\u003C\u002Fcode\u003E and \u003Ccode\u003Eui-2\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E| components\n--| ui\u003Cspan class=\"hljs-number\"\u003E-1\u003C\u002Fspan\u003E\u002F\n----| Card\u002F\n--| ui\u003Cspan class=\"hljs-number\"\u003E-2\u003C\u002Fspan\u003E\u002F\n----| BaseButton\u002F\n----| Card\u002F\n----| List\u002F\n----| MagicButton\u002F\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe will implement \u003Ccode\u003E@nuxt\u002Fcomponents\u003C\u002Fcode\u003E on these components followed by a detailed look at module options to customise the default behaviour. Later in the article, we will also take a look at \u003Cstrong\u003Elazy-loading\u003C\u002Fstrong\u003E and \u003Cstrong\u003Eauto-importing 3rd-party library\u003C\u002Fstrong\u003E components.\u003C\u002Fp\u003E\n\u003Cp\u003EIt’s best if you setup this \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FKrutie\u002Fnuxt-components-demo\"\u003Esample project\u003C\u002Fa\u003E locally to tryout options that may interest you.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003EGithub Repo\u003C\u002Fstrong\u003E - \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FKrutie\u002Fnuxt-components-demo\"\u003Ehttps:\u002F\u002Fgithub.com\u002FKrutie\u002Fnuxt-components-demo\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EDemo\u003C\u002Fstrong\u003E - \u003Ca href=\"http:\u002F\u002Fnuxt-components.surge.sh\u002F\"\u003Ehttp:\u002F\u002Fnuxt-components.surge.sh\u002F\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003E3rd Party Sample Components Repo\u003C\u002Fstrong\u003E - \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FKrutie\u002FKru-Components\"\u003Ehttps:\u002F\u002Fgithub.com\u002FKrutie\u002FKru-Components\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"module-setup\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#module-setup\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EModule Setup\u003C\u002Fh2\u003E\u003Cp\u003EFrom Nuxt v2.13 onward, this module \u003Cstrong\u003Ewill be available by default\u003C\u002Fstrong\u003E when you create a new Nuxt project. However, you&#39;ll still need to activate it using \u003Ccode\u003Ecomponents: true\u003C\u002Fcode\u003E in \u003Ccode\u003Enuxt.config.js.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F For nuxt v2.13+\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn case your project is using Nuxt version below v2.13**we recommend you to upgrade your Nuxt version since there is no breaking between these versions.\u003C\u002Fp\u003E\n\u003Cp\u003E💡 \u003Cstrong\u003EIf \u003Ccode\u003Ecomponents: true\u003C\u002Fcode\u003E is set, \u003Ccode\u003E~\u002Fcomponents\u003C\u002Fcode\u003E directory is scanned by default.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EMinimal configuration above is enough to get you started. However, like any other Nuxt module, the real power of \u003Ccode\u003E@nuxt\u002Fcomponents\u003C\u002Fcode\u003E lies in the module options. Before we take a detailed look, here&#39;s a one-page summary of the module.\u003C\u002Fp\u003E\n\u003Ch2 id=\"cheatsheet\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#cheatsheet\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECheatsheet\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fcdn.krutiepatel.com\u002F2020-06\u002Fnuxt_components_Module-Cheatsheet.png\" alt=\"One-page summary of @nuxt\u002Fcomponents module\"\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fcdn.krutiepatel.com\u002F2020-06\u002Fnuxt_components_Module-Cheatsheet.pdf\"\u003EDownload printable PDF here\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EUsing module options, you can select particular directories with specific file-extensions from the \u003Ccode\u003E~\u002Fcomponents\u003C\u002Fcode\u003E directory.\u003C\u002Fp\u003E\n\u003Cp\u003ETo accept custom directory options, \u003Ccode\u003Ecomponents:\u003C\u002Fcode\u003E accepts \u003Cstrong\u003Ean array of directory paths\u003C\u002Fstrong\u003E, rather than just a boolean value! These \u003Cstrong\u003Edirectory paths\u003C\u002Fstrong\u003E can be either an array of \u003Cstrong\u003Estrings\u003C\u002Fstrong\u003E or \u003Cstrong\u003Eobjects\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003ELet’s see both formats in detail.\u003C\u002Fp\u003E\n\u003Ch2 id=\"directory-path-as-a-string\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#directory-path-as-a-string\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDirectory path as a String\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cstrong\u003EDirectory path as a string\u003C\u002Fstrong\u003E is a simplified version to indicate which directory to scan, watch and register.\u003C\u002Fp\u003E\n\u003Cp\u003EFor example, in our sample project, we can use string notation like below to auto-import every UI components located at \u003Ccode\u003Ecomponents\u002Fui-1\u002F\u003C\u002Fcode\u003E and \u003Ccode\u003Ecomponents\u002Fui-2\u002F\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Module options as an Array of String\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&quot;~\u002Fcomponents\u002Fui-1\u002F&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&quot;~\u002Fcomponents\u002Fui-2\u002F&quot;\u003C\u002Fspan\u003E],\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"directory-path-as-an-object\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#directory-path-as-an-object\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDirectory path as an Object\u003C\u002Fh2\u003E\u003Cp\u003EDirectory path as an object gets bit more interesting! \u003Cstrong\u003EWhen path is given as an object, it becomes a required.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Module options as an Array of Object\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: [{ \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;~\u002Fcomponents\u002Fui-1\u002F&quot;\u003C\u002Fspan\u003E }, { \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;~\u002Fcomponents\u002Fui-2\u002F&quot;\u003C\u002Fspan\u003E }],\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn addition to \u003Ccode\u003Epath\u003C\u002Fcode\u003E, we can also define additional configuration to include, exclude, watch or even add prefix to components based on their location &amp; extensions.\u003C\u002Fp\u003E\n\u003Cp\u003EFor example, when components are imported using this module, their names are based on their filename. But you can \u003Ccode\u003Eprefix\u003C\u002Fcode\u003E component names to preserve their filenames as they are and still be able to customise their component tags.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Module options as an Array of Object\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: [\n    {\n      \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;~\u002Fcomponents\u002Fui-2\u002F&quot;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Eprefix\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;aex&quot;\u003C\u002Fspan\u003E,\n    },\n  ],\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIt’s important to note that, the scope of these options is limited to the \u003Ccode\u003Epath\u003C\u002Fcode\u003E provided in that object. In the example above, only components located at \u003Ccode\u003E~\u002Fcomponents\u002Fui-2\u002F\u003C\u002Fcode\u003E will be registered with the prefix \u003Cstrong\u003E\u003Ccode\u003Eaex\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- Before prefix --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecard\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ecard\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- After prefix --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eaex-card\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eaex-card\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"try-it-yourself-directory-paths\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#try-it-yourself-directory-paths\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETry it yourself - Directory Paths\u003C\u002Fh3\u003E\u003Cp\u003EIn our sample project:\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003E\u002Fpages\u002Fmanual-import-example.vue\u003C\u002Fcode\u003E imports components manually. In \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E, configure appropriate directory path, so that \u003Ccode\u003Eui-1\u003C\u002Fcode\u003E components can be auto-imported.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E\u002Fpages\u002Fauto-import-example.vue\u003C\u002Fcode\u003E already implements basic auto-import. Implement \u003Ccode\u003Eprefix\u003C\u002Fcode\u003E option on \u003Ccode\u003ECard\u003C\u002Fcode\u003E UI components.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Chr\u003E\n\u003Cp\u003EWith directory path is defined as an object, we gain finer control over which components are to be auto-imported, and which ones are to be left out.\u003C\u002Fp\u003E\n\u003Cp\u003EWhether your components are written in \u003Ccode\u003E.vue\u003C\u002Fcode\u003E, \u003Ccode\u003E.js\u003C\u002Fcode\u003E or \u003Ccode\u003E.ts\u003C\u002Fcode\u003E, sometimes, you may not want to auto-import every single component files found at specified \u003Ccode\u003Epath\u003C\u002Fcode\u003E. There are some scenarios where auto-import may need some tweaking. For example:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EMulti-file Components\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EIf your components are divided into two individual files, \u003Ccode\u003E.vue\u003C\u002Fcode\u003E for template and \u003Ccode\u003E.js\u003C\u002Fcode\u003E for script. You will want to avoid auto-importing the \u003Ccode\u003E.js\u003C\u002Fcode\u003E files since they&#39;re already included in the templates. In this scenario, you will want a mechanism to prevent all or some \u003Ccode\u003E.js\u003C\u002Fcode\u003E files from being auto-imported.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EDynamic Components\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAt the time of writing this article, auto-import doesn&#39;t work for dynamic components.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- write import statement for BaseButton in script section --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;BaseButton&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThis is the scenario where you&#39;ll need to import your components in the script tag.\u003C\u002Fp\u003E\n\u003Cp\u003EFortunately, this module allow us to specify directory paths or file extensions or the combination of both to selectively include or exclude files from being auto-imported. Keep reading to see \u003Cstrong\u003Ehow.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"inclusion-paths\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#inclusion-paths\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInclusion paths\u003C\u002Fh2\u003E\u003Cp\u003EThere are couple of ways we can selectively include component files this using module.\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Eextensions\u003C\u002Fcode\u003E option\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Epatterns\u003C\u002Fcode\u003E option\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch3 id=\"extensions-option\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#extensions-option\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EExtensions option\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Eextensions\u003C\u002Fcode\u003E option lets you indicate which file extensions - from the given \u003Ccode\u003Epath\u003C\u002Fcode\u003E - should be scanned and registered. \u003Ccode\u003Eextensions\u003C\u002Fcode\u003E option accepts an array of \u003Cstrong\u003Emultiple\u003C\u002Fstrong\u003E file extensions in \u003Ccode\u003EString\u003C\u002Fcode\u003E format.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E{\n  \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;~\u002Fcomponents\u002Fui-2\u002FMagicButton\u002F&quot;\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F prefix: &#x27;aex&#x27;,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eextensions\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&#x27;vue&#x27;\u003C\u002Fspan\u003E], \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Array, include files that matche the extension\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EBoth \u003Ccode\u003E.vue\u003C\u002Fcode\u003E and \u003Ccode\u003E.js\u003C\u002Fcode\u003E are included as default extensions.\u003C\u002Fstrong\u003E This option is particularly \u003Cstrong\u003Ehelpful for components with multiple files\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EIn our sample project, \u003Ccode\u003EMagicButton\u003C\u002Fcode\u003E components is divided into two individual files, \u003Ccode\u003E.vue\u003C\u002Fcode\u003E for template and \u003Ccode\u003E.js\u003C\u002Fcode\u003E for script.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E| MagicButton\n--| MagicButton.js\n--| MagicButton.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn this scenario, we want to allow only Vue template to be auto-imported. Well, \u003Ccode\u003Eextensions\u003C\u002Fcode\u003E option helps us achieve exactly that.\u003C\u002Fp\u003E\n\u003Ch3 id=\"try-it-yourself-extensions\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#try-it-yourself-extensions\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETry it yourself - Extensions\u003C\u002Fh3\u003E\u003Cp\u003EIn our sample project,\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EExamine the source-code for \u003Ccode\u003EMagicButton\u003C\u002Fcode\u003E at \u003Ccode\u003E\u002Fcomponents\u002Fui-2\u002FMagicButton\u002F\u003C\u002Fcode\u003E and its configuration in \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Ccode\u003Eextensions\u003C\u002Fcode\u003E option is best for including selected files at a given \u003Ccode\u003Epath\u003C\u002Fcode\u003E. However, there are always advanced use-cases when we need finer control over selecting components - from within sub-directories even!\u003C\u002Fp\u003E\n\u003Cp\u003EFor those edge-cases, we can leverage \u003Ccode\u003Epattern\u003C\u002Fcode\u003E and \u003Ccode\u003Eignore\u003C\u002Fcode\u003E options to indicate path patterns for inclusion and exclusion respectively.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E{\n  \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002Fui-2\u002F&#x27;\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Eprefix\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;aex&#x27;\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Eextensions\u003C\u002Fspan\u003E: [], \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Array, components inclusion\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Epattern\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F String, components inclusion\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eignore\u003C\u002Fspan\u003E: [] \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Array, components exclusion\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EContinue reading further to see more examples of these two options and how they work.\u003C\u002Fp\u003E\n\u003Ch3 id=\"pattern-option\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#pattern-option\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPattern option\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Epattern\u003C\u002Fcode\u003E option lets you define which type of components - from the given \u003Ccode\u003Epath\u003C\u002Fcode\u003E - should be scanned and registered. Unlike \u003Ccode\u003Eextensions\u003C\u002Fcode\u003E, \u003Ccode\u003Epattern\u003C\u002Fcode\u003E is defined as a \u003Cstrong\u003Esingle\u003C\u002Fstrong\u003E \u003Ccode\u003EString\u003C\u002Fcode\u003E and it must follow \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fisaacs\u002Fnode-glob#glob-primer\"\u003Eglob pattern style\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can use pattern option as \u003Cstrong\u003Edefault\u003C\u002Fstrong\u003E or \u003Cstrong\u003Eadd additional\u003C\u002Fstrong\u003E ones or even \u003Cstrong\u003Ecustomise\u003C\u002Fstrong\u003E it completely.\u003C\u002Fp\u003E\n\u003Ch3 id=\"default\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#default\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDefault\u003C\u002Fh3\u003E\u003Cp\u003EAs mentioned earlier, \u003Cstrong\u003Eboth \u003Ccode\u003E.vue\u003C\u002Fcode\u003E and \u003Ccode\u003E.js\u003C\u002Fcode\u003E are included as default extensions.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Default pattern\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Epattern\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E`**\u002F*.{vue,js}`\u003C\u002Fspan\u003E;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIf you are using TypeScript, then \u003Ccode\u003Ets\u003C\u002Fcode\u003E &amp; \u003Ccode\u003Etsx\u003C\u002Fcode\u003E extensions are supported by default as well.\u003C\u002Fp\u003E\n\u003Ch3 id=\"add-additional-extensions\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#add-additional-extensions\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdd additional extensions\u003C\u002Fh3\u003E\u003Cp\u003EIf additional extensions are required, you can specify additional extensions under Build Configuration in \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F*\n   ** Build configuration\n   *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ebuild\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EadditionalExtensions\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&#x27;jsx&#x27;\u003C\u002Fspan\u003E],\n  },\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAbove code adds \u003Ccode\u003E.jsx\u003C\u002Fcode\u003E extension to the default pattern, makes the resulting pattern look like: \u003Ccode\u003E**\u002F*.{vue,js,jsx}\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"customise-as-per-your-requirement\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#customise-as-per-your-requirement\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECustomise as per your requirement\u003C\u002Fh3\u003E\u003Cp\u003EIf required, you can manually specify extensions to completely customise the pattern.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Multiple extensions\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F* Only vue and jsx files will be scanned at given path *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Epattern\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;**\u002F*.{vue,jsx}&#x27;\u003C\u002Fspan\u003E,\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EOr for single file,\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Single extension\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F* Only vue files will be scanned at given path *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Epattern\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;**\u002F*.vue&#x27;\u003C\u002Fspan\u003E,\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"exclusion-paths\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#exclusion-paths\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EExclusion paths\u003C\u002Fh2\u003E\u003Cp\u003EWe just saw how inclusion patterns work. \u003Ccode\u003Eignore\u003C\u002Fcode\u003E option on the other hand that helps us exclude components from scanning.\u003C\u002Fp\u003E\n\u003Ch3 id=\"ignore-option\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#ignore-option\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EIgnore option\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Eignore\u003C\u002Fcode\u003E option does exactly opposite of what \u003Ccode\u003Epattern\u003C\u002Fcode\u003E does \u003Cstrong\u003Eand instead of just one string, it accepts an array of strings!\u003C\u002Fstrong\u003E These strings must also follow \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fisaacs\u002Fnode-glob#glob-primer\"\u003Eglob pattern style\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EIgnore option excludes components with specified locations and extensions from scanning.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EThree individual examples\u003C\u002Fstrong\u003E in the code snippet below show how we can exclude components with \u003Ccode\u003E.js\u003C\u002Fcode\u003E extensions. This is particularly helpful in a scenario where you want to \u003Cstrong\u003Eapply ignore-rules to sub-directories located at the given \u003Ccode\u003Epath\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ignore example 1\u003C\u002Fspan\u003E\n{\n  \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fcomponents\u002Fui-2\u002F&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F path of the directory to scan and watch\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ignore js files found at components\u002Fui-2\u002F and subfolders\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eignore\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&quot;**\u002F*.js&quot;\u003C\u002Fspan\u003E],\n}\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ignore example 2\u003C\u002Fspan\u003E\n{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ignore js files found at components\u002Fui-2\u002Fcard\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eignore\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&quot;**\u002Fcard\u002F*.js&quot;\u003C\u002Fspan\u003E],\n}\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ignore example 3\u003C\u002Fspan\u003E\n{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ignore js files found at components\u002Fui-2\u002Flist\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eignore\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&quot;**\u002Flist\u002F*.js&quot;\u003C\u002Fspan\u003E],\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"-nuxtignore-ignore-property-amp-ignore-option-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#-nuxtignore-ignore-property-amp-ignore-option-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E.nuxtignore, ignore property &amp; ignore option:\u003C\u002Fh3\u003E\u003Cp\u003EIt&#39;s important we highlight two similar features of Nuxt that ignore files just like our \u003Ccode\u003Eignore\u003C\u002Fcode\u003E option.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-ignore\u002F#-nuxtignore\"\u003E.nuxtignore\u003C\u002Fa\u003E also ignore files similar to \u003Ccode\u003Eignore\u003C\u002Fcode\u003E option, but \u003Ccode\u003E.nuxtignore\u003C\u002Fcode\u003E ignores files from \u003Ccode\u003E\u002Fpages\u003C\u002Fcode\u003E, \u003Ccode\u003E\u002Flayouts\u003C\u002Fcode\u003E, \u003Ccode\u003E\u002Fmiddleware\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fstore\u003C\u002Fcode\u003E . It&#39;s a dot-file that is defined in the project root. Read more about the \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-ignore\u002F\"\u003Eignore property\u003C\u002Fa\u003E on Nuxt docs.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-ignore\u002F#the-ignore-property\"\u003Eignore\u003C\u002Fa\u003E property, as well, let us define multiple glob-pattern to ignore matching files, like below.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Eignore\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&quot;**\u002F*.test.*&quot;\u003C\u002Fspan\u003E],\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThe impact of both \u003Ccode\u003E.nuxtignore\u003C\u002Fcode\u003E and \u003Ccode\u003Eignore\u003C\u002Fcode\u003E property is realised during build-process, and they operate project-wide, while \u003Ccode\u003Eignore\u003C\u002Fcode\u003E option operates locally and ignores files from \u003Ccode\u003E\u002Fcomponents\u003C\u002Fcode\u003E directory.\u003C\u002Fp\u003E\n\u003Cp\u003ESo, if you&#39;re using 1. \u003Ccode\u003E.nuxtignore\u003C\u002Fcode\u003E, 2. top-level \u003Ccode\u003Eignore\u003C\u002Fcode\u003E property, and 3. \u003Ccode\u003Eignore\u003C\u002Fcode\u003E option, then all three will be merged.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003EFinal ignore = .nuxtignore + Top-level ignore + ignore option (Local)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Chr\u003E\n\u003Cp\u003ENow, let’s say all of your components are automatically imported into the project and you saved so many import statements, but... your project isn’t using all of the components upfront.\u003C\u002Fp\u003E\n\u003Cp\u003EThis brings us to the next feature of this module that is worth highlighting, \u003Cstrong\u003ELazy Loading.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"lazy-loading-your-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#lazy-loading-your-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELazy loading your components\u003C\u002Fh2\u003E\u003Cp\u003EComponents that aren&#39;t required immediately upon initial render - such as components below the fold, sidebar, modals or any other components that are rendered conditionally with \u003Ccode\u003Ev-if\u003C\u002Fcode\u003E or \u003Ccode\u003Ev-else\u003C\u002Fcode\u003E - qualifies for lazy-loading (aka dynamic import).\u003C\u002Fp\u003E\n\u003Cp\u003ELazy loading your components is super easy with this module. You can simply add \u003Ccode\u003ELazy\u003C\u002Fcode\u003E prefix to the component tag when it&#39;s used in the template area.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u002F\u002F pages\u002Flazy-loading-example.vue\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Elazy-list\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Elazy-list-item\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;(post, index) in posts&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;`post-${index}`&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    {{ post.title }}\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Elazy-list-item-icon\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eicon\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;code&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Elazy-list-item\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Elazy-list\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd that’s pretty much it, you have got your component dynamically imported, on-demand!\u003C\u002Fp\u003E\n\u003Ch3 id=\"try-it-yourself-lazy-loading\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#try-it-yourself-lazy-loading\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETry it yourself - Lazy-loading\u003C\u002Fh3\u003E\u003Cp\u003ELazy loading is already implemented at \u003Ccode\u003E\u002Fpages\u002Flazy-loading-example.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ERun the sample project locally,\u003C\u002Fli\u003E\n\u003Cli\u003Evisit \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002Flazy-loading-example\"\u003Ehttp:\u002F\u002Flocalhost:3000\u002Flazy-loading-example\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EOpen Chrome DevTools - Browser&#39;s Inspect Panel, then go to Network Tab.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EHere, you can see that lazy components are loaded when the data becomes available, and they have their own separate bundles.\nSee \u003Ccode\u003EList.js, ListItem.js\u003C\u002Fcode\u003E and \u003Ccode\u003EListItemIcon.js\u003C\u002Fcode\u003E in the screenshot below.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fcdn.krutiepatel.com\u002F2020-06\u002Flazy-loading-with-nuxt-components.png\" alt=\"Lazy loading with nuxt\u002Fcomponents\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"third-party-component-library\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#third-party-component-library\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThird-party component library\u003C\u002Fh2\u003E\u003Cp\u003EThird-party components libraries can also benefit from \u003Ccode\u003E@nuxt\u002Fcomponents\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EI have created a bare-minimum external component library for you to tinker with this feature. It&#39;s called \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FKrutie\u002FKru-Components\"\u003EKru-Components\u003C\u002Fa\u003E!\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EKru Components Repo\u003C\u002Fstrong\u003E - \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FKrutie\u002FKru-Components\"\u003Ehttps:\u002F\u002Fgithub.com\u002FKrutie\u002FKru-Components\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EKru-components library exposes a hook called, \u003Ccode\u003Ecomponents:dirs\u003C\u002Fcode\u003E, that allows you - as a component library author - to extend your components directory into Nuxt projects.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F https:\u002F\u002Fgithub.com\u002FKrutie\u002FKru-Components\u002Fblob\u002Fmaster\u002Fsrc\u002Fnuxt.js\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.nuxt.hook(\u003Cspan class=\"hljs-string\"\u003E&quot;components:dirs&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Edirs\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Add .\u002Fcomponents dir to the list\u003C\u002Fspan\u003E\n  dirs.push({\n    \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: join(__dirname, \u003Cspan class=\"hljs-string\"\u003E&quot;components&quot;\u003C\u002Fspan\u003E),\n    \u003Cspan class=\"hljs-attr\"\u003Eprefix\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&quot;kru&quot;\u003C\u002Fspan\u003E,\n  });\n});\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThis way, components of this external library can take advantage of \u003Cstrong\u003Eautomatic tree-shaking\u003C\u002Fstrong\u003E and \u003Cstrong\u003Ecomponent registration\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EAnd then you - as a user of this external library - can use \u003Ccode\u003Ekru-components\u003C\u002Fcode\u003E as simple as a Nuxt module.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F nuxt.config.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003EbuildModules\u003C\u002Fspan\u003E: [\n \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Use Kru-components as Nuxt module\u003C\u002Fspan\u003E\n \u003Cspan class=\"hljs-string\"\u003E&quot;kru-components\u002Fsrc\u002Fnuxt&quot;\u003C\u002Fspan\u003E,\n],\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"try-it-yourself-third-party-library\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#try-it-yourself-third-party-library\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETry it yourself - Third-party library\u003C\u002Fh3\u003E\u003Cp\u003EIn our sample project, I have implemented \u003Ccode\u003EKru-Components\u003C\u002Fcode\u003E at \u003Ccode\u003Epages\u002Fthird-party-example.vue\u003C\u002Fcode\u003E. Make sure to setup Kru-Components locally and then \u003Ccode\u003Enpm link\u003C\u002Fcode\u003E it to our sample project.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003ENote:\u003C\u002Fstrong\u003E If your component library consists of components that needs transpiling support, then \u003Ccode\u003E@nuxt\u002Fcomponents\u003C\u002Fcode\u003E provides \u003Ccode\u003Etranspile\u003C\u002Fcode\u003E option, which is set to \u003Ccode\u003Eauto\u003C\u002Fcode\u003E by default. Remember, \u003Ccode\u003Etranspile\u003C\u002Fcode\u003E option can be disabled if components already transpiles.\u003C\u002Fp\u003E\n\u003Cp\u003EFor more concrete example, I&#39;d recommend you keep an eye on \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fchakra-ui\u002Fchakra-ui-vue\"\u003EChakra UI\u003C\u002Fa\u003E for Vue as they&#39;re \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fcodebender828\u002Fstatus\u002F1265702818888876033\"\u003Eworking towards making the library compatible\u003C\u002Fa\u003E with \u003Ccode\u003E@nuxt\u002Fcomponents\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh2\u003E\u003Cp\u003EIf you&#39;ve made it this far, you can see how this module presents several opportunities to fine-tune how we auto-import components and improve overall Nuxt Developer Experience. Here&#39;s the brief summary of what we learned in this article.\u003C\u002Fp\u003E\n\u003Cp\u003EThere are three ways you can get started with this module.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Eactivate \u003Ccode\u003Ecomponents\u003C\u002Fcode\u003E and start using components from \u003Ccode\u003E~\u002Fcomponents\u003C\u002Fcode\u003E directory, \u003Cstrong\u003Eor\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Eprovide directories as strings and start using components from specified directories, \u003Cstrong\u003Eor\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Eprovide directories as an object, along with configuration that can range from basic to advance. Here&#39;s the recap of directory options we covered:\u003Col\u003E\n\u003Cli\u003E\u003Cstrong\u003Epath\u003C\u002Fstrong\u003E - (String) - Of all four options, path is required parameter. It indicates which directory is to be scanned.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eprefix\u003C\u002Fstrong\u003E - (String) - Specify the prefix for the component names.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eextensions\u003C\u002Fstrong\u003E (Array) - Specify file extensions of the components to be scanned.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Epattern\u003C\u002Fstrong\u003E - (String) - Specify path and extensions of the components to be scanned.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Eignore\u003C\u002Fstrong\u003E - (Array) - Specify path and extensions of the components to be excluded from scanning.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EAbove directory options combined with lazy-loading, this module can be used in many possible combinations. However, you can always start with bare-minimum option, such as \u003Ccode\u003Ecomponents: true\u003C\u002Fcode\u003E and refine your configuration as you go.\u003C\u002Fp\u003E\n",links:{previous:{title:D,slug:F},next:{title:i,slug:j}}},{path:"zh\u002Fblog\u002Fgoing-full-static.md",slug:j,readtime:{text:"10 min read",minutes:9.54,time:572400,words:1908},title:i,description:"Long awaited features for Jamstack fans has been shipped in v2.13: full static build with nuxt export, improved smart prefetching, integrated crawler, faster re-deploy, built-in web server and new target option for config :zap:️",imgUrl:"blog\u002Fgoing-full-static\u002Fmain.png",date:"2020-06-18T00:00:00.000Z",authors:[{name:w,avatarUrl:c,link:y}],tags:[a,"Static","Crawler","Live Preview"],body:"\u003Ch2 id=\"too-long-to-read\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#too-long-to-read\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EToo long to read\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003EUpgrade nuxt to \u003Ccode\u003E2.13.0\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ESet \u003Ccode\u003Etarget: &#39;static&#39;\u003C\u002Fcode\u003E in your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ERun \u003Ccode\u003Enuxt build &amp;&amp; nuxt export\u003C\u002Fcode\u003E instead of \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EThat&#39;s it ✨\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cem\u003EBonus: you can run \u003Ccode\u003Enuxt serve\u003C\u002Fcode\u003E to run a local server serving your generated static application.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cvideo poster=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588095794\u002Fnuxt-full-static_rnnbvm.jpg\" loop playsinline controls\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588095794\u002Fnuxt-full-static_rnnbvm.webm\" type=\"video\u002Fwebm\" \u002F\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1592503417\u002Fnuxt-full-static_rnnbvm.mp4\" type=\"video\u002Fmp4\" \u002F\u003E\n  \u003Csource src=\"https:\u002F\u002Fres.cloudinary.com\u002Fnuxt\u002Fvideo\u002Fupload\u002Fv1588095794\u002Fnuxt-full-static_rnnbvm.ogv\" type=\"video\u002Fogg\" \u002F\u003E\n\u003C\u002Fvideo\u003E\n\n\u003Ch2 id=\"table-of-contents\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#table-of-contents\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETable of Contents\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#too-long-to-read\"\u003EToo long to read\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#table-of-contents\"\u003ETable of Contents\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#history\"\u003EHistory\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#current-issues\"\u003ECurrent issues\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#new-config-option-code-target-code-\"\u003ENew config option: \u003Ccode\u003Etarget\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#new-command-code-nuxt-export-code-\"\u003ENew command: \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#crazy-fast-static-applications\"\u003ECrazy fast static applications\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#crawler-integrated\"\u003ECrawler integrated\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#faster-re-deploy\"\u003EFaster re-deploy\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#new-command-code-nuxt-serve-code-\"\u003ENew command: \u003Ccode\u003Enuxt serve\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#preview-mode\"\u003EPreview mode\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#commands\"\u003ECommands\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#notes\"\u003ENotes\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#what-to-do-next\"\u003EWhat to do next\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"history\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#history\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHistory\u003C\u002Fh2\u003E\u003Cp\u003ENuxt had the static generation feature with \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E since \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Freleases\u002Ftag\u002Fv0.3.2\"\u003Ev0.3.2\u003C\u002Fa\u003E (November 2016), since then we have improved it in multiple ways but never achieved full static generation. Today I am excited to announce that full static export is now possible with Nuxt 2.13.\u003C\u002Fp\u003E\n\u003Ch2 id=\"current-issues\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#current-issues\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECurrent issues\u003C\u002Fh2\u003E\u003Cp\u003E\u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E is mostly pre-rendering, when you navigate client-side, \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E and \u003Ccode\u003Efetch\u003C\u002Fcode\u003E are called, \u003Cem\u003Emaking a request to your API\u003C\u002Fem\u003E. A lot of users asked to support a &quot;full static&quot; mode, meaning to not call these 2 hooks on navigation, since the next page has been already pre-rendered.\u003C\u002Fp\u003E\n\u003Cp\u003EAlso, the developer experience is not optimal:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EYou have access to \u003Ccode\u003Ereq\u003C\u002Fcode\u003E or \u003Ccode\u003Eres\u003C\u002Fcode\u003E on SSR but not when running \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eprocess.static\u003C\u002Fcode\u003E is \u003Ccode\u003Etrue\u003C\u002Fcode\u003E only when running \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E, making it slow to develop Nuxt modules or plugins for static generation\u003C\u002Fli\u003E\n\u003Cli\u003EYou have to specify all your \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#dynamic-routes\"\u003Edynamic routes\u003C\u002Fa\u003E in \u003Ccode\u003Egenerate.routes\u003C\u002Fcode\u003E, making it harder since you don&#39;t have access to nuxt modules there.\u003C\u002Fli\u003E\n\u003Cli\u003EYou cannot test the \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#spa-fallback\"\u003ESPA fallback\u003C\u002Fa\u003E in development, the fallback is a client-only version of your Nuxt application that loads when hitting a 404 page\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E runs \u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E by default, making it slower to generate your website if only your content changed\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ENote that it was possible to have full static support with \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FDreaMinder\u002Fnuxt-payload-extractor\"\u003Enuxt-payload-extractor\u003C\u002Fa\u003E module but it was more verbose to use and had limitations.\u003C\u002Fp\u003E\n\u003Ch2 id=\"new-config-option-code-target-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#new-config-option-code-target-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENew config option: \u003Ccode\u003Etarget\u003C\u002Fcode\u003E\u003C\u002Fh2\u003E\u003Cp\u003ETo improve the user experience as well as telling Nuxt that you want to export your application to static hosting, we are introducing a \u003Ccode\u003Etarget\u003C\u002Fcode\u003E option in your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Etarget\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;static&#x27;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F default: &#x27;server&#x27;\u003C\u002Fspan\u003E\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ERunning \u003Ccode\u003Enuxt dev\u003C\u002Fcode\u003E with the static target will improve the developer experience:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ERemove \u003Ccode\u003Ereq\u003C\u002Fcode\u003E &amp; \u003Ccode\u003Eres\u003C\u002Fcode\u003E from context\u003C\u002Fli\u003E\n\u003Cli\u003EFallback to client-side rendering on 404, errors and redirects (see \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-generate#fallback\"\u003ESPA fallback\u003C\u002Fa\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E$route.query\u003C\u002Fcode\u003E will always be equal to \u003Ccode\u003E{}\u003C\u002Fcode\u003E on server-side rendering\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eprocess.static\u003C\u002Fcode\u003E is \u003Ccode\u003Etrue\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EWe are also exposing \u003Ccode\u003Eprocess.target\u003C\u002Fcode\u003E for modules author to add logic depending on the user target.\u003C\u002Fp\u003E\n\u003Ch2 id=\"new-command-code-nuxt-export-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#new-command-code-nuxt-export-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENew command: \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E\u003C\u002Fh2\u003E\u003Cp\u003ETo avoid introducing a breaking change for \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E, we are introducing a new command called \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E: export your Nuxt app to static HTML in a \u003Ccode\u003Edist\u002F\u003C\u002Fcode\u003E directory.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--nuxt-green\"\u003E\n\n\u003Cp\u003E⚠️ You need to run \u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E before calling \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"crazy-fast-static-applications\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#crazy-fast-static-applications\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECrazy fast static applications\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E will pre-render all your pages to HTML and save a payload file in order to mock \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E and \u003Ccode\u003Efetch\u003C\u002Fcode\u003E on client-side navigation, this means \u003Cstrong\u003Eno\u003C\u002Fstrong\u003E \u003Cstrong\u003Emore HTTP calls to your API on client-side navigation.\u003C\u002Fstrong\u003E By extracting the page payload to a js file, \u003Cstrong\u003Eit also reduces the HTML size\u003C\u002Fstrong\u003E  served as well as preloading it (from the \u003Clink\u003E in the header) for optimal performance.\u003C\u002Fp\u003E\n\u003Cp\u003EWe also improved the \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Fintroducing-smart-prefetching\"\u003Esmart prefetching\u003C\u002Fa\u003E when doing full static, it will also fetch the payloads, making navigation instant 👀\u003C\u002Fp\u003E\n\u003Ch3 id=\"crawler-integrated\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#crawler-integrated\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECrawler integrated\u003C\u002Fh3\u003E\u003Cp\u003EOn top of that, it also has a crawler inside, detecting every relative link and generating it:\u003C\u002Fp\u003E\n\u003Cp\u003EIf you want to exclude a bunch of routes, use the \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-generate#exclude\"\u003Egenerate.exclude\u003C\u002Fa\u003E. You can keep using \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-generate#routes\"\u003Egenerate.routes\u003C\u002Fa\u003E to add extra routes that the crawler could not detect.\u003C\u002Fp\u003E\n\u003Cp\u003ETo disable the crawler, set \u003Ccode\u003Egenerate.crawler: false\u003C\u002Fcode\u003E in your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"faster-re-deploy\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#faster-re-deploy\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFaster re-deploy\u003C\u002Fh3\u003E\u003Cp\u003EBy separating \u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E and \u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E, we are opening a new range of improvements: pre-render your pages only if you content has changed, this means: no Wepack build → faster redeployments.\u003C\u002Fp\u003E\n\u003Ch2 id=\"new-command-code-nuxt-serve-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#new-command-code-nuxt-serve-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENew command: \u003Ccode\u003Enuxt serve\u003C\u002Fcode\u003E\u003C\u002Fh2\u003E\u003Cp\u003EOnce you statically generated your Nuxt app into \u003Ccode\u003Edist\u002F\u003C\u002Fcode\u003E, use \u003Ccode\u003Enuxt serve\u003C\u002Fcode\u003E to start a production HTTP server and serve your static app, supporting \u003Ca href=\"\u002Fguide\u002Frouting#spa-fallback\"\u003ESPA Fallback\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EThis command is perfect to locally test your static application before pushing to your favourite static hosting provider.\u003C\u002Fp\u003E\n\u003Ch2 id=\"preview-mode\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#preview-mode\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPreview mode\u003C\u002Fh2\u003E\u003Cp\u003EWe do support live preview out of the box to keep calling your API:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F plugins\u002Fpreview.client.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E{ query, enablePreview }\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (query.preview) {\n    enablePreview()\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIt will automatically refresh the page data (calling \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E, \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E and \u003Ccode\u003Efetch\u003C\u002Fcode\u003E).\u003C\u002Fp\u003E\n\u003Cp\u003EWhen the preview mode is activated, \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E and \u003Ccode\u003Efetch\u003C\u002Fcode\u003E original methods will be called.\u003C\u002Fp\u003E\n\u003Ch2 id=\"commands\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#commands\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECommands\u003C\u002Fh2\u003E\u003Cp\u003EYou can now run different commands depending of the \u003Ccode\u003Etarget\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Eserver\u003C\u002Fcode\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt dev\u003C\u002Fcode\u003E: Start the development server\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E: Bundle your Nuxt application for production\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt start\u003C\u002Fcode\u003E: Start the production server\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Estatic\u003C\u002Fcode\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt dev\u003C\u002Fcode\u003E: Start the development server (static aware)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt build\u003C\u002Fcode\u003E: Bundle your Nuxt application for production (static aware)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt export\u003C\u002Fcode\u003E: Export your application to static HTML in \u003Ccode\u003Edist\u002F\u003C\u002Fcode\u003E directory\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt serve\u003C\u002Fcode\u003E: Serve your production application from \u003Ccode\u003Edist\u002F\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"notes\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#notes\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENotes\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003EWe added \u003Ccode\u003Eexport\u003C\u002Fcode\u003E key in \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E which is currently an alias of \u003Ccode\u003Egenerate\u003C\u002Fcode\u003E, it will take over for Nuxt 3\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E is being deprecated (but still working without any breaking change now) and will be removed for Nuxt 3\u003C\u002Fli\u003E\n\u003Cli\u003EWe added \u003Ccode\u003Eexport\u003C\u002Fcode\u003E hooks that are slightly different than \u003Ccode\u003Egenerate\u003C\u002Fcode\u003E hooks to improve module possibilities\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"what-to-do-next\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-to-do-next\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat to do next\u003C\u002Fh3\u003E\u003Cul\u003E\n\u003Cli\u003ETo learn more about how to move from @nuxtjs\u002Fdotenv to runtime config check out \u003Ca href=\"\u002Fblog\u002Fmoving-from-nuxtjs-dotenv-to-runtime-config\"\u003Ethis article\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe to the newsletter\u003C\u002Fa\u003E to not miss the upcoming articles and resources.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:g,slug:h},next:{title:d,slug:e}}},{path:"zh\u002Fblog\u002Fmoving-from-nuxtjs-dotenv-to-runtime-config.md",slug:e,readtime:{text:E,minutes:13.39,time:803400.0000000001,words:2678},title:d,description:"In our frontend applications, we often use APIs and third-party integrations which require us to use configuration data which is usually provided by environment variables. These variables should not be exposed to the frontend as the browser environment is accessible by all visitors.",imgUrl:"blog\u002Fmoving-from-nuxtjs-dotenv-to-runtime-config\u002Fmain.png",date:"2020-06-15T00:00:00.000Z",authors:[{name:l,avatarUrl:f,link:k}],tags:[a,"env"],body:"\u003Cp\u003EIt&#39;s time to migrate from @nuxtjs\u002Fdotenv module to use our new runtime config which has been released as of Nuxt v2.13.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#what-are-environment-variables\"\u003EWhat are environment variables\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#misconceptions\"\u003EMisconceptions\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#why-we-need-webpack\"\u003EWhy we need webpack\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#how-environment-variables-work\"\u003EHow environment variables work\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#introducing-the-nuxtjs-runtime-config\"\u003EIntroducing the Nuxt.js runtime config\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#migrating-to-the-nuxtjs-runtime-config-from-nuxtjsdotenv\"\u003EMigrating to the Nuxt.js runtime config from @nuxtjs\u002Fdotenv\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#migrating-to-the-nuxtjs-runtime-config-from-the-env-property\"\u003EMigrating to the Nuxt.js runtime config from the env property\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#the-env-property-v-runtime-config\"\u003EThe env property v runtime config\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-your-config-values\"\u003EUsing your config values\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#migrating-your-config-values-in-your-script-tags\"\u003EMigrating your config values in your script tags\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#migrating-your-config-values-in-your-templates\"\u003EMigrating your config values in your templates\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#expandinterpolation-support\"\u003EExpand\u002FInterpolation Support\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#best-practices\"\u003EBest Practices:\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#what-to-do-next\"\u003EWhat to do next\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"what-are-environment-variables\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-are-environment-variables\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat are environment variables\u003C\u002Fh2\u003E\u003Cp\u003EIn our frontend applications, we often use APIs and third-party integrations which require us to use configuration data which is usually provided by environment variables. These variables should not be exposed to the frontend as the browser environment is accessible by all visitors. Instead, we can store sensitive information, like keys and secrets, in password-protected CI tools or deployment pipelines. However, when we are developing applications locally we might not have access to deployment pipelines and therefore need somewhere to store these environment variables. \u003C\u002Fp\u003E\n\u003Ch2 id=\"misconceptions\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#misconceptions\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EMisconceptions\u003C\u002Fh2\u003E\u003Cp\u003EIt is very easy to think that your secret keys are safe by placing them somewhere other than your source code such as a \u003Ccode\u003E.env\u003C\u002Fcode\u003E file, which makes it very easy to expose your secret keys to client-side bundles. Adding your \u003Ccode\u003E.env\u003C\u002Fcode\u003E file to \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E means this file is not pushed to your version control and therefore not available for people to see which is important if your repo is public. However, the .env file is not encrypted, and therefore placing secrets in environment variables doesn&#39;t really provide us with an increase in security and really it just keeps sensitive data out of plain sight. A \u003Ccode\u003E.env\u003C\u002Fcode\u003E option can easily mislead developers to expose secret keys to client-side bundles so always make sure this file is added to your .gitignore.\u003C\u002Fp\u003E\n\u003Ch2 id=\"why-we-need-webpack\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#why-we-need-webpack\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhy we need webpack\u003C\u002Fh2\u003E\u003Cp\u003EIsomorphic applications, otherwise known as universal applications, need to share code between both the server and the client. Babel is used to compile our modern ES6 JavaScript code down to ES5 JavaScript so that it can work across all platforms. Node.js which is an asynchronous event-driven JavaScript runtime that can be used in computers and servers outside of a browser environment, uses the module system. \u003C\u002Fp\u003E\n\u003Cp\u003EUsing modules in Node.js is done using require, eg require(&#39;lodash&#39;). However, browser support for modules is still incomplete and therefore we need bundling tools such as webpack to transpile these modules into code that the browsers can read. Webpack basically makes client-side development more &quot;Node-like&quot; with the same module system semantics. This means that a require statement or an ES6 import statement will resolve the same way. And as our applications are not only JavaScript but also HTML, CSS and images we can require these using webpack&#39;s loaders.\u003C\u002Fp\u003E\n\u003Ch2 id=\"how-environment-variables-work\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#how-environment-variables-work\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHow environment variables work\u003C\u002Fh2\u003E\u003Cp\u003EAt runtime, Node.js automatically loads environment variables into \u003Ccode\u003Eprocess.env\u003C\u002Fcode\u003E so that they are available to use in your application. The reference to the environment variable is replaced with the correct value. For example, if you had an \u003Ccode\u003EAPI_SECRET\u003C\u002Fcode\u003E key with the value of \u003Ccode\u003E&#39;my-secret&#39;\u003C\u002Fcode\u003E then in your application where you had used \u003Ccode\u003Eprocess.env.API_SECRET\u003C\u002Fcode\u003E this would be replaced with the value of my-secret. \u003C\u002Fp\u003E\n\u003Cp\u003EValues are read during build time and persisted in the webpack bundle. Therefore if we change our \u003Ccode\u003EAPI_SECRET\u003C\u002Fcode\u003E we will need to rebuild our application so that it can read the new value.\u003C\u002Fp\u003E\n\u003Ch2 id=\"introducing-the-nuxt-js-runtime-config\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#introducing-the-nuxt-js-runtime-config\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EIntroducing the Nuxt.js runtime config\u003C\u002Fh2\u003E\u003Cp\u003EWith Nuxt.js 2.13+ we have runtime config and built-in dotenv support providing better security and faster development! Two new options are added to your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E file which will allow passing runtime configuration which is then accessible using \u003Ccode\u003E$config\u003C\u002Fcode\u003E from the context. Despite the \u003Ccode\u003Eenv\u003C\u002Fcode\u003E option, runtime config is added to the Nuxt payload so there is no need to rebuild in order to update the runtime configuration when working in development or with Server-side rendering or single-page applications. Although for static sites you will still need to regenerate your site to see these changes.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EpublicRuntimeConfig\u003C\u002Fspan\u003E: {},\n  \u003Cspan class=\"hljs-attr\"\u003EprivateRuntimeConfig\u003C\u002Fspan\u003E: {}\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"the-new-runtime-config-values-are-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-new-runtime-config-values-are-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe new runtime config values are:\u003C\u002Fh3\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003EpublicRuntimeConfig\u003C\u002Fcode\u003E should hold all env variables that are public as these will be exposed on the frontend. This could include a reference to your public URL for example.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003EprivateRuntimeConfig\u003C\u002Fcode\u003E should hold all env variables that are private and that should not be exposed on the frontend. This could include a reference to your API secret tokens for example.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E⚠️ privateRuntimeConfig always overrides publicRuntimeConfig on server-side. \u003Ccode\u003E$config\u003C\u002Fcode\u003E in server mode is { ...public, ...private } but for client mode only { ...public }\u003C\u002Fp\u003E\n\u003Ch2 id=\"migrating-to-the-nuxt-js-runtime-config-from-nuxtjs-dotenv\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#migrating-to-the-nuxt-js-runtime-config-from-nuxtjs-dotenv\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EMigrating to the Nuxt.js runtime config from @nuxtjs\u002Fdotenv\u003C\u002Fh2\u003E\u003Cp\u003EIf you have the \u003Ccode\u003E@nuxtjs\u002Fdotenv\u003C\u002Fcode\u003E module installed then you can remove this module by uninstalling it and removing it from the modules section of your nuxt.config file. You can then migrate to the Nuxt.js runtime config by adding the new properties to your nuxt.config.js file. And then you can add your variables from your \u003Ccode\u003E.env\u003C\u002Fcode\u003E files into your public and private runtime config properties so that Nuxt.js has access to these variables at runtime.\u003C\u002Fp\u003E\n\u003Cp\u003EIf your \u003Ccode\u003E.env\u003C\u002Fcode\u003E file looks something like this:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E.env\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003EBASE_URL=https:\u002F\u002Fnuxtjs.org\nAPI_SECRET=1234\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen migrating it to the new runtime config would look something like:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EpublicRuntimeConfig\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EbaseURL\u003C\u002Fspan\u003E: process.env.BASE_URL\n  },\n  \u003Cspan class=\"hljs-attr\"\u003EprivateRuntimeConfig\u003C\u002Fspan\u003E: {\n        \u003Cspan class=\"hljs-attr\"\u003EapiSecret\u003C\u002Fspan\u003E: process.env.API_SECRET\n  },\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThis can be simplified even further by using a default value instead of having to maintain the value in both the runtime config and the \u003Ccode\u003E.env\u003C\u002Fcode\u003E file when using non-sensitive values. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EpublicRuntimeConfig\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EbaseURL\u003C\u002Fspan\u003E: process.env.BASE_URL || \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fnuxtjs.org&#x27;\u003C\u002Fspan\u003E\n  },\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAlso this can be a better replacement for \u003Ccode\u003E.env.example\u003C\u002Fcode\u003E and the default values can point to staging keys\u002Fconfigs.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EpublicRuntimeConfig\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EbaseURL\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fdev.nuxtjs.org&#x27;\u003C\u002Fspan\u003E || \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fnuxtjs.org&#x27;\u003C\u002Fspan\u003E\n  },\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"migrating-to-the-nuxt-js-runtime-config-from-the-env-property\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#migrating-to-the-nuxt-js-runtime-config-from-the-env-property\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EMigrating to the Nuxt.js runtime config from the env property\u003C\u002Fh2\u003E\u003Cp\u003EIf you have your env variables stored in your nuxt.config then you can migrate these to use the new runtime configs by adding them to your nuxt.config file.\u003C\u002Fp\u003E\n\u003Cp\u003EIf your env variables in your nuxt.config look like this:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Eenv\u003C\u002Fspan\u003E:  {\n        \u003Cspan class=\"hljs-attr\"\u003EBASE_URL\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fnuxtjs.org&#x27;\u003C\u002Fspan\u003E,\n        \u003Cspan class=\"hljs-attr\"\u003EAPI_SECRET\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;1234&#x27;\u003C\u002Fspan\u003E\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen migrating it to the new runtime config would look something like:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EpublicRuntimeConfig\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EbaseURL\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fnuxtjs.org&#x27;\u003C\u002Fspan\u003E\n  },\n  \u003Cspan class=\"hljs-attr\"\u003EprivateRuntimeConfig\u003C\u002Fspan\u003E: {\n        \u003Cspan class=\"hljs-attr\"\u003EapiSecret\u003C\u002Fspan\u003E: process.env.API_SECRET\n  },\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E⚠️ Remember secret keys should not be placed in your nuxt.config file so if you do have them in your env variables then you should remove them. You can create a .env file if needed or else your secret keys can be stored just in your hosting environment.\u003C\u002Fp\u003E\n\u003Ch2 id=\"the-env-property-v-runtime-config\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-env-property-v-runtime-config\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe env property v runtime config\u003C\u002Fh2\u003E\u003Cp\u003EYou can still use the env property and it is still useful for env variables that are required at build time rather than runtime such as NODE_ENV=staging or VERSION=1.2.3. However for runtime env variables the runtime config is preferred as using the env property can be as dangerous as  using the dotenv module when used incorrectly.\u003C\u002Fp\u003E\n\u003Ch2 id=\"using-your-config-values\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-your-config-values\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing your config values\u003C\u002Fh2\u003E\u003Cp\u003EOnce you have stored your values in the public or private runtime config in your \u003Ccode\u003Enuxt.config\u003C\u002Fcode\u003E file you can then access these values anywhere by using the context in your pages, store, components and plugins by using \u003Ccode\u003Ethis.$config\u003C\u002Fcode\u003E or \u003Ccode\u003Econtext.$config instead.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E&lt;script&gt;\n        asyncData ({ \u003Cspan class=\"hljs-attr\"\u003E$config\u003C\u002Fspan\u003E: { baseURL } }) { \n            \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E posts = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`\u003Cspan class=\"hljs-subst\"\u003E${baseURL}\u003C\u002Fspan\u003E\u002Fposts`\u003C\u002Fspan\u003E)\n      .then(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E res.json())\n        }\n&lt;\u002Fscript&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd inside your templates you can access it directly using \u003Ccode\u003E{{ $config.* }}\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EOur Url is: {{ $config.baseURL}}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"migrating-your-config-values-in-your-script-tags\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#migrating-your-config-values-in-your-script-tags\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EMigrating your config values in your script tags\u003C\u002Fh2\u003E\u003Cp\u003EIf you are already using the env variable in your script tags such as in async data\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ env }) {\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E then you can just replace env for $config when passing into the context. Here we also pass in the key from the config that we want to access. In this case baseURL.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData ({ \u003Cspan class=\"hljs-attr\"\u003E$config\u003C\u002Fspan\u003E: { baseURL } }) {\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen instead of using env.apiUrl \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E posts = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`\u003Cspan class=\"hljs-subst\"\u003E${env.baseUrl}\u003C\u002Fspan\u003E\u002Fposts`\u003C\u002Fspan\u003E)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eyou can use baseUrl direct in your code as we have already passed this in into the config option above and therefore we don&#39;t have to reference $config in our fetch.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E posts = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`\u003Cspan class=\"hljs-subst\"\u003E${baseURL}\u003C\u002Fspan\u003E\u002Fposts`\u003C\u002Fspan\u003E)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"migrating-your-config-values-in-your-templates\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#migrating-your-config-values-in-your-templates\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EMigrating your config values in your templates\u003C\u002Fh2\u003E\u003Cp\u003EIf you have code that is using the env variables you can migrate to using the $config option. For example if in your code you had\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{process.env.baseURL}}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou can change this by using $config instead\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{$config.baseURL}}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"expand-interpolation-support\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#expand-interpolation-support\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EExpand\u002FInterpolation Support\u003C\u002Fh2\u003E\u003Cp\u003EExpand for run time config happens only if there is already a key. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E.env\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003EAPI_SECRET=1234\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EprivateRuntimeConfig\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EAPI_SECRET\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;&#x27;\u003C\u002Fspan\u003E\n  },\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EInterpolation allows nesting env vars. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E.env\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003EBASE_URL=\u002Fapi\nPUBLIC_URL=https:\u002F\u002Fnuxtjs.org\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EprivateRuntimeConfig\u003C\u002Fspan\u003E: {\n        \u003Cspan class=\"hljs-attr\"\u003EbaseURL\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;${PUBLIC_URL}${BASE_URL}&#x27;\u003C\u002Fspan\u003E,  },\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eℹ️ It is also possible to use a function for publicRuntimeConfig and privateRuntimeConfig but not recommended.\u003C\u002Fp\u003E\n\u003Ch2 id=\"best-practices-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#best-practices-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EBest Practices:\u003C\u002Fh2\u003E\u003Cp\u003E🚫 Don’t commit sensitive values or secret keys to git\u003C\u002Fp\u003E\n\u003Cp\u003E🚫 Don&#39;t store secret keys or sensitive values in your nuxt.config or \u003Ccode\u003E.env\u003C\u002Fcode\u003E unless is gitignored\u003C\u002Fp\u003E\n\u003Cp\u003E✅ Use default values for runtimeConfig such as process.env.baseURL || &#39;\u003Ca href=\"https:\u002F\u002Fnuxt.js.org&#39;\"\u003Ehttps:\u002F\u002Fnuxt.js.org&#39;\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E✅ Store secret keys correctly using your hosting platform such as on Heroku or Netlify etc\u003C\u002Fp\u003E\n\u003Cp\u003E✅ Follow JS naming convention (secretKey rather than SECRET_KEY) for runtimeConfig\u003C\u002Fp\u003E\n\u003Cp\u003E✅ Prefer using runtimeConfig rather than \u003Ccode\u003Eenv\u003C\u002Fcode\u003E option\u003C\u002Fp\u003E\n\u003Ch2 id=\"what-to-do-next\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-to-do-next\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat to do next\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003ETo learn more about going full static checkout \u003Ca href=\"\u002Fblog\u002Fgoing-full-static\"\u003Ethis article\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe to the newsletter\u003C\u002Fa\u003E to not miss the upcoming articles and resources.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:i,slug:j},next:{title:m,slug:n}}},{path:"zh\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode.md",slug:n,readtime:{text:"18 min read",minutes:17.91,time:1074600,words:3582},title:m,description:"The @nuxtjs\u002Fcolor-mode module is a cool way of adding dark mode to your site. But not only does it switch from dark to light but also any color theme (eg. sepia mode). It even has auto detection so that it will choose the right mode depending on your system appearance.",imgUrl:"blog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fmain.png",date:"2020-05-19T00:00:00.000Z",authors:[{name:l,avatarUrl:f,link:k}],tags:[a,"Color mode"],body:"\u003Cp align=\"center\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fcolor-mode.nuxtjs.app\u002F\" target=\"_blank\" rel=\"noopener nofollow\"\u003EView demo\u003C\u002Fa\u003E \u002F \n  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\" target=\"_blank\" rel=\"noopener nofollow\"\u003ESource\u003C\u002Fa\u003E\n\u003C\u002Fp\u003E\n\n\u003Cp\u003EThe \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\"\u003E@nuxtjs\u002Fcolor-mode module\u003C\u002Fa\u003E is a cool way of adding dark mode to your site. But not only does it switch from dark to light but also any color theme (eg: sepia mode). It even has auto detection so that it will choose the right mode depending on your system appearance.\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#how-does-it-work\"\u003EHow does it work\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#let-39-s-get-started\"\u003ELet&#39;s get started\u003C\u002Fa\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"#install-the-color-mode-module\"\u003EInstall the color-mode module\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-your-colour-styles\"\u003EAdding your colour styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#inspecting-the-html\"\u003EInspecting the HTML\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-a-color-mode-switcher\"\u003ECreating a color-mode switcher\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#importing-our-component\"\u003EImporting our component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-click-event-to-change-our-colours\"\u003EAdding a click event to change our colours\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-some-icons\"\u003EAdding some icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#importing-the-svgs-as-components\"\u003EImporting the svgs as components\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-dynamic-component\"\u003EAdding a dynamic component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#styling-our-icons\"\u003EStyling our icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#creating-a-method-to-show-our-preferred-class\"\u003ECreating a method to show our preferred class\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-some-text-using-the-colorscheme-component\"\u003EAdding some text using the ColorScheme component\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#adding-a-text-when-system-is-chosen\"\u003EAdding a text when system is chosen\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#tidying-up-our-styles\"\u003ETidying up our styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#what-to-do-next\"\u003EWhat to do next\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"how-does-it-work\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#how-does-it-work\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHow does it work\u003C\u002Fh2\u003E\u003Cp\u003EThe \u003Ccode\u003E@nuxtjs\u002Fcolor-mode\u003C\u002Fcode\u003E adds a \u003Ccode\u003E.${color}-mode\u003C\u002Fcode\u003E class to the \u003Ccode\u003E&lt;html&gt;\u003C\u002Fcode\u003E tag. It works with any NuxtJS target, either static or server and universal or client-side rendering. It auto detects the system color-mode so that you don&#39;t have to manually change the colour. \u003C\u002Fp\u003E\n\u003Cp\u003EIt injects a \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E helper with:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Epreference\u003C\u002Fcode\u003E: Actual color-mode selected (can be \u003Ccode\u003E&#39;system&#39;\u003C\u002Fcode\u003E), update it to change the user preferred colour mode\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Evalue\u003C\u002Fcode\u003E: Useful to know what color mode has been detected when \u003Ccode\u003E$colorMode === &#39;system&#39;\u003C\u002Fcode\u003E, you should not update it\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Eunknown\u003C\u002Fcode\u003E: Useful to know if, during SSR or static generation, we need to render a placeholder\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"let-39-s-get-started\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#let-39-s-get-started\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELet&#39;s get started\u003C\u002Fh2\u003E\u003Cp\u003EYou can work on an already created project or start a new one. For this example I have created a new project and added some dummy text to the index.vue file in the pages folder.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003ETesting color mode\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"install-the-color-mode-module\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#install-the-color-mode-module\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInstall the color-mode module\u003C\u002Fh3\u003E\u003Cp\u003EFirst of all you need to install the module as a dependency to your Nuxt.js project. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Eyarn add --dev @nuxtjs\u002Fcolor-mode\n\u003Cspan class=\"hljs-comment\"\u003E# OR npm install --save-dev @nuxtjs\u002Fcolor-mode\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen you need to add the module to the \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E section of your nuxt.config.js file. \u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--nuxt-green\"\u003E\n\n\u003Cp\u003E\u003Cb\u003EInfo:\u003C\u002Fb\u003E If you don&#39;t have a nuxt.config.js file already you can create one in the root directory and add the code below.\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs javascript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EbuildModules\u003C\u002Fspan\u003E: [\n    \u003Cspan class=\"hljs-string\"\u003E&#x27;@nuxtjs\u002Fcolor-mode&#x27;\u003C\u002Fspan\u003E\n  ]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIf you using a version of Nuxt.js lower than 2.9.0 you will need to add it to the \u003Ccode\u003Emodules\u003C\u002Fcode\u003E property instead of \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert Alert--nuxt-green\"\u003E\n\n\u003Cp\u003E\u003Cb\u003EInfo:\u003C\u002Fb\u003E To check what version of Nuxt.js you have you can run \u003Ccode\u003Eyarn nuxt -v\u003C\u002Fcode\u003E or \u003Ccode\u003Enpm run nuxt -v\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Ch3 id=\"adding-your-colour-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-your-colour-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding your colour styles\u003C\u002Fh3\u003E\u003Cp\u003ENow you need to add some styles to your mode classes. Let&#39;s add a \u003Ccode\u003Emain.css\u003C\u002Fcode\u003E file in our assets folder. We will use CSS variables to set the root colour which will be light mode and then set the colours for dark and sepia mode. Then we can add some styles to our body and link tags.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eassets\u002Fmain.css\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E\u003Cspan class=\"hljs-selector-pseudo\"\u003E:root\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#243746\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-primary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#158876\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#0e2233\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#f3f5f4\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#fff\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ddd\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-selector-class\"\u003E.dark-mode\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ebf4f1\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-primary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#41b38a\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#fdf9f3\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#091a28\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#071521\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#0d2538\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.sepia-mode\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003E--color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#433422\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--color-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#504231\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#f1e7d0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--bg-secondary\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#eae0c9\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003E--border-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E#ded0bf\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-selector-tag\"\u003Ebody\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Efont-family\u003C\u002Fspan\u003E: -apple-system, BlinkMacSystemFont, \u003Cspan class=\"hljs-string\"\u003E&#x27;Segoe UI&#x27;\u003C\u002Fspan\u003E, Roboto, Oxygen, Ubuntu, Cantarell, \u003Cspan class=\"hljs-string\"\u003E&#x27;Open Sans&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;Helvetica Neue&#x27;\u003C\u002Fspan\u003E, sans-seriff;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--bg);\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color);\n  \u003Cspan class=\"hljs-attribute\"\u003Etransition\u003C\u002Fspan\u003E: background-color .\u003Cspan class=\"hljs-number\"\u003E3s\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Ea\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn order to use this CSS file in our application we need to register it. We do this by adding a css property to our configuration file and adding the css file that we have just created.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Ecss: [\u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fassets\u002Fmain.css&#x27;\u003C\u002Fspan\u003E]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"inspecting-the-html\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#inspecting-the-html\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EInspecting the HTML\u003C\u002Fh3\u003E\u003Cp\u003ENow if you launch your site with \u003Ccode\u003Enpm run dev\u003C\u002Fcode\u003E or \u003Ccode\u003Enpx nuxt dev\u003C\u002Fcode\u003E you should see dark mode if your system is already set to dark mode and if you inspect the code you will see the class added to your html tag. \n\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ftesting-html.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;dark-mode&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u002F\u002F you might have light-mode here\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EUsing the dev tools change the mode to sepia-mode and light-mode to see the effects.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;sepia-mode&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- or --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ehtml\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;light-mode&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E&lt;!-- or dark mode if you have already seen the light --&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou can also change the colour in the console by typing:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E$nuxt.$colorMode.preference = \u003Cspan class=\"hljs-string\"\u003E&quot;sepia&quot;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ftesting-console.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"creating-a-color-mode-switcher\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-color-mode-switcher\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECreating a color-mode switcher\u003C\u002Fh3\u003E\u003Cp\u003EObviously changing the mode in the dev tools is not what we want so let&#39;s create a color-mode switcher so our users can quickly change from one colour to another.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s create a component called \u003Ccode\u003EColorModePicker\u003C\u002Fcode\u003E and we can add a list of colors. For now we can just print out the color from our v-for.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;color of colors&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;color&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        {{color}}\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in our data property let&#39;s return an array of colors for each mode. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  data () {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Ecolors\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&#x27;system&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;light&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;dark&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;sepia&#x27;\u003C\u002Fspan\u003E]\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"importing-our-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#importing-our-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EImporting our component\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s import our component into our index.vue page so we can see what is happening.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorModePicker\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ColorModePicker \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fcomponents\u002FColorModePicker&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E:{\n    ColorModePicker\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in our browser under \u003Ccode\u003Ehttp:\u002F\u002Flocalhost:3000\u003C\u002Fcode\u003E you will see our list of colours.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Flist-of-colors.png\" alt=\"list of colours\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-click-event-to-change-our-colours\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-click-event-to-change-our-colours\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a click event to change our colours\u003C\u002Fh3\u003E\u003Cp\u003EThen in our template we can add a click event that will make the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E equal to the color which comes from our data.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can use our \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E helper that we get with the color-mode module. When the user clicks the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E will be set to the color coming from our data. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eli\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;color of colors&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;color&quot;\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$colorMode.preference = color&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThis is actually all you need in order for it to work. If you check in your browser you will see that by clicking on any of the colors the background is changing. It probably won&#39;t have a pointer cursor so if you think it doesn&#39;t work it probably does just you are used to seeing the cursor.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fcolor-changing-text-only.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EAnd if we check in the broswer we can see it works but this is super ugly. Let&#39;s tidy it up a bit.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-some-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-some-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding some icons\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s add some icons. you can copy the icons \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\u002Ftree\u002Fmaster\u002Fexample\u002Fassets\u002Ficons\"\u003Efrom here\u003C\u002Fa\u003E and place them in your assets folder in a new folder called icons.\u003C\u002Fp\u003E\n\u003Cp\u003EWe are going to use our icons as a component and in order to do that we will use the \u003Ca href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002F@nuxtjs\u002Fsvg\"\u003E@nuxtjs\u002Fsvg\u003C\u002Fa\u003E module which allows you to import .svg files in multiple ways depending on the resource query you provide.\u003C\u002Fp\u003E\n\u003Cp\u003EFirst you will need to install it\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Eyarn add --dev @nuxtjs\u002Fsvg\n\u003Cspan class=\"hljs-comment\"\u003E# OR npm install --save-dev @nuxtjs\u002Fsvg\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen we need to add it to your \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E in the buildModules section which should already have the \u003Ccode\u003E@nuxtjs\u002Fcolor-mode\u003C\u002Fcode\u003E module.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;@nuxtjs\u002Fsvg&#x27;\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;@nuxtjs\u002Fcolor-mode&#x27;\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"importing-the-svgs-as-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#importing-the-svgs-as-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EImporting the svgs as components\u003C\u002Fh3\u003E\u003Cp\u003EWe can now import these svg icons as components using the \u003Ccode\u003E?inline\u003C\u002Fcode\u003E query so that they are imported as inline svgs.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconSystem \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fassets\u002Ficons\u002Fsystem.svg?inline&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconLight \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fassets\u002Ficons\u002Flight.svg?inline&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconDark \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fassets\u002Ficons\u002Fdark.svg?inline&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E IconSepia \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fassets\u002Ficons\u002Fsepia.svg?inline&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    IconSystem,\n    IconLight,\n    IconDark,\n    IconSepia\n  },\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ... data property will be here\u003C\u002Fspan\u003E\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"adding-a-dynamic-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-dynamic-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a dynamic component\u003C\u002Fh3\u003E\u003Cp\u003ENow we can use a dynamic component which will check which icon to add depending on the colours in our data array. Lets replace the \u003Ccode\u003E{{color}}\u003C\u002Fcode\u003E text with this new component inside our \u003Ccode\u003E&lt;li&gt;\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;`icon-${color}`&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ELet&#39;s move our click event from our \u003Ccode\u003E&lt;li&gt;\u003C\u002Fcode\u003E to our icon component. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;`icon-${color}`&quot;\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$colorMode.preference = color&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"styling-our-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#styling-our-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EStyling our icons\u003C\u002Fh3\u003E\u003Cp\u003EAnd let&#39;s add some styles so we can see our icons. We will use scoped styling and use the class feather. If you look into your svg files you will see that our svgs have the class of feather so we can use this class to style it. We will also add a preferred and selected class so we know which one has been selected and what is the preferred one.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eposition\u003C\u002Fspan\u003E: relative;\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ecursor\u003C\u002Fspan\u003E: pointer;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E7px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Ebackground-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--bg-secondary);\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E2px\u003C\u002Fspan\u003E solid \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--border-color);\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder-radius\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Etransition\u003C\u002Fspan\u003E: all \u003Cspan class=\"hljs-number\"\u003E0.1s\u003C\u002Fspan\u003E ease;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-pseudo\"\u003E:hover\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: -\u003Cspan class=\"hljs-number\"\u003E3px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.preferred\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Eborder-color\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary);\n  \u003Cspan class=\"hljs-attribute\"\u003Etop\u003C\u002Fspan\u003E: -\u003Cspan class=\"hljs-number\"\u003E3px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-class\"\u003E.feather\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-selector-class\"\u003E.selected\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Ecolor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evar\u003C\u002Fspan\u003E(--color-primary);\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou won&#39;t see much difference right now except that the icons look a bit nicer but now we need to show a different class for our preferred icon which comes from our system preference and one for our selected icon which is for when we use the click event to change the color.\u003C\u002Fp\u003E\n\u003Ch3 id=\"creating-a-method-to-show-our-preferred-class\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-method-to-show-our-preferred-class\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECreating a method to show our preferred class\u003C\u002Fh3\u003E\u003Cp\u003ETo do this we can create a method that will return the class we want. We can call our method \u003Ccode\u003EgetClasses\u003C\u002Fcode\u003E and pass in the color as the parameter The two classes we want to return are preferred and selected. The preferred color should be equal to the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E and the selected color should be equal to the \u003Ccode\u003E$colorMode.value\u003C\u002Fcode\u003E. If the colorMode is unknown we can return an empty object. \u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Edata () {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Ecolors\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&#x27;system&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;light&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;dark&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E&#x27;sepia&#x27;\u003C\u002Fspan\u003E]\n  }\n},\n\u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n  getClasses (color) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Does not set classes on ssr when preference is system (because we don&#x27;t know the preference until client-side)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.unknown) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {}\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Epreferred\u003C\u002Fspan\u003E: color === \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.preference,\n      \u003Cspan class=\"hljs-attr\"\u003Eselected\u003C\u002Fspan\u003E: color === \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$colorMode.value\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe can now add this class to our icon component. The class will call the getClasses method passing in the color we receive when we use the click event.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomponent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:is\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;`icon-${color}`&quot;\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$colorMode.preference = color&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:class\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;getClasses(color)&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd you will see in the browser the colours are being applied just as we wanted. But it is not very clear when we click the system icon what is going on.\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-some-text-using-the-colorscheme-component\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-some-text-using-the-colorscheme-component\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding some text using the ColorScheme component\u003C\u002Fh3\u003E\u003Cp\u003ELet&#39;s add something that can help the user understand it.\u003C\u002Fp\u003E\n\u003Cp\u003EIf you are doing SSR (\u003Ccode\u003Enuxt start\u003C\u002Fcode\u003E or \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E) and if \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E is set to \u003Ccode\u003E&#39;system&#39;\u003C\u002Fcode\u003E, using \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E in your Vue template will lead to a flash. This is due to the fact that we cannot know the user preferences when pre-rendering the page since they are detected on client-side.\u003C\u002Fp\u003E\n\u003Cp\u003ETo avoid the flash, we have to guard any rendering path which depends on \u003Ccode\u003E$colorMode\u003C\u002Fcode\u003E with \u003Ccode\u003E$colorMode.unknown\u003C\u002Fcode\u003E to render a placeholder or use our \u003Ccode\u003E&lt;ColorScheme&gt;\u003C\u002Fcode\u003E component.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s create a ColorScheme component under our \u003Ccode\u003E&lt;ul&gt;\u003C\u002Fcode\u003E with a placeholder and a tag of \u003Ccode\u003Espan\u003C\u002Fcode\u003E. Inside it we can add some text and display the \u003Ccode\u003E$colorMode.preference\u003C\u002Fcode\u003E which we receive from the color-mode module.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;...&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;span&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  Color mode: \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.preference }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EYou will now see in the browser that if you change the icon the text will appear that corresponds to the icon clicked.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Fcolor-mode-text-icons.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"adding-a-text-when-system-is-chosen\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#adding-a-text-when-system-is-chosen\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAdding a text when system is chosen\u003C\u002Fh3\u003E\u003Cp\u003EWe can improve this further by seeing when the preference is the system and adding another message that shows which value was detected.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholder\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;...&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;span&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  Color mode: \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.preference }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eb\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$colorMode.preference === &#x27;system&#x27;&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ei\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $colorMode.value }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ei\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E mode detected)\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003EColorScheme\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIf you test it out in the browser you will see it&#39;s looking pretty good and we are almost there.\u003C\u002Fp\u003E\n\u003Ch3 id=\"tidying-up-our-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#tidying-up-our-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETidying up our styles\u003C\u002Fh3\u003E\u003Cp\u003EWe now just have to tidy up a few styles. Let&#39;s get rid of the dots from the \u003Ccode\u003E&lt;ul&gt;\u003C\u002Fcode\u003E and add some spacing and some style to our \u003Ccode\u003E&lt;p&gt;\u003C\u002Fcode\u003E tag.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Ecomponents\u002FColorModePicker.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs css\"\u003E\u003Cspan class=\"hljs-selector-tag\"\u003Eul\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Elist-style\u003C\u002Fspan\u003E: none;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Eul\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-selector-tag\"\u003Eli\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Edisplay\u003C\u002Fspan\u003E: inline-block;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n}\n\u003Cspan class=\"hljs-selector-tag\"\u003Ep\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Emargin\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-top\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5px\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding-bottom\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E20px\u003C\u002Fspan\u003E;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd in order to centre it we can wrap our ColorModePicker component in a div with the class of container.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;container&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003EColorModePicker\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd add the styles to the container class in our styles\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Epages\u002Findex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Escoped\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"css\"\u003E\n\u003Cspan class=\"hljs-selector-class\"\u003E.container\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attribute\"\u003Etext-align\u003C\u002Fspan\u003E: center;\n  \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E50px\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Estyle\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh3\u003E\u003Cp\u003EAnd there you have your beautiful and fully working color-mode component. Feel free to have some more fun by changing the icons or adding more colors or modifying the color scheme. Have fun.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fgoing-dark-with-nuxtjs-color-mode\u002Ffinal-working-version.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Ch3 id=\"what-to-do-next\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-to-do-next\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat to do next\u003C\u002Fh3\u003E\u003Cul\u003E\n\u003Cli\u003ETo learn more about using the color-mode with Tailwind check out \u003Ca href=\"https:\u002F\u002Fmedium.com\u002F@fayazara\u002Fquick-way-to-implement-darkmode-in-nuxt-js-tailwindcss-corona-virus-tracker-712d004a0846\"\u003Ethis article\u003C\u002Fa\u003E.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe to the newsletter\u003C\u002Fa\u003E to not miss the upcoming articles and resources.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:d,slug:e},next:{title:o,slug:p}}},{path:"zh\u002Fblog\u002Fseed-round.md",slug:p,readtime:{text:E,minutes:13.215,time:792900,words:2643},title:o,description:"Three years ago, my brother Sébastien and I were open sourcing our code to build Vue.js application server side rendered easily. Today, we are incredibly excited to announce that NuxtJS has raised $2M in seed funding.",imgUrl:"blog\u002Fseed-round\u002Fmain.png",date:"2020-05-01T00:00:00.000Z",authors:[{name:"Alexandre Chopin",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1255027239458091009\u002FqMp_q8vy_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002FIamNuxt"}],tags:[a,"Company"],body:"\u003Cp\u003EThree years ago, my brother Sébastien and I were \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\"\u003Eopen sourcing our code\u003C\u002Fa\u003E to build Vue.js applications with server side rendering. Today, we are incredibly excited to announce that NuxtJS has raised $2M in seed funding led by \u003Ca href=\"https:\u002F\u002Fwww.firstminute.capital\u002F\"\u003Efirstminute capital\u003C\u002Fa\u003E with participation from \u003Ca href=\"https:\u002F\u002Fwww.kimaventures.com\"\u003EKima Ventures\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Feduardoronzano\u002F\"\u003EEduardo Ronzano\u003C\u002Fa\u003E (founder &amp; CEO, KelDoc), \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fthibaud-elziere-a787913\u002F\"\u003EThibaud Elzière\u003C\u002Fa\u003E (founder &amp; CEO, Fotolia), \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fsteegmann\u002F\"\u003ENicolas Steegmann\u003C\u002Fa\u003E (founder of Stupeflix), and \u003Ca href=\"https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Frenaudvisage\u002F\"\u003ERenaud Visage\u003C\u002Fa\u003E (Co-founder &amp; CTO, Eventbrite). \u003C\u002Fp\u003E\n\u003Ch2 id=\"from-a-boilerplate-to-a-web-framework-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#from-a-boilerplate-to-a-web-framework-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFrom a boilerplate to a web framework.\u003C\u002Fh2\u003E\u003Ch3 id=\"happy-quot-nuxtday-quot-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#happy-quot-nuxtday-quot-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHappy &quot;NuxtDay&quot;\u003C\u002Fh3\u003E\u003Cp\u003ESébastien (\u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FAtinux\"\u003E@Atinux\u003C\u002Fa\u003E) made his first commit for Nuxt.js on Github on October 26th 2016. The code base was born after we refactored an e-commerce website with modern open source web technologies: Vue 2, Node.js and Webpack. At the time, there was no documentation for server-side rendering Vue.js applications - we learnt through the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvue-hackernews-2.0\"\u003EHacker News example\u003C\u002Fa\u003E published by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fyouyuxi\"\u003EEvan You\u003C\u002Fa\u003E (Creator of Vue.js). The idea of creating a boilerplate and reusing the code base for other projects became clear once we discovered \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Frauchg\"\u003EGuillermo Rauch\u003C\u002Fa\u003E’s \u003Ca href=\"https:\u002F\u002Fvercel.com\u002Fblog\u002Fnext\"\u003Eintroduction of Next.js\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"why-the-nuxt-name-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#why-the-nuxt-name-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhy the NUXT name?\u003C\u002Fh3\u003E\u003Cp\u003EOnce we had created the repository on Github to open source our code, we had our first challenge: find a name for our project! We tried couples of names on NPM who were already taken. In the end we landed on NUXT which was short and explicit. rEact ⇒ nExt made us realise that vUe ⇒ nUxt was a natural fit for us. It is like Next.js but for Vue.js.\u003C\u002Fp\u003E\n\u003Ch3 id=\"performance-modularity-and-developers-happiness\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#performance-modularity-and-developers-happiness\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPerformance, Modularity and Developers Happiness\u003C\u002Fh3\u003E\u003Cp\u003EThe core mission at NuxtJS is to provide front-end developers with an open source framework to build fast and high performing websites and applications based on Vue.js with as little friction as possible. Our credo is “Convention over Configuration” to help solve some of the difficulties involved in Vue.js application development. Automatic vue-router configuration based on file system detection is the first and most popular feature of the framework. With the efforts of our community and contributors around the world, over time our framework became ready for production. Every feature and bug fix since has been made with the sole purpose of improving the performance and experience for all our users. Our ultimate vision is to be a modular solution and extend the possibilities of the framework usage. These are endless! \u003C\u002Fp\u003E\n\u003Ch2 id=\"from-a-passion-to-a-company-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#from-a-passion-to-a-company-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFrom a passion to a company.\u003C\u002Fh2\u003E\u003Ch3 id=\"the-pyrenees-mountains\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-pyrenees-mountains\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe Pyrenees Mountains\u003C\u002Fh3\u003E\u003Cp\u003ESébastien and I discovered our passion for computers and web development deep within the Pyrenees Mountains (our heritage reflected in the NuxtJS logo if you haven’t noticed!). We taught ourselves how to code as kids and designed websites at night, weekends and during school holidays. We worked on our first external project together, creating a browser game website built with PHP, HTML, CSS and jQuery - this fortunately covered part of our college studies! We both had the entrepreneurial bug at this point. \u003C\u002Fp\u003E\n\u003Ch3 id=\"the-nuxtjs-company\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-nuxtjs-company\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe NuxtJS Company\u003C\u002Fh3\u003E\u003Cp\u003EBefore NuxtJS we were originally called ORION, which was established in 2017. At the time we wanted to create a number of different open source projects (ORION is a constellation of stars) and sell our services on the side whilst we had full-time jobs. However, we didn’t realise that what would ultimately become the Nuxt.js framework was going to take off so quickly and be so well-received by the developers community. After receiving amazing feedback at conferences, meet-ups and workshops we decided to go full-time on the Nuxt.js framework in January 2018. A year later we decided to rename our company NuxtJS to focus our efforts on the framework.\u003C\u002Fp\u003E\n\u003Ch3 id=\"open-source-is-everywhere\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#open-source-is-everywhere\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EOpen source is everywhere\u003C\u002Fh3\u003E\u003Cp\u003EAs developers ourselves, we believe in the importance and power of open source. Innovation in technology belongs to open source authors that have changed the path of companies - indeed many of our careers have depended on them - Languages, Operating Systems, Frameworks and many more. Like most other open source projects, we never had the expectation of making it a commercial product. However, after two years working full-time for NuxtJS, we were struggling to generate sustainable and scalable revenues whilst developing the framework at the same time. Our time was taken up by consulting and workshops to keep the lights on! This was difficult for us given the usage by large corporates such as Adobe, Ubisoft, Voodoo, Nespresso, Ozon, Rakuten and many others. We therefore believed the moment arrived to receive funding from partners with experience in open source projects and scaling teams and products. \u003C\u002Fp\u003E\n\u003Ch3 id=\"the-nuxtjs-company-the-nuxt-js-framework\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-nuxtjs-company-the-nuxt-js-framework\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe NuxtJS Company !== The Nuxt.js Framework\u003C\u002Fh3\u003E\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fdomangerer\"\u003EDominik Angerer\u003C\u002Fa\u003E (Co-founder &amp; CEO of \u003Ca href=\"https:\u002F\u002Fwww.storyblok.com\"\u003EStoryblok\u003C\u002Fa\u003E and our sponsor since July 2018) introduced us with Sam Endacott and Arek Wylegalski from firstminute capital in October 2019. They understood our concerns around developing the commercial side of the business whilst staying true to the community which has helped build Nuxt.js into what it is today. We took our time with the fundraising process and made sure to evaluate the pros and cons before making the decision. After spending many weeks with the team (+ a few dinners and drinks) we decided to close a $2m seed round for the NuxtJS company. \u003Cstrong\u003EThe Nuxt.js framework is and will always be open source and community-driven.\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"from-an-idea-to-a-website\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#from-an-idea-to-a-website\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFrom an idea to a website\u003C\u002Fh2\u003E\u003Ch3 id=\"the-intuitive-web-framework\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#the-intuitive-web-framework\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThe intuitive Web Framework\u003C\u002Fh3\u003E\u003Cp\u003EWe love to create websites with Vue, but we are too lazy to configure everything over and over. Nuxt.js provides a simple and intuitive developper experience to prototype blazing fast modern web application. The goal is to decrease the number of decisions the programmer has to make and eliminate the complexity of having to configure all and each of the areas of application development. The immediate result is that you can create many more things in less time. Building a production ready website from an idea has never been so simple. \nIf you follow the established conventions, you can develop a Nuxt.js application in much less time and with many fewer lines of code than you would need developing a similar web application in Vue.js. If, on the other hand, you want to ignore conventions, you can always replace them with your own code. However, since conventions are not arbitrary, but have been established by a community of high level programmers, it rarely does make sense to waste time overwriting them.\u003C\u002Fp\u003E\n\u003Ch3 id=\"modularity\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#modularity\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EModularity\u003C\u002Fh3\u003E\u003Cp\u003EBy keeping the core light and extensible with hooks, we opened a new range of possibilities: Nuxt Modules.\nYou can use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fanalytics-module\"\u003Eanalytics\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fauth.nuxtjs.org\"\u003Eauthentication\u003C\u002Fa\u003E, send \u003Ca href=\"https:\u002F\u002Fhttp.nuxtjs.org\u002F\"\u003EHTTP requests\u003C\u002Fa\u003E, use your favourite \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Ftailwindcss-module\"\u003EUI framework\u003C\u002Fa\u003E, support \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fcolor-mode-module\"\u003Edark mode\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Faceforth\u002Fnuxt-optimized-images\"\u003Eoptimizes your images\u003C\u002Fa\u003E, make a \u003Ca href=\"https:\u002F\u002Fpwa.nuxtjs.org\"\u003EPWA\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fawesomejs.dev\u002Ffor\u002Fnuxt\u002F\"\u003Emuch more\u003C\u002Fa\u003E with only one line in your config file.\u003C\u002Fp\u003E\n\u003Ch3 id=\"performances\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#performances\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPerformances\u003C\u002Fh3\u003E\u003Cp\u003EPerformances has a huge impact on how visitors see and interact with your website. Since the beginning, performances has been in the heart of the Nuxt.js framework, allowing you to ship efficient and performant web application \u003Cstrong\u003Eby default\u003C\u002Fstrong\u003E. We provide more than \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fissues\u002F6467\"\u003E20 optimizations\u003C\u002Fa\u003E and have more in our roadmap: reducing the baseline bundle costs of the minimal app (coming with Nuxt 3 and Vue 3), image bloat reduction (lazy-loading and automatic optimisation) and smarter server-side rendering using SWR (stale-while-revalidate).\u003C\u002Fp\u003E\n\u003Ch2 id=\"nuxtify-the-world\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#nuxtify-the-world\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENuxtify the world\u003C\u002Fh2\u003E\u003Ch3 id=\"discovery\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#discovery\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDiscovery\u003C\u002Fh3\u003E\u003Cp\u003EConcepts and new features can sometimes be more difficult to explain, instead of using them. Feedback subjects since the last 3 years has been mostly about our lack of explanation and marketing. That&#39;s true. It&#39;s difficult to explain a framework that can do static site generation (SSG) or dynamic rendering (SSR) as well as optional server-side rendering with convention over configuration in \u003Cstrong\u003Ea simple sentence\u003C\u002Fstrong\u003E. Good news, we are working on a brand new website full of Nuxt.js informations and features explanations. \u003C\u002Fp\u003E\n\u003Ch3 id=\"academy\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#academy\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAcademy\u003C\u002Fh3\u003E\u003Cp\u003EThe Nuxt.js documentation is key. Our main efforts are toward on new learning resources, including a richer documentation and educational materials (tutorials, videos courses and sandboxes). Additionally, we are developing official workshops and certification programs for developers with partners teachers\u002Fcompanies around the world.\u003C\u002Fp\u003E\n\u003Ch3 id=\"community\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#community\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECommunity\u003C\u002Fh3\u003E\u003Cp\u003ECommunity based materials and events (meetups, conferences and live streams) will be displayed on the new website. We plan to organise online events in the future.\nYou can always chat with the community on our \u003Ca href=\"https:\u002F\u002Fdiscord.nuxtjs.org\"\u003EDiscord server\u003C\u002Fa\u003E, follow the Nuxt.js feed on our \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnuxt_js\"\u003ETwitter account\u003C\u002Fa\u003E and contribute on our \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\"\u003EGitHub repository\u003C\u002Fa\u003E.\nOur \u003Ca href=\"https:\u002F\u002Fopencollective.com\u002Fnuxtjs\"\u003EOpen Collective\u003C\u002Fa\u003E is used for the open source work done by maintainers, contributors and developer advocates that help Nuxtify the world.\u003C\u002Fp\u003E\n\u003Ch2 id=\"thank-you-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#thank-you-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EThank you!\u003C\u002Fh2\u003E\u003Cp\u003EWe deeply want to thanks all the contributors to the (\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fgraphs\u002Fcontributors\"\u003Ecore\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fdocs\u002Fgraphs\u002Fcontributors\"\u003Edocumentation\u003C\u002Fa\u003E, \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\"\u003Emodules\u003C\u002Fa\u003E and \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Ftopics\u002Fnuxt\"\u003Emore\u003C\u002Fa\u003E) that improve Nuxt.js everyday.\nAlso our users and \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnuxt_js\"\u003Efollowers\u003C\u002Fa\u003E, helping us gather more feedback and improve the vision of the framework.\u003C\u002Fp\u003E\n\u003Cp\u003EWe have been working a lot recently and exciting announcements are coming soon!\u003C\u002Fp\u003E\n",links:{previous:{title:m,slug:n},next:{title:q,slug:r}}},{path:"zh\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch.md",slug:r,readtime:{text:"22 min read",minutes:21.1,time:1266000,words:4220},title:q,description:"Let’s build a blazing fast articles and tutorials app using Nuxt, Dev.to API, with lazy loading, placeholders, caching and trendy neumorphic design UI.",imgUrl:"blog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\u002Fmain.png",date:"2020-04-08T00:00:00.000Z",authors:[{name:"Sergey Bedritsky",avatarUrl:"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1244291720566669315\u002FpGg6Xn-M_400x400.jpg",link:"https:\u002F\u002Ftwitter.com\u002Fsergeybedritsky"},{name:w,avatarUrl:c,link:y}],tags:[a,A,B,C],body:"\u003Cp\u003E\u003Cem\u003ELet’s build a blazing fast articles and tutorials app using Nuxt, Dev.to API, with lazy loading, placeholders, caching and trendy neumorphic design UI.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cvideo src=\"\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\u002Fdev-clone-nuxt.mp4\" autoplay loop playsinline controls\u003E\u003C\u002Fvideo\u003E\u003C\u002Fp\u003E\n\u003Cp align=\"center\"\u003E\n  \u003Ca href=\"https:\u002F\u002Fdev-clone.nuxtjs.app\" target=\"_blank\" rel=\"noopener nofollow\"\u003EView demo\u003C\u002Fa\u003E \u002F \n  \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbdrtsky\u002Fnuxt-dev-to-clone\" target=\"_blank\" rel=\"noopener nofollow\"\u003ESource\u003C\u002Fa\u003E\n\u003C\u002Fp\u003E\n\n\u003Cp\u003EThis article is intended to demonstrate use cases and awesomeness of new NuxtJS \u003Ccode\u003Efetch\u003C\u002Fcode\u003E functionality  \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fpages-fetch#nuxt-gt-2-12\"\u003Eintroduced in release v2.12\u003C\u002Fa\u003E, and show you how to apply its power in your own projects. For in-depth technical analysis and details of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E you can check \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003EKrutie Patel’s article\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EHere’s the high-level outline of how we will build our dev.to clone using \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. We will:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Euse \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E for showing nice placeholders while data is fetching on the client side\u003C\u002Fli\u003E\n\u003Cli\u003Euse \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook to efficiently cache API requests on pages that have already been visited\u003C\u002Fli\u003E\n\u003Cli\u003Ereuse the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003Eset \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E value to control when we need to render our data on the server side or not\u003C\u002Fli\u003E\n\u003Cli\u003Efind a way to handle errors from \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"table-of-contents\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#table-of-contents\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ETable of Contents\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#dev-to-api\"\u003EDEV.TO API\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#setting-up-the-project\"\u003ESetting up the Project\u003C\u002Fa\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#css-styles\"\u003ECSS Styles\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#ui-design\"\u003EUI Design\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#svg-icons\"\u003ESVG icons\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#dependencies\"\u003EDependencies\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#developing-the-application\"\u003EDeveloping the Application\u003C\u002Fa\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ca href=\"#url-structure\"\u003EURL structure\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003ECaching requests with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-code-fetch-code-in-page-components\"\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in page components\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#reuse-code-fetch-code-with-code-this-fetch-code-\"\u003EReuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#applying-placeholders-with-code-fetchstate-code-\"\u003EApplying placeholders with \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#using-code-fetch-code-in-any-other-component-\"\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in any other component  🔥\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#error-handling\"\u003EError handling\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#conclusion\"\u003EConclusion\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2 id=\"dev-to-api\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#dev-to-api\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDEV.TO API\u003C\u002Fh2\u003E\u003Cp\u003EIn September 2019 DEV.TO  \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fbendhalpern\u002Fstatus\u002F1176663688742395904\"\u003Eopened\u003C\u002Fa\u003E  their public API that we can now use to access articles, users and other resources data. \u003Cem\u003EPlease note that it’s still Beta, so it could change in future or some things might not work as expected.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFor creating our DEV.TO clone we are interested in such API endpoints:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetArticles\"\u003EgetArticles\u003C\u002Fa\u003E: to access a list of articles, filtered by the \u003Ccode\u003Etag\u003C\u002Fcode\u003E, \u003Ccode\u003Estate\u003C\u002Fcode\u003E, \u003Ccode\u003Etop\u003C\u002Fcode\u003E, \u003Ccode\u003Eusername\u003C\u002Fcode\u003E and paginated with \u003Ccode\u003Epage\u003C\u002Fcode\u003E parameters\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetArticleById\"\u003EgetArticleById\u003C\u002Fa\u003E: to access an article content\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetUser\"\u003EgetUser\u003C\u002Fa\u003E: to access user data \u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fdocs.dev.to\u002Fapi\u002F#operation\u002FgetCommentsByArticleId\"\u003EgetCommentsByArticleId\u003C\u002Fa\u003E: to fetch comments related to the article\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ETo keep it simple, for communication with DEV.TO API we will use native Javascript  \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FFetch_API\"\u003EFetch API\u003C\u002Fa\u003E .\u003C\u002Fp\u003E\n\u003Ch2 id=\"setting-up-the-project\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#setting-up-the-project\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ESetting up the Project\u003C\u002Fh2\u003E\u003Cp\u003EIf you are an experienced developer you can skip this part and \u003Ca href=\"#developing-the-application\"\u003Eget straight to the point\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EMake sure you have Node and npm installed. We will use \u003Ccode\u003Ecreate-nuxt-app\u003C\u002Fcode\u003E to  \u003Ca href=\"\u002Fguide\u002Finstallation#using-code-create-nuxt-app-code-\"\u003Einitialize\u003C\u002Fa\u003E  the project, so just type the following command in terminal:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpx create-nuxt-app nuxt-dev-to-clone\n# leave the default answers for each question\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow \u003Ccode\u003Ecd nuxt-dev-to-clone\u002F\u003C\u002Fcode\u003E and run \u003Ccode\u003Enpm run dev\u003C\u002Fcode\u003E. Congrats, your Nuxt app is running on \u003Ca href=\"http:\u002F\u002Flocalhost:3000\u002F\"\u003Ehttp:\u002F\u002Flocalhost:3000\u003C\u002Fa\u003E!\u003C\u002Fp\u003E\n\u003Cp\u003ELet’s install necessary packages and discuss how we will build our app next.\u003C\u002Fp\u003E\n\u003Ch3 id=\"css-styles\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#css-styles\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECSS Styles\u003C\u002Fh3\u003E\u003Cp\u003EFor styling we will use the most common CSS preprocessor Sass\u002FSCSS and leverage Vue.js \u003Ca href=\"https:\u002F\u002Fvue-loader.vuejs.org\u002Fguide\u002Fscoped-css.html\"\u003EScoped CSS\u003C\u002Fa\u003E feature, to keep our components styles incapsulated. To \u003Ca href=\"\u002Ffaq\u002Fpre-processors\"\u003Euse Sass\u002FSCSS with Nuxt\u003C\u002Fa\u003E run:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D sass sass-loader\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe also will use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fstyle-resources-module\"\u003E@nuxtjs\u002Fstyle-resources\u003C\u002Fa\u003E module that will help us to use our design tokens defined in SCSS variables in any Vue file without the necessity of using \u003Ccode\u003E@import\u003C\u002Fcode\u003E statements in each file.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D @nuxtjs\u002Fstyle-resources\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow tell Nuxt to use it by adding this code to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;@nuxtjs\u002Fstyle-resources&#x27;\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ERead more about this module \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fstyle-resources-module#scss-example\"\u003Ehere\u003C\u002Fa\u003E, regarding \u003Ccode\u003EbuildModules\u003C\u002Fcode\u003E, you can learn more on it in the \u003Ca href=\"\u002Fapi\u002Fconfiguration-modules#-code-buildmodules-code-\"\u003Emodules vs buildModules\u003C\u002Fa\u003E section of the documentation.\u003C\u002Fp\u003E\n\u003Cp\u003ELet’s define our design tokens as SCSS variables, put them in \u003Ccode\u003E~\u002Fassets\u002Fstyles\u002Ftokens.scss\u003C\u002Fcode\u003E and tell \u003Ccode\u003E@nuxtjs\u002Fstyle-resources\u003C\u002Fcode\u003E to load them by adding to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EstyleResources: {\n  \u003Cspan class=\"hljs-attr\"\u003Escss\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fassets\u002Fstyles\u002Ftokens.scss&#x27;\u003C\u002Fspan\u003E]\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EOur design tokens are now available through SCSS variables in every Vue component.\u003C\u002Fp\u003E\n\u003Ch3 id=\"ui-design\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#ui-design\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUI Design\u003C\u002Fh3\u003E\u003Cp\u003EIt will be kinda boring just to copy existing DEV.TO design and layout, so why don’t we experiment a little bit. You have probably already heard of the new UI trend — neumorphism. If you missed it somehow, read more about it \u003Ca href=\"https:\u002F\u002Fuxdesign.cc\u002Fneumorphism-in-user-interfaces-b47cef3bf3a6\"\u003Ehere\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EWe can find a lot of \u003Ca href=\"https:\u002F\u002Fdribbble.com\u002Ftags\u002Fneumorphism\"\u003Edribbble shots\u003C\u002Fa\u003E (from where this trend came from), but still only a few examples of real-world web apps built with neumorphism style interface, so we just can’t miss the chance to recreate it with CSS and Vue.js. It’s simple, clean and fresh.\u003C\u002Fp\u003E\n\u003Cp\u003EI am not going to describe the styling aspect of this application in detail, but if you are interested, you can check this awesome article from  \u003Ca href=\"https:\u002F\u002Fcss-tricks.com\u002Fneumorphism-and-css\u002F\"\u003ECSS Tricks\u003C\u002Fa\u003E about neumorphism and CSS.\u003C\u002Fp\u003E\n\u003Ch3 id=\"svg-icons\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#svg-icons\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ESVG icons\u003C\u002Fh3\u003E\u003Cp\u003EFor SVG icons lets use \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fsvg-module\"\u003E@nuxt\u002Fsvg\u003C\u002Fa\u003E. This module allows us to import \u003Ccode\u003E.svg\u003C\u002Fcode\u003E files as inline SVG, while keeping SVG sources in single place and not polluting Vue template markup with loads of SVG code.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003Enpm i -D @nuxtjs\u002Fsvg\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EbuildModules: [\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;@nuxtjs\u002Fsvg&#x27;\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;@nuxtjs\u002Fstyle-resources&#x27;\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"dependencies\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#dependencies\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDependencies\u003C\u002Fh3\u003E\u003Cp\u003ETo keep front-end app fast and simple we will use only two dependencies, both from Vue.js core members:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002FAkryum\u002Fvue-observe-visibility\"\u003Evue-observe-visibility\u003C\u002Fa\u003E by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002FAkryum\"\u003EGuillaume Chau\u003C\u002Fa\u003E, for effective detecting elements in viewport with IntersectionObserver and trigger lazy loading. Only 1.6kB gzipped\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmichalsnik\u002Fvue-content-placeholders\"\u003Evue-content-placeholders\u003C\u002Fa\u003E by \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fmichalsnik\"\u003EMichał Sajnóg\u003C\u002Fa\u003E, for showing nicely animated placeholders for UI elements while content is fetching. Only 650B gzipped.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003ELet’s add them as Nuxt \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fapi\u002Fconfiguration-plugins#__layout\"\u003Eplugins\u003C\u002Fa\u003E, by creating two files.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Evue-observe-visibility.client.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vue&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E VueObserveVisibility \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vue-observe-visibility&#x27;\u003C\u002Fspan\u003E\n\nVue.use(VueObserveVisibility)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Ccode\u003Evue-placeholders.js\u003C\u002Fcode\u003E:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vue&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E VueContentPlaceholders \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vue-content-placeholders&#x27;\u003C\u002Fspan\u003E\n\nVue.use(VueContentPlaceholders)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd add them to \u003Ccode\u003Enuxt.config.js\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eplugins: [\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fplugins\u002Fvue-placeholders.js&#x27;\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-string\"\u003E&#x27;~\u002Fplugins\u002Fvue-observe-visibility.client.js&#x27;\u003C\u002Fspan\u003E\n]\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"developing-the-application\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#developing-the-application\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDeveloping the Application\u003C\u002Fh2\u003E\u003Cp\u003ENow we finally can start developing our DEV.TO clone powered by Nuxt and \u003Ca href=\"\u002Fapi\u002Fpages-fetch\"\u003Enew fetch\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"url-structure\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#url-structure\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EURL structure\u003C\u002Fh3\u003E\u003Cp\u003ELet’s imitate DEV.TO URL structure for our simple app. Our \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Fviews#pages\"\u003Epages\u003C\u002Fa\u003E folder should look like this:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003E├── index.vue\n├── t\n│   └── _tag.vue\n├── top.vue\n└── _username\n    ├── _article.vue\n    └── index.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe will have 2 \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#basic-routes\"\u003Estatic pages\u003C\u002Fa\u003E:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E: latest articles about Nuxt.js will be listed\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E: most popular articles for last year period.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EFor the rest of the app URL’s we will use convenient Nuxt file based \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\u002Fguide\u002Frouting#dynamic-routes\"\u003Edynamic routes\u003C\u002Fa\u003E feature to scaffold necessary pages by creating such file structure:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E_username\u002Findex.vue\u003C\u002Fcode\u003E - user profile page with list of his published articles\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E_username\u002F_article.vue\u003C\u002Fcode\u003E - this is where article, author profile and comments will be rendered\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E - list of best articles by any tag that exist on DEV.TO\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EThat’s all. Pretty simple, right?\u003C\u002Fp\u003E\n\u003Ch3 id=\"caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#caching-requests-with-code-keep-alive-code-and-code-activated-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECaching requests with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003EOne of the coolest practical features of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is its ability to work with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E directive to save \u003Ccode\u003Efetch\u003C\u002Fcode\u003E calls on pages you have already visited. Let’s apply this feature in \u003Ccode\u003Elayouts\u002Fdefault.vue\u003C\u002Fcode\u003E layout like this.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ekeep-alive\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWith this directive \u003Ccode\u003Efetch\u003C\u002Fcode\u003E will trigger only on the first page visit, after that Nuxt will save rendered components in memory, and on every subsequent visit it will be just reused from the cache. Could it be simpler than that?\u003C\u002Fp\u003E\n\u003Cp\u003EMoreover, Nuxt gives us fine grained control over \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E with the \u003Ccode\u003Ekeep-alive-props\u003C\u002Fcode\u003E property where you can set the number of components which you want to cache, and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook, where you can control TTL (time to live) of the cache. We will use the latest one in our app in the next sections.\u003C\u002Fp\u003E\n\u003Ch3 id=\"using-code-fetch-code-in-page-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-code-fetch-code-in-page-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in page components\u003C\u002Fh3\u003E\u003Cp\u003ELet’s dive into the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature itself. \u003C\u002Fp\u003E\n\u003Cp\u003ECurrently as you can see from the \u003Ca href=\"https:\u002F\u002Fdev-clone.nuxtjs.app\u002F\"\u003Efinal result\u003C\u002Fa\u003E we have 3 page components that basically reuse the same code — it’s the \u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E, \u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E and \u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E page components. They simply render a list of article preview cards.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;page-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-cards-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;(article, i) in articles&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.id&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-card-block&quot;\u003C\u002Fspan\u003E\n        \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ArticleCardBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fcomponents\u002Fblocks\u002FArticleCardBlock&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    ArticleCardBlock\n  },\n  data() {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003EcurrentPage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Earticles\u003C\u002Fspan\u003E: []\n    }\n  },\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles?tag=nuxt&amp;state=rising&amp;page=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.currentPage}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n    \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.articles = \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.articles.concat(articles)\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EPay attention to this code block:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E articles = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles?tag=nuxt&amp;state=rising&amp;page=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.currentPage}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.articles = \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.articles.concat(articles)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EHere we are making a request to DEV.TO \u003Ccode\u003E\u002Farticles\u003C\u002Fcode\u003E endpoint, with query parameters that API understands. Don’t confuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook with the Javascript \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FFetch_API\"\u003Efetch\u003C\u002Fa\u003E interface which simply helps us to send a request to DEV.TO API, and then parse the response with \u003Ccode\u003Eres.json()\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EAlso notice that the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook doesn’t serve just to dispatch Vuex store action or committing mutation to set state, now it has access to \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context, and is able to mutate component’s data directly. This is a very important new feature, and you can \u003Ca href=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003Eread more\u003C\u002Fa\u003E about it in the previous article about \u003Ccode\u003Efetch\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003ENow let’s markup the \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E component which receives \u003Ccode\u003Earticle\u003C\u002Fcode\u003E prop and renders its data nicely.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EArticleCardBlock.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ name: &#x27;username-article&#x27;, params: { username: article.user.username, article: article.id } }&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Etag\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E &gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;image-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.cover_image&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.cover_image&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.title&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eimg\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:src\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.social_image&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:alt\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.title&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;content&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{name: &#x27;username-article&#x27;, params: { username: article.user.username, article: article.id } }&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.title }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;tags&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;tag in article.tag_list&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;tag&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:to\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ name: &#x27;t-tag&#x27;, params: { tag } }&quot;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;tag&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          #{{ tag }}\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;meta&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;scl&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eheart-icon\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n            {{ article.positive_reactions_count }}\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomments-icon\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n            {{ article.comments_count }}\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Espan\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etime\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ article.readable_publish_date }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etime\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Enuxt-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E HeartIcon \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fassets\u002Ficons\u002Fheart.svg?inline&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E CommentsIcon \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fassets\u002Ficons\u002Fcomments.svg?inline&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    HeartIcon,\n    CommentsIcon\n  },\n  \u003Cspan class=\"hljs-attr\"\u003Eprops\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Earticle\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-attr\"\u003Etype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Edefault\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"reuse-code-fetch-code-with-code-this-fetch-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#reuse-code-fetch-code-with-code-this-fetch-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EReuse \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with \u003Ccode\u003Ethis.$fetch()\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIt already should display a list of articles fetched from DEV.TO but it feels like we are not making a full use of this API. Let’s add lazy loading to articles list, and use the pagination parameter provided by this API. So when we scroll to the bottom of the page a new chunk of articles will be fetched and rendered.\u003C\u002Fp\u003E\n\u003Cp\u003ETo efficiently detect when to fetch the next page it’s better to use \u003Ca href=\"https:\u002F\u002Fdeveloper.mozilla.org\u002Fen-US\u002Fdocs\u002FWeb\u002FAPI\u002FIntersection_Observer_API\"\u003EIntersection Observer API\u003C\u002Fa\u003E. For that we will use a previously installed Vue plugin called \u003Ccode\u003Evue-observe-visibility\u003C\u002Fcode\u003E which is basically a wrapper around this API and it will detect when an element is becoming visible or hidden on the page. This plugin provides us a possibility to use \u003Ccode\u003Ev-observe-visibility\u003C\u002Fcode\u003E directive on any element, so let’s add it to last \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E component:\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;(article, i) in articles&quot;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.id&quot;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ev-observe-visibility\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;\n    i === articles.length - 1 ? lazyLoadArticles : false\n  &quot;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-card-block&quot;\u003C\u002Fspan\u003E\n\u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAs you can guess from the code above, when the last \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E appears in viewport \u003Ccode\u003ElazyLoadArticles\u003C\u002Fcode\u003E will be fired. Let’s look at it:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003ElazyLoadArticles(isVisible) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (isVisible) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.currentPage &lt; \u003Cspan class=\"hljs-number\"\u003E5\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.currentPage++\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$fetch()\n    }\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd here we see the power of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. We can just reuse \u003Ccode\u003E$fetch\u003C\u002Fcode\u003E as a method and fetch the next page when lazy loading is triggered.\u003C\u002Fp\u003E\n\u003Ch3 id=\"applying-placeholders-with-code-fetchstate-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#applying-placeholders-with-code-fetchstate-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EApplying placeholders with \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003EIf you already applied code from the previous section and tried client-side navigation between \u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E, \u003Ccode\u003Etop.vue\u003C\u002Fcode\u003E and \u003Ccode\u003Et\u002F_tag.vue\u003C\u002Fcode\u003E page components you probably noticed that it shows an empty page for the moment, while it’s waiting for the API request to complete. This is intended behavior, and it’s different from the old \u003Ccode\u003Efetch\u003C\u002Fcode\u003E and \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E hooks that triggered before page navigation.\u003C\u002Fp\u003E\n\u003Cp\u003EThanks to \u003Ccode\u003E$fetchState.pending\u003C\u002Fcode\u003E wisely provided by the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook we can use this flag to display a placeholder when fetch is being called on client-side. \u003Ccode\u003Evue-content-placeholders\u003C\u002Fcode\u003E plugin will be used as a placeholder.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eindex.vue\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;page-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$fetchState.pending&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-cards-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;p in 30&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;p&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Erounded\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-card-block&quot;\u003C\u002Fspan\u003E\n        &gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders-img\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders-text\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:lines\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;3&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Econtent-placeholders\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$fetchState.error&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $fetchState.error.message }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-cards-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-card-block\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-for\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;(article, i) in articles&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:key\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article.id&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ev-observe-visibility\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;\n            i === articles.length - 1 ? lazyLoadArticles : false\n          &quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003E:article\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article&quot;\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-card-block&quot;\u003C\u002Fspan\u003E\n        \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe imitate how \u003Ccode\u003E&lt;article-card-block&gt;\u003C\u002Fcode\u003E looks with \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fmichalsnik\u002Fvue-content-placeholders#available-components-and-properties\"\u003Evue-content-placeholders components\u003C\u002Fa\u003E, and as you could see in source code it will be used in almost every component that uses the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, so let’s not pay attention on those parts of code anymore (they are basically the same in each component).\u003C\u002Fp\u003E\n\u003Ch3 id=\"using-code-fetch-code-in-any-other-component-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#using-code-fetch-code-in-any-other-component-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EUsing \u003Ccode\u003Efetch\u003C\u002Fcode\u003E in any other component  🔥\u003C\u002Fh3\u003E\u003Cp\u003EThis is probably the most interesting feature of the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. \u003Cstrong\u003EWe can now use the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook in any Vue component without worrying about breaking SSR!\u003C\u002Fstrong\u003E This means far less headache about how to structure your async API calls and components.\u003C\u002Fp\u003E\n\u003Cp\u003ETo explore this great functionality let’s move to \u003Ccode\u003E_username\u002F_article.vue\u003C\u002Fcode\u003E page component.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;page-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-content-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Earticle-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;article-block&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;aside-username-wrapper&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Easide-username-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;aside-username-block&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ecomments-block\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;comments-block&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E ArticleBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fcomponents\u002Fblocks\u002FArticleBlock&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E CommentsBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fcomponents\u002Fblocks\u002FCommentsBlock&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E AsideUsernameBlock \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;@\u002Fcomponents\u002Fblocks\u002FAsideUsernameBlock&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: {\n    ArticleBlock,\n    CommentsBlock,\n    AsideUsernameBlock\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EHere we see no data fetching at all, only a template layout consisting of 3 components: \u003Ccode\u003E&lt;article-block\u002F&gt;\u003C\u002Fcode\u003E, \u003Ccode\u003E&lt;aside-username-block\u002F&gt;\u003C\u002Fcode\u003E, \u003Ccode\u003E&lt;comments-block\u002F&gt;\u003C\u002Fcode\u003E. And each of those components has its own \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. With old \u003Ccode\u003Efetch\u003C\u002Fcode\u003E or current \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E earlier we would have to make all three requests to three different DEV.TO endpoints and then pass them to each component as a prop. But now those components are completely encapsulated.\u003C\u002Fp\u003E\n\u003Cp\u003EIn \u003Ccode\u003E&lt;article-block\u002F&gt;\u003C\u002Fcode\u003E we use \u003Ccode\u003Efetch\u003C\u002Fcode\u003E just like we’d use it in a page component. \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (article.id &amp;&amp; article.user.username === \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.username) {\n    \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.article = article\n    \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$store.commit(\u003Cspan class=\"hljs-string\"\u003E&#x27;SET_CURRENT_ARTICLE&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.article)\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F throwing an error will set $fetchState.error\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;Article not found&#x27;\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENow, remember in the section about caching I mentioned that there’s an \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook that can be used for managing TTL of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E? This is example of such usage:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Eactivated() {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$fetchState.timestamp &lt;= \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E.now() - \u003Cspan class=\"hljs-number\"\u003E60000\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$fetch()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWith this code in place we will call fetch again if last fetch was more than 60 sec ago. All other requests within this period will be cached.\u003C\u002Fp\u003E\n\u003Cp\u003EThere’s also interesting usage of another \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature called \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E in the \u003Ccode\u003E&lt;comments-block&gt;\u003C\u002Fcode\u003E component. We don’t really want to render this content on the server side, because comments are user generated and could be irrelevant or spammy. We don’t need any SEO for this content block. Now, with the help of mentioned \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E we have such control:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.comments = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Fcomments?a_id=\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n},\n\u003Cspan class=\"hljs-attr\"\u003EfetchOnServer\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"error-handling\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#error-handling\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EError handling\u003C\u002Fh3\u003E\u003Cp\u003ELast thing that should be mentioned is error handling. You probably already saw that we used error handling above, but let’s pay more attention to this important topic.\u003C\u002Fp\u003E\n\u003Cp\u003EAs you know, \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is handled at the \u003Cstrong\u003Ecomponent level\u003C\u002Fstrong\u003E, when doing server-side rendering, the parent (virtual) dom tree is already rendered when rendering the component, so we cannot change it by calling \u003Ccode\u003E$nuxt.error(...)\u003C\u002Fcode\u003E, instead we have to \u003Cstrong\u003Ehandle the error at the component level\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E$fetchState.error\u003C\u002Fcode\u003E is set if an error is thrown in the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, so we can use it in our template to display an error message:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eclass\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E“page-wrapper”\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$fetchState.pending&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003E!—\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eplaceholders\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Egoes\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ehere\u003C\u002Fspan\u003E —&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E“$fetchState.error\u003C\u002Fspan\u003E&quot;&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E{{ $fetchState.error.message }}\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003E!—\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Efetched\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Econtent\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Egoes\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ehere\u003C\u002Fspan\u003E —&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EThen, in our \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook, we will throw the error if we don&#39;t find the article corresponding for the defined author:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E article = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\n    \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fdev.to\u002Fapi\u002Farticles\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.article}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E\n  ).then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (article.id &amp;&amp; article.user.username === \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.username) {\n    \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.article = article\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n    }\n    \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;Article not found&#x27;\u003C\u002Fspan\u003E)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ENote here that we wrap \u003Ccode\u003Ethis.$nuxt.context.res.statusCode = 404\u003C\u002Fcode\u003E around \u003Ccode\u003Eprocess.server\u003C\u002Fcode\u003E, this is used to set the HTTP status code on the server-side for correct SEO.\u003C\u002Fp\u003E\n\u003Ch2 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh2\u003E\u003Cp\u003EIn this article we explored Nuxt.js new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E and built an app with basic DEV.TO content features and structure using only this \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook. I hope you got some inspiration to build your own version of DEV.TO. Don’t forget to check out the \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbdrtsky\u002Fnuxt-dev-to-clone\"\u003Esource code\u003C\u002Fa\u003E for a more complete example and functionality.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EWhat to do next:\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ERead \u003Ca href=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\"\u003EKrutie Patel article\u003C\u002Fa\u003E with in-depth analysis of how new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook works\u003C\u002Fli\u003E\n\u003Cli\u003ECheck \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fhackernews\"\u003Enuxt-hackernews\u003C\u002Fa\u003E for similar usage of \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FHackerNews\u002FAPI\"\u003EHacker News API\u003C\u002Fa\u003E \u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe\u003C\u002Fa\u003E to the newsletter to not miss the upcoming articles and resources, I plan to write an article about How to create your personal blog with Nuxt and Dev.to as CMS.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:o,slug:p},next:{title:s,slug:t}}},{path:"zh\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12.md",slug:t,readtime:{text:"17 min read",minutes:16.06,time:963599.9999999999,words:3212},title:s,description:"Explore different features of the fetch hook and learn a brand new way to bring data into Nuxt applications.",imgUrl:"blog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\u002Fmain.png",date:"2020-04-06T00:00:00.000Z",authors:[{name:G,avatarUrl:x,link:z}],tags:[a,A,B,C],body:"\u003Cp\u003ENuxt introduces a new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E with the latest release of version 2.12. Fetch provides a brand new way to bring data into Nuxt applications.\u003C\u002Fp\u003E\n\u003Cp\u003EIn this post, we will explore different features of the fetch hook and try to understand how it works.\u003C\u002Fp\u003E\n\u003Ch2 id=\"fetch-hook-and-nuxt-lifecycle\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#fetch-hook-and-nuxt-lifecycle\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFetch Hook and Nuxt Lifecycle\u003C\u002Fh2\u003E\u003Cp\u003EIn terms of Nuxt lifecycle hooks, \u003Ccode\u003Efetch\u003C\u002Fcode\u003E sits within Vue lifecycle after \u003Ccode\u003Ecreated\u003C\u002Fcode\u003E hook. As we already know that, all Vue lifecycle hooks are called with their \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context. The same applies to \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook as well.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fblog\u002Funderstanding-how-fetch-works-in-nuxt-2-12\u002Fnew-fetch-lifecycle-hooks.png\" alt=\"New fetch in Nuxt lifecycle\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EFetch hook is called after the component instance is created on the server-side. That makes \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context available inside the \u003Ccode\u003Efetch\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  fetch() {\n    \u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E);\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ELet’s see what this could mean for page components.\u003C\u002Fp\u003E\n\u003Ch3 id=\"page-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#page-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EPage Components\u003C\u002Fh3\u003E\u003Cp\u003EWith the help of \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context, fetch is able to mutate component’s data directly. It means we can set the component’s local data without having to dispatch Vuex store action or committing mutation from the page component.\u003C\u002Fp\u003E\n\u003Cp\u003EAs a result, Vuex becomes optional, but not impossible. We can still use \u003Ccode\u003Ethis.$store\u003C\u002Fcode\u003E as usual to access Vuex store if required.\u003C\u002Fp\u003E\n\u003Ch2 id=\"availability-of-fetch-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#availability-of-fetch-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAvailability of fetch hook\u003C\u002Fh2\u003E\u003Cp\u003EWith \u003Ccode\u003Efetch\u003C\u002Fcode\u003E, we can pre-fetch the data asynchronously \u003Cstrong\u003Ein any Vue components\u003C\u002Fstrong\u003E. It means, other than page components found in \u003Ccode\u003E\u002Fpages\u003C\u002Fcode\u003E directory, every other \u003Ccode\u003E.vue\u003C\u002Fcode\u003E components found in \u003Ccode\u003E\u002Flayouts\u003C\u002Fcode\u003E and \u003Ccode\u003E\u002Fcomponents\u003C\u002Fcode\u003E directories can also benefit from the fetch hook.\u003C\u002Fp\u003E\n\u003Cp\u003ELet&#39;s see what this could mean for layout and building-block components.\u003C\u002Fp\u003E\n\u003Ch3 id=\"layout-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#layout-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ELayout Components\u003C\u002Fh3\u003E\u003Cp\u003EUsing new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E, now we can make API calls directly from the layout components. This was impossible prior to the release of v2.12.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPossible use cases\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EFetch config data from the back-end in Nuxt layouts to generate footer and navbar dynamically\u003C\u002Fli\u003E\n\u003Cli\u003EFetch user related data (i.e. user profile, shopping-cart item count) in the navbar\u003C\u002Fli\u003E\n\u003Cli\u003EFetch site relevant data on \u003Ccode\u003Elayouts\u002Ferror.vue\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"building-block-child-nested-components\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#building-block-child-nested-components\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EBuilding-block (Child\u002FNested) Components\u003C\u002Fh3\u003E\u003Cp\u003EWith \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook available in child components as well, we can off-load some of the data-fetching tasks from page-level components, and delegate them over to nested components. This was also impossible prior to the release of v2.12.\u003C\u002Fp\u003E\n\u003Cp\u003EThis reduces the responsibility of route-level components to a great extent.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EPossible use case -\u003C\u002Fstrong\u003E We can still pass props to child components, but if the child components need to have their own data-fetching logic, now they can!\u003C\u002Fp\u003E\n\u003Ch2 id=\"call-order-of-multiple-fetch-hooks\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#call-order-of-multiple-fetch-hooks\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ECall order of multiple fetch hooks\u003C\u002Fh2\u003E\u003Cp\u003ESince each component can have its own data-fetching logic, you may ask what would be the order in which each of them are called?\u003C\u002Fp\u003E\n\u003Cp\u003EFetch hook is called on server-side once (on the first request to the Nuxt app) and then on client-side when navigating to further routes. But since we can define one fetch hook for each component, fetch hooks are called in sequence of their hierarchy.\u003C\u002Fp\u003E\n\u003Ch3 id=\"disabling-fetch-on-server-side\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#disabling-fetch-on-server-side\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EDisabling fetch on server-side\u003C\u002Fh3\u003E\u003Cp\u003EIn addition, we can even disable fetch on the server-side if required.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EfetchOnServer\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAnd this way, the fetch hook will only be called on client-side. When \u003Ccode\u003EfetchOnServer\u003C\u002Fcode\u003E is set to false, \u003Ccode\u003E$fetchState.pending\u003C\u002Fcode\u003E becomes \u003Ccode\u003Etrue\u003C\u002Fcode\u003E when the component is rendered on server-side.\u003C\u002Fp\u003E\n\u003Ch2 id=\"error-handling\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#error-handling\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EError Handling\u003C\u002Fh2\u003E\u003Cp\u003ENew \u003Ccode\u003Efetch\u003C\u002Fcode\u003E handles error at component level. Let’s see how.\u003C\u002Fp\u003E\n\u003Cp\u003EBecause we’re fetching data asynchronously, the new fetch() provides a \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E object to check whether the request has finished and progressed successfully.\u003C\u002Fp\u003E\n\u003Cp\u003EBelow is what the \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E object looks like.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003E$fetchState = {\n  pending: true | false,\n  error: null | {},\n  timestamp: Integer\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWe have three keys,\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Cstrong\u003EPending -\u003C\u002Fstrong\u003E lets you display a placeholder when fetch is being called on client-side\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003EError -\u003C\u002Fstrong\u003E lets you show an error message\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003ETimestamp -\u003C\u002Fstrong\u003E shows timestamp of the last fetch which is useful for caching with \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003EThese keys are then used directly in the template area of the component to show relevant placeholders during the process of fetching data from the API.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$fetchState.pending&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EFetching posts...\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else-if\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$fetchState.error&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003EError while fetching posts\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ep\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ev-else\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n      …\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eul\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EWhen error occurs at \u003Cstrong\u003Ecomponent-level\u003C\u002Fstrong\u003E, we can set HTTP status code on server-side by checking \u003Ccode\u003Eprocess.server\u003C\u002Fcode\u003E in fetch hook and follow it up with \u003Ccode\u003Ethrow new Error()\u003C\u002Fcode\u003E statement.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E post = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fjsonplaceholder.typicode.com\u002Fposts\u002F\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.id}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n                     .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E res.json())\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (post.id === \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$route.params.id) {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.post = post\n    } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F set status code on server and\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (process.server) {\n        \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$nuxt.context.res.statusCode = \u003Cspan class=\"hljs-number\"\u003E404\u003C\u002Fspan\u003E\n      }\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F use throw new Error()\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;Post not found&#x27;\u003C\u002Fspan\u003E)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003ESetting the HTTP status code this way \u003Cstrong\u003Eis useful for correct SEO\u003C\u002Fstrong\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"fetch-as-a-method\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#fetch-as-a-method\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFetch as a method\u003C\u002Fh2\u003E\u003Cp\u003ENew fetch hook also acts as a method that can be invoked upon user interaction or invoked programmatically from the component methods.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- from template in template  --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E @\u003Cspan class=\"hljs-attr\"\u003Eclick\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;$fetch&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003ERefresh Data\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ebutton\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F from component methods in script section\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Emethods\u003C\u002Fspan\u003E: {\n    refresh() {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$fetch();\n    }\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"making-nuxt-pages-more-performant\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#making-nuxt-pages-more-performant\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EMaking Nuxt pages more performant\u003C\u002Fh2\u003E\u003Cp\u003EWe can use \u003Ccode\u003E:keep-alive-props\u003C\u002Fcode\u003E prop and \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook to make Nuxt page components more performant using a new fetch hook.\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt allows \u003Cstrong\u003Ecaching a certain number of pages\u003C\u002Fstrong\u003E in the memory along with their fetched data. And also allows \u003Cstrong\u003Eadding a number of seconds\u003C\u002Fstrong\u003E before we can re-fetch the data.\u003C\u002Fp\u003E\n\u003Cp\u003EFor any of the above methods to work, we have to use the \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E prop in generic \u003Ccode\u003E&lt;nuxt \u002F&gt;\u003C\u002Fcode\u003E and \u003Ccode\u003E&lt;nuxt-child\u003C\u002Fcode\u003E&gt; components.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- layouts\u002Fdefault.vue --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ekeep-alive\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EIn addition, we can pass \u003Ccode\u003E:keep-alive-props\u003C\u002Fcode\u003E to \u003Ccode\u003E&lt;nuxt \u002F&gt;\u003C\u002Fcode\u003E component to cache a number of pages along with their fetched data.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003E:keep-alive-props\u003C\u002Fcode\u003E prop allow us to indicate the maximum number of pages that should be kept in the memory while we navigate elsewhere within the site.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-comment\"\u003E&lt;!-- layouts\u002Fdefault.vue --&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Enuxt\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ekeep-alive\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E:keep-alive-props\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;{ max: 10 }&quot;\u003C\u002Fspan\u003E \u002F&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003EAbove is one way to boost page performance which is more high-level and generic, while the next one drills down to optimise the fetch request calls by using the \u003Ccode\u003Etimestamp\u003C\u002Fcode\u003E property of \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E and comparing it against the number of seconds delay before it re-fetches the data.\u003C\u002Fp\u003E\n\u003Cp\u003EVue’s \u003Ccode\u003Eactivated\u003C\u002Fcode\u003E hook is used here with Nuxt&#39;s \u003Ccode\u003Ekeep-alive\u003C\u002Fcode\u003E prop to re-fetch the data.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  activated() {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Call fetch again if last fetch more than a minute ago\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$fetchState.timestamp &lt;= \u003Cspan class=\"hljs-built_in\"\u003EDate\u003C\u002Fspan\u003E.now() - \u003Cspan class=\"hljs-number\"\u003E60000\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.$fetch();\n    }\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"asyncdata-vs-fetch\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#asyncdata-vs-fetch\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EasyncData vs Fetch\u003C\u002Fh2\u003E\u003Cp\u003EAs far as page components are concerned, new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E seems way too similar to \u003Ccode\u003EasyncData()\u003C\u002Fcode\u003E because they both deal with the local data. But there are some key differences worth taking note of as below.\u003C\u002Fp\u003E\n\u003Cp\u003EAs of Nuxt 2.12, \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E method is still an active feature. Let’s examine some of the key differences between \u003Ccode\u003EasyncData\u003C\u002Fcode\u003E and new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch3 id=\"asyncdata\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#asyncdata\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EAsyncData\u003C\u002Fh3\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003EasyncData\u003C\u002Fcode\u003E is limited to only page-level components\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ethis\u003C\u002Fcode\u003E context is unavailable\u003C\u002Fli\u003E\n\u003Cli\u003EAdds payload by \u003Cstrong\u003Ereturning\u003C\u002Fstrong\u003E the data\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E asyncData(context) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E data = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E context.$axios.$get(\n      \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fjsonplaceholder.typicode.com\u002Ftodos`\u003C\u002Fspan\u003E\n    );\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `todos` does not have to be declared in data()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Etodos\u003C\u002Fspan\u003E: data.Item };\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `todos` is merged with local data\u003C\u002Fspan\u003E\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"new-fetch\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#new-fetch\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENew Fetch\u003C\u002Fh3\u003E\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Efetch\u003C\u002Fcode\u003E is available in all Vue components\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003Ethis\u003C\u002Fcode\u003E context is available\u003C\u002Fli\u003E\n\u003Cli\u003ESimply \u003Cstrong\u003Emutates\u003C\u002Fstrong\u003E the local data\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  data() {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-attr\"\u003Etodos\u003C\u002Fspan\u003E: []\n    };\n  },\n  \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E fetch() {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { data } = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E axios.get(\n      \u003Cspan class=\"hljs-string\"\u003E`https:\u002F\u002Fjsonplaceholder.typicode.com\u002Ftodos`\u003C\u002Fspan\u003E\n    );\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F `todos` has to be declared in data()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E.todos = data;\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"fetch-before-nuxt-2-12\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#fetch-before-nuxt-2-12\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EFetch before Nuxt 2.12\u003C\u002Fh2\u003E\u003Cp\u003EIf you have been working with Nuxt for a while, then you’ll know that the previous version of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E was significantly different.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EIs this a breaking change?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ENo, it isn&#39;t. Actually, the old fetch can still be used by passing the \u003Ccode\u003Econtext\u003C\u002Fcode\u003E as the first argument to avoid any breaking changes in your existing Nuxt applications.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EHere’s the list of notable changes in \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook compared with \u003Cstrong\u003Ebefore\u003C\u002Fstrong\u003E and \u003Cstrong\u003Eafter\u003C\u002Fstrong\u003E v2.12.\u003C\u002Fp\u003E\n\u003Ch3 id=\"1-call-order-of-code-fetch-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#1-call-order-of-code-fetch-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E1. Call order of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook was called before initiating the component, hence \u003Ccode\u003Ethis\u003C\u002Fcode\u003E wasn’t available inside the fetch hook.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is called after the component instance is created on the server-side when the route is accessed.\u003C\u002Fp\u003E\n\u003Ch3 id=\"2-code-this-code-vs-code-context-code-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#2-code-this-code-vs-code-context-code-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E2. \u003Ccode\u003Ethis\u003C\u002Fcode\u003E vs \u003Ccode\u003Econtext\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E We had access to the Nuxt \u003Ccode\u003Econtext\u003C\u002Fcode\u003E on page-level components, given that the \u003Ccode\u003Econtext\u003C\u002Fcode\u003E is passed as a first parameter.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  fetch(context) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F …\u003C\u002Fspan\u003E\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E We can access \u003Ccode\u003Ethis\u003C\u002Fcode\u003E context just like Vue client-side hooks without passing any parameters.\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  fetch() {\n    \u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(\u003Cspan class=\"hljs-built_in\"\u003Ethis\u003C\u002Fspan\u003E);\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"3-availability-of-code-fetch-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#3-availability-of-code-fetch-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E3. Availability of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E Only page (route-level) components were allowed to fetch data on the server-side.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E Now, we can pre-fetch the data asynchronously in any Vue components.\u003C\u002Fp\u003E\n\u003Ch3 id=\"4-call-order-of-code-fetch-code-hook\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#4-call-order-of-code-fetch-code-hook\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E4. Call order of \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E \u003Ccode\u003Efetch\u003C\u002Fcode\u003E could be called server-side once (on the first request to the Nuxt app) and client-side when navigating to further routes.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E New \u003Ccode\u003Efetch\u003C\u002Fcode\u003E is the same as an old fetch, but…\u003C\u002Fp\u003E\n\u003Cp\u003E…since we can have one \u003Ccode\u003Efetch\u003C\u002Fcode\u003E for each component, \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hooks are called in sequence of their hierarchy.\u003C\u002Fp\u003E\n\u003Ch3 id=\"5-error-handling\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#5-error-handling\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E5. Error Handling\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cstrong\u003EBefore -\u003C\u002Fstrong\u003E We used the \u003Ccode\u003Econtext.error\u003C\u002Fcode\u003E function that showed a custom error page when an error occurred during API calls.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EAfter -\u003C\u002Fstrong\u003E New \u003Ccode\u003Efetch\u003C\u002Fcode\u003E uses the \u003Ccode\u003E$fetchState\u003C\u002Fcode\u003E object to handle errors in the template area during API calls.\u003C\u002Fp\u003E\n\u003Cp\u003EError handling is performed at component level.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Cstrong\u003EDoes this mean we cannot show users a custom error page like we did prior to Nuxt 2.12?\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003EYes we can, but only with \u003Ccode\u003EasyncData()\u003C\u002Fcode\u003E when it&#39;s about page-level component data. When using \u003Ccode\u003Efetch\u003C\u002Fcode\u003E, we can utilize \u003Ccode\u003Ethis.$nuxt.error({ statusCode: 404, message: &#39;Data not found&#39; })\u003C\u002Fcode\u003E to show a custom error page.\u003C\u002Fp\u003E\n\u003Ch2 id=\"conclusion\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#conclusion\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EConclusion\u003C\u002Fh2\u003E\u003Cp\u003ENew fetch hook brings a lot of improvements and provides more flexibility in fetching data and organising route-level &amp; building-block components in a whole new way!\u003C\u002Fp\u003E\n\u003Cp\u003EIt will certainly make you think a little differently when you plan and design your new Nuxt project that requires multiple API calls within the same route.\u003C\u002Fp\u003E\n\u003Cp\u003EI hope this article has helped you get acquainted with the new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E feature. I&#39;d love to see what you build with it.\u003C\u002Fp\u003E\n\u003Ch2 id=\"what-39-s-next\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#what-39-s-next\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EWhat&#39;s next\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003ERead \u003Ca href=\"\u002Fblog\u002Fbuild-dev-to-clone-with-nuxt-new-fetch\"\u003ESergey Bedritsky&#39;s article\u003C\u002Fa\u003E to see new \u003Ccode\u003Efetch\u003C\u002Fcode\u003E hook in action as he shows how to buid dev.to clone!\u003C\u002Fli\u003E\n\u003Cli\u003EAlready missed March newsletter? \u003Ca href=\"#subscribe-to-newsletter\"\u003ESubscribe to Nuxt newsletter\u003C\u002Fa\u003E and get latest articles and resources delivered right into your inbox.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:q,slug:r},next:{title:u,slug:v}}},{path:"zh\u002Fblog\u002Fnuxtjs-from-terminal-to-browser.md",slug:v,readtime:{text:"3 min read",minutes:2.075,time:124500.00000000001,words:415},title:u,description:"How we changed the developer experience to stop switching between the terminal and browser.",imgUrl:"blog\u002Fnuxtjs-from-terminal-to-browser\u002Fmain.png",date:"2019-06-04T00:00:00.000Z",authors:[{name:H,avatarUrl:c,link:I}],tags:["webpack","DX"],body:"\u003Cp\u003EHow we changed the developer experience to stop switching between the terminal and browser.\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003ENuxt.js is a Vue.js framework to create different kind of web applications with the \u003Cstrong\u003Esame directory structure &amp; conventions\u003C\u002Fstrong\u003E: Universal, Single Page, PWA or Static Generated.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cem\u003Eℹ️ These features are all available with \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Freleases\u002Ftag\u002Fv2.8.0\"\u003Ev2.8.0 release\u003C\u002Fa\u003E.\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"-a-href-problems-a-problems\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#-a-href-problems-a-problems\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E\u003Ca href=\"#problems\"\u003E\u003C\u002Fa\u003EProblems\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003EDeveloping JavaScript applications with Webpack or any bundler requires to switch between your browser and terminal for debugging purpose.\u003C\u002Fli\u003E\n\u003Cli\u003EUsing \u003Ccode\u003Econsole.log\u003C\u002Fcode\u003E to debug when the app is server rendered requires to remember that logs will be displayed on the terminal when refreshing the page.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch2 id=\"-a-href-solutions-a-solutions\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#-a-href-solutions-a-solutions\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E\u003Ca href=\"#solutions\"\u003E\u003C\u002Fa\u003ESolutions\u003C\u002Fh2\u003E\u003Col\u003E\n\u003Cli\u003EForwarding Webpack build state right in the browser and display them in a fancy manner.\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1u6wSHPt--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58880743-ec7a3280-86d8-11e9-8856-8d9d22b89b70.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--1u6wSHPt--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58880743-ec7a3280-86d8-11e9-8856-8d9d22b89b70.gif\" alt=\"foward-webpack-build-state\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003ESame for Hot Module Replacement (really useful when the project gets bigger and takes more time to re-build).\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--faVtF222--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58547105-129a6100-8207-11e9-9c61-a93956a17727.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--faVtF222--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58547105-129a6100-8207-11e9-9c61-a93956a17727.gif\" alt=\"nuxt-build-indicator-hmr\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003EForwarding SSR logs to the browser in development mode\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--bwQ8iEq2--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58566291-a3396700-8230-11e9-9dd6-09c3ff8578d2.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--bwQ8iEq2--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F58566291-a3396700-8230-11e9-9dd6-09c3ff8578d2.gif\" alt=\"nuxt-ssr-logs-forwarding\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"-a-href-nuxtjs-vision-a-nuxtjs-vision\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#-a-href-nuxtjs-vision-a-nuxtjs-vision\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E\u003Ca href=\"#nuxtjs-vision\"\u003E\u003C\u002Fa\u003ENuxtJS Vision\u003C\u002Fh2\u003E\u003Cp\u003EThe purpose to these changes is to use the terminal for commands only.\u003C\u002Fp\u003E\n\u003Cp\u003ENow you can focus right on your code and its visual result 🙂\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EBe lazy, be smart, be Nuxt.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003ELinks:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EDocumentation: \u003Ca href=\"https:\u002F\u002Fnuxtjs.org\"\u003Ehttps:\u002F\u002Fnuxtjs.org\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EGitHub: \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ELoading Screen source code: \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Floading-screen\"\u003Ehttps:\u002F\u002Fgithub.com\u002Fnuxt\u002Floading-screen\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ETwitter: \u003Ca href=\"https:\u002F\u002Ftwitter.com\u002Fnuxt_js\"\u003Ehttps:\u002F\u002Ftwitter.com\u002Fnuxt_js\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",links:{previous:{title:s,slug:t},next:{title:J,slug:K}}},{path:"zh\u002Fblog\u002Fintroducing-smart-prefetching.md",slug:K,readtime:{text:"1 min read",minutes:.745,time:44700,words:149},title:J,description:"Starting from Nuxt v2.4.0, Nuxt.js will automagically prefetch the code-splitted pages linked with a nuxt-link when visible in the viewport by default.",imgUrl:"blog\u002Fintroducing-smart-prefetching\u002Fmain.png",date:"2019-01-28T00:00:00.000Z",authors:[{name:H,avatarUrl:c,link:I}],tags:["framework","feature","performance"],body:"\u003Ch2 id=\"introducing-smart-prefetching-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#introducing-smart-prefetching-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EIntroducing Smart prefetching ⚡️\u003C\u002Fh2\u003E\u003Cp\u003EStarting from \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Freleases\u002Ftag\u002Fv2.4.0\"\u003ENuxt v2.4.0\u003C\u002Fa\u003E, Nuxt.js will automagically prefetch the code-splitted pages linked with \u003Ccode\u003E&lt;nuxt-link&gt;\u003C\u002Fcode\u003E when visible in the viewport \u003Cstrong\u003Eby default\u003C\u002Fstrong\u003E. This hugely improves the end user performances, inspired by \u003Ca href=\"https:\u002F\u002Fgithub.com\u002FGoogleChromeLabs\u002Fquicklink\"\u003Equicklink\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jP7Crsw7--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F51692960-4158be80-1ffe-11e9-9299-61881d06412e.gif\"\u003E\u003Cimg src=\"https:\u002F\u002Fres.cloudinary.com\u002Fpracticaldev\u002Fimage\u002Ffetch\u002Fs--jP7Crsw7--\u002Fc_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880\u002Fhttps:\u002F\u002Fuser-images.githubusercontent.com\u002F904724\u002F51692960-4158be80-1ffe-11e9-9299-61881d06412e.gif\" alt=\"nuxt-prefetch-comparison\"\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EDemos are online and we recommend you to try it out to feel the difference:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003ENo prefetching (v2.3): \u003Ca href=\"https:\u002F\u002Fnuxt-no-prefetch.surge.sh\"\u003Ehttps:\u002F\u002Fnuxt-no-prefetch.surge.sh\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EWith prefetching (v2.4): \u003Ca href=\"https:\u002F\u002Fnuxt-prefetch.surge.sh\"\u003Ehttps:\u002F\u002Fnuxt-prefetch.surge.sh\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EYou can learn more about this feature in the \u003Ca href=\"\u002Fapi\u002Fcomponents-nuxt-link\"\u003E\u003Ccode\u003E&lt;nuxt-link&gt;\u003C\u002Fcode\u003E\u003C\u002Fa\u003E section of the documentation.\u003C\u002Fp\u003E\n",links:{previous:{title:u,slug:v},next:{title:b,slug:b}}}]}],fetch:[],mutations:[]}}("Nuxt",null,"https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1042510623962275840\u002F1Iw_Mvud_400x400.jpg","Moving from @nuxtjs\u002Fdotenv to runtime config","moving-from-nuxtjs-dotenv-to-runtime-config","https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F1252900852156772352\u002FJLIVJ-TC_400x400.jpg","Improve Your Developer Experience With Nuxt Components","improve-your-developer-experience-with-nuxt-components","Going Full Static","going-full-static","https:\u002F\u002Ftwitter.com\u002Fdebs_obrien","Debbie O'Brien","Going dark with Nuxt.js color mode","going-dark-with-nuxtjs-color-mode","Announcing Nuxt's $2M seed round","seed-round","Build a DEV.TO clone with Nuxt new fetch","build-dev-to-clone-with-nuxt-new-fetch","Understanding how fetch works in Nuxt 2.12","understanding-how-fetch-works-in-nuxt-2-12","NuxtJS: From Terminal to Browser","nuxtjs-from-terminal-to-browser","Sebastien Chopin","https:\u002F\u002Fpbs.twimg.com\u002Fprofile_images\u002F780651635932434432\u002FYtbSkumD_400x400.jpg","https:\u002F\u002Ftwitter.com\u002FAtinux","https:\u002F\u002Ftwitter.com\u002FKrutiePatel","Fetch","Asynchronous Data Fetching","API","Create a Blog with Nuxt Content","14 min read","creating-blog-with-nuxt-content","Krutie Patel","Sébastien Chopin","https:\u002F\u002Ftwitter.com\u002Fatinux","Introducing Smart Prefeching","introducing-smart-prefetching")));