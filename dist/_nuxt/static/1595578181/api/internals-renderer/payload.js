__NUXT_JSONP__("/api/internals-renderer", {data:[{},{path:"\u002Fzh\u002Fapi\u002Finternals-renderer",section:"api",page:{attrs:{title:"API: The Renderer Class",description:"Nuxt Renderer Class"},body:"\u003Ch1 id=\"renderer-class\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#renderer-class\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ERenderer Class\u003C\u002Fh1\u003E\u003Cul\u003E\n\u003Cli\u003E来源: \u003Cstrong\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxt.js\u002Fblob\u002Fdev\u002Fpackages\u002Fvue-renderer\u002Fsrc\u002Frenderer.js\"\u003Evue-renderer\u002Frenderer.js\u003C\u002Fa\u003E\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E此类正在导出连接中间件，该中间件处理和服务所有SSR和资源请求。\u003C\u002Fp\u003E\n\u003Ch2 id=\"hooks\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#hooks\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EHooks\u003C\u002Fh2\u003E\u003Cp\u003E我们可以在某些生命周期事件中注册钩子。\u003C\u002Fp\u003E\n\u003Ctable\u003E\n\u003Cthead\u003E\n\u003Ctr\u003E\n\u003Cth\u003EHook\u003C\u002Fth\u003E\n\u003Cth\u003EArguments\u003C\u002Fth\u003E\n\u003Cth\u003EWhen\u003C\u002Fth\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:before\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(renderer, options)\u003C\u002Ftd\u003E\n\u003Ctd\u003E在为Renderer类设置中间件和资源之前，对重载某些方法或选项很有用。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:setupMiddleware\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(app) \u003Cem\u003Econnect instance\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E在Nuxt添加它的中间件堆栈之前。我们可以用它来注册自定义服务器端中间件。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:errorMiddleware\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(app) \u003Cem\u003Econnect instance\u003C\u002Fem\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E在添加Nuxt错误中间件之前，在使用Nuxt之前添加自己的中间件很有用。有关详细信息，请参阅\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt-community\u002Fsentry-module\u002Fblob\u002Fmaster\u002Flib\u002Fmodule.js#L122\"\u003ESentry module\u003C\u002Fa\u003E模块。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:resourcesLoaded\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(resources)\u003C\u002Ftd\u003E\n\u003Ctd\u003E在加载渲染器的资源之后调用。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:done\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(renderer)\u003C\u002Ftd\u003E\n\u003Ctd\u003ESSR中间件和所有资源都准备就绪（渲染器就绪）\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:routeContext\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(context.nuxt)\u003C\u002Ftd\u003E\n\u003Ctd\u003E每次路由是服务器渲染时和渲染之前：路由hooks。在将\u003Ccode\u003ENuxt\u003C\u002Fcode\u003E上下文序列化为窗口\u003Ccode\u003E__ NUXT__\u003C\u002Fcode\u003E之前调用，对于添加一些可以在客户端获取的数据很有用。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:route\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(url, result, context)\u003C\u002Ftd\u003E\n\u003Ctd\u003E每次路由都是服务器呈现的。在将请求发送回浏览器之前调用。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003Ctr\u003E\n\u003Ctd\u003E\u003Ccode\u003Erender:routeDone\u003C\u002Fcode\u003E\u003C\u002Ftd\u003E\n\u003Ctd\u003E(url, result, context)\u003C\u002Ftd\u003E\n\u003Ctd\u003E每次路由都是服务器呈现的。响应发送到浏览器后调用。\u003C\u002Ftd\u003E\n\u003C\u002Ftr\u003E\n\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n"},contributors:[{author:"warriorBrian"},{author:"clarkdo"},{author:"dnlnrs"},{author:"aytdm"}]}],fetch:[],mutations:[]});