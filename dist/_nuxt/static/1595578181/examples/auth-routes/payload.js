__NUXT_JSONP__("/examples/auth-routes", {data:[{},{path:"\u002Fzh\u002Fexamples\u002Fauth-routes",section:"examples",page:{attrs:{title:"路由鉴权",description:"Nuxt.js 的路由鉴权示例",github:"auth-routes",livedemo:"https:\u002F\u002Fnuxt-auth-routes.gomix.me",liveedit:"https:\u002F\u002Fgomix.com\u002F#!\u002Fproject\u002Fnuxt-auth-routes"},body:"\u003Ch1 id=\"文档\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#文档\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E文档\u003C\u002Fh1\u003E\u003Cblockquote\u003E\n\u003Cp\u003ENuxt.js 可以很轻松地创建需要鉴权的路由。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"使用-express-和-sessions\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#使用-express-和-sessions\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E使用 Express 和 Sessions\u003C\u002Fh2\u003E\u003Cp\u003E想要给应用添加 sessions 特性的话，我们将要用到 \u003Ccode\u003Eexpress\u003C\u002Fcode\u003E and \u003Ccode\u003Eexpress-session\u003C\u002Fcode\u003E。因此，我们需要以编程形式使用 Nuxt.js。\u003C\u002Fp\u003E\n\u003Cp\u003E首先，我们先安装依赖包：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003Eyarn add express express-session body-parser whatwg-fetch\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cem\u003E我们待会会讲到 \u003Ccode\u003Ewhatwg-fetch\u003C\u002Fcode\u003E。\u003C\u002Fem\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E然后创建 \u003Ccode\u003Eserver.js\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { Nuxt, Builder } = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;nuxt&#x27;\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E bodyParser = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;body-parser&#x27;\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E session = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;express-session&#x27;\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E app = \u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;express&#x27;\u003C\u002Fspan\u003E)()\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Body parser，用来封装 req.body\u003C\u002Fspan\u003E\napp.use(bodyParser.json())\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Sessions 来创建 req.session\u003C\u002Fspan\u003E\napp.use(session({\n  \u003Cspan class=\"hljs-attr\"\u003Esecret\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;super-secret-key&#x27;\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Eresave\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003EsaveUninitialized\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Ecookie\u003C\u002Fspan\u003E: { \u003Cspan class=\"hljs-attr\"\u003EmaxAge\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E60000\u003C\u002Fspan\u003E }\n}))\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 发起 POST \u002Fapi\u002Flogin 请求完成用户登录，并添加该用户到 req.session.authUser\u003C\u002Fspan\u003E\napp.post(\u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fapi\u002Flogin&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Ereq, res\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (req.body.username === \u003Cspan class=\"hljs-string\"\u003E&#x27;demo&#x27;\u003C\u002Fspan\u003E &amp;&amp; req.body.password === \u003Cspan class=\"hljs-string\"\u003E&#x27;demo&#x27;\u003C\u002Fspan\u003E) {\n    req.session.authUser = { \u003Cspan class=\"hljs-attr\"\u003Eusername\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;demo&#x27;\u003C\u002Fspan\u003E }\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E res.json({ \u003Cspan class=\"hljs-attr\"\u003Eusername\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;demo&#x27;\u003C\u002Fspan\u003E })\n  }\n  res.status(\u003Cspan class=\"hljs-number\"\u003E401\u003C\u002Fspan\u003E).json({ \u003Cspan class=\"hljs-attr\"\u003Eerror\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;Bad credentials&#x27;\u003C\u002Fspan\u003E })\n})\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 发起 POST \u002Fapi\u002Flogout 请求注销当前用户，并从 req.session 中移除\u003C\u002Fspan\u003E\napp.post(\u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fapi\u002Flogout&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Ereq, res\u003C\u002Fspan\u003E) \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Edelete\u003C\u002Fspan\u003E req.session.authUser\n  res.json({ \u003Cspan class=\"hljs-attr\"\u003Eok\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E })\n})\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 我们用这些选项初始化 Nuxt.js：\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E isProd = process.env.NODE_ENV === \u003Cspan class=\"hljs-string\"\u003E&#x27;production&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E nuxt = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Nuxt({ \u003Cspan class=\"hljs-attr\"\u003Edev\u003C\u002Fspan\u003E: !isProd })\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 生产模式不需要 build\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (!isProd) {\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E builder = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Builder(nuxt)\n  builder.build()\n}\napp.use(nuxt.render)\napp.listen(\u003Cspan class=\"hljs-number\"\u003E3000\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-built_in\"\u003Econsole\u003C\u002Fspan\u003E.log(\u003Cspan class=\"hljs-string\"\u003E&#x27;Server is listening on http:\u002F\u002Flocalhost:3000&#x27;\u003C\u002Fspan\u003E)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E然后更新我们的 \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E 脚本：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs json\"\u003E\u002F\u002F ...\n&quot;scripts&quot;: {\n  &quot;dev&quot;: &quot;node server.js&quot;,\n  &quot;build&quot;: &quot;nuxt build&quot;,\n  &quot;start&quot;: &quot;cross-env NODE_ENV=production node server.js&quot;\n}\n\u002F\u002F ...\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E注意： 要使上面的例子要正常运行，你需要运行 \u003Ccode\u003Enpm install --save-dev cross-env\u003C\u002Fcode\u003E 安装 \u003Ccode\u003Ecross-env\u003C\u002Fcode\u003E。当然如果你的开发环境不是 Windows 的话，可以不用安装 \u003Ccode\u003Ecross-env\u003C\u002Fcode\u003E，这时需要将 \u003Ccode\u003Estart\u003C\u002Fcode\u003E 脚本中的 \u003Ccode\u003Ecross-env\u003C\u002Fcode\u003E 去掉。\u003C\u002Fp\u003E\n\u003Ch2 id=\"使用状态树数据-store-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#使用状态树数据-store-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E使用状态树数据（store）\u003C\u002Fh2\u003E\u003Cp\u003E我们的应用需要一个全局的状态树，让\u003Cstrong\u003E每个页面\u003C\u002Fstrong\u003E都知道用户是否已登录。\u003C\u002Fp\u003E\n\u003Cp\u003E为了让 Nuxt.js 使用 Vuex，我们创建一个 \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E 文件：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vue&#x27;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Vuex \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;vuex&#x27;\u003C\u002Fspan\u003E\n\nVue.use(Vuex)\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F window.fetch() 的 Polyfill\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-built_in\"\u003Erequire\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;whatwg-fetch&#x27;\u003C\u002Fspan\u003E)\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E store = \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E Vuex.Store({\n\n  \u003Cspan class=\"hljs-attr\"\u003Estate\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003EauthUser\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\n  },\n\n  \u003Cspan class=\"hljs-attr\"\u003Emutations\u003C\u002Fspan\u003E: {\n    SET_USER (state, user) {\n      state.authUser = user\n    }\n  },\n\n  \u003Cspan class=\"hljs-attr\"\u003Eactions\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n  }\n\n})\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E store\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Col\u003E\n\u003Cli\u003E为了让 Vue 使用 Vuex，我们引入 \u003Ccode\u003EVue\u003C\u002Fcode\u003E 和 \u003Ccode\u003EVuex\u003C\u002Fcode\u003E（Nuxt.js 已包含），这样组件内就多了个 \u003Ccode\u003E$store\u003C\u002Fcode\u003E 属性了\u003C\u002Fli\u003E\n\u003Cli\u003E为了让 \u003Ccode\u003Efetch()\u003C\u002Fcode\u003E 函数在所有浏览器可用，我们引入 \u003Ccode\u003Erequire(&#39;whatwg-fetch&#39;)\u003C\u002Fcode\u003E（见 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fgithub\u002Ffetch\"\u003Efetch 代码库\u003C\u002Fa\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003E我们新建一个 \u003Ccode\u003ESET_USER\u003C\u002Fcode\u003E mutation，它会把当前已登录的用户对象注入到 \u003Ccode\u003Estate.authUser\u003C\u002Fcode\u003E 中\u003C\u002Fli\u003E\n\u003Cli\u003E我们导出状态树 (store) 实例，让 Nuxt.js 可以把它注入到我们的应用中\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch3 id=\"nuxtserverinit-方法\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#nuxtserverinit-方法\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003EnuxtServerInit() 方法\u003C\u002Fh3\u003E\u003Cp\u003ENuxt.js 会以上下文对象作为参数，调用一个特别的方法，叫做 \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E。所以当应用完毕时，一些我们从服务器获取到的数据就会被填充到这个状态树 (store) 上。\u003C\u002Fp\u003E\n\u003Cp\u003E在 \u003Ccode\u003Estore\u002Findex.js\u003C\u002Fcode\u003E 文件中，我们添加这个 \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E 方法：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003EnuxtServerInit ({ commit }, { req }) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (req.session &amp;&amp; req.session.authUser) {\n    commit(\u003Cspan class=\"hljs-string\"\u003E&#x27;SET_USER&#x27;\u003C\u002Fspan\u003E, req.session.authUser)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E有几种方式可以使 \u003Ccode\u003EnuxtServerInit\u003C\u002Fcode\u003E 的方法体异步化，你可以根据自己的情况选择其一：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E调用返回 \u003Ccode\u003EPromise\u003C\u002Fcode\u003E 的函数， nuxt.js会等待该\u003Ccode\u003EPromise\u003C\u002Fcode\u003E被解析之后才会设置组件的数据，从而渲染组件。\u003C\u002Fli\u003E\n\u003Cli\u003E使用 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Flukehoban\u002Fecmascript-asyncawait\"\u003Easync 或 await\u003C\u002Fa\u003E (\u003Ca href=\"https:\u002F\u002Fzeit.co\u002Fblog\u002Fasync-and-await\"\u003E了解更多\u003C\u002Fa\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003E调用使用回调函数作为参数的函数。\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch3 id=\"login-方法\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#login-方法\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003Elogin() 方法\u003C\u002Fh3\u003E\u003Cp\u003E我们添加一个登录 \u003Ccode\u003Elogin\u003C\u002Fcode\u003E 方法，它会在用户登录的时候被页面组件调用：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Elogin ({ commit }, { username, password }) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fapi\u002Flogin&#x27;\u003C\u002Fspan\u003E, {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 发送客户端 cookies 到服务端\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Ecredentials\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;same-origin&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Emethod\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;POST&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Eheaders\u003C\u002Fspan\u003E: {\n      \u003Cspan class=\"hljs-string\"\u003E&#x27;Content-Type&#x27;\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;application\u002Fjson&#x27;\u003C\u002Fspan\u003E\n    },\n    \u003Cspan class=\"hljs-attr\"\u003Ebody\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003EJSON\u003C\u002Fspan\u003E.stringify({\n      username,\n      password\n    })\n  })\n  .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Eres\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (res.status === \u003Cspan class=\"hljs-number\"\u003E401\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;Bad credentials&#x27;\u003C\u002Fspan\u003E)\n    } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E res.json()\n    }\n  })\n  .then(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003EauthUser\u003C\u002Fspan\u003E) =&gt;\u003C\u002Fspan\u003E {\n    commit(\u003Cspan class=\"hljs-string\"\u003E&#x27;SET_USER&#x27;\u003C\u002Fspan\u003E, authUser)\n  })\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch3 id=\"logout-方法\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#logout-方法\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003Elogout() 方法\u003C\u002Fh3\u003E\u003Cpre\u003E\u003Ccode class=\"hljs js\"\u003Elogout ({ commit }) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E fetch(\u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fapi\u002Flogout&#x27;\u003C\u002Fspan\u003E, {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 发送客户端 cookies 到服务端\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Ecredentials\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;same-origin&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Emethod\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;POST&#x27;\u003C\u002Fspan\u003E\n  })\n  .then(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E {\n    commit(\u003Cspan class=\"hljs-string\"\u003E&#x27;SET_USER&#x27;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E)\n  })\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Ch2 id=\"页面组件\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#页面组件\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E页面组件\u003C\u002Fh2\u003E\u003Cp\u003E然后我们在页面组件内使用 \u003Ccode\u003E$store.state.authUser\u003C\u002Fcode\u003E 变量，来检查用户是否已登录。\u003C\u002Fp\u003E\n\u003Ch3 id=\"如果没登录则跳转\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#如果没登录则跳转\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E如果没登录则跳转\u003C\u002Fh3\u003E\u003Cp\u003E我们来试着添加一个只有登录用户可见的 \u003Ccode\u003E\u002Fsecret\u003C\u002Fcode\u003E 路由：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs html\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E超级隐私的页面\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Eh1\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Erouter-link\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eto\u003C\u002Fspan\u003E=\u003Cspan class=\"hljs-string\"\u003E&quot;\u002F&quot;\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E返回主页\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Erouter-link\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Ediv\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Etemplate\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 这里只用 fetch() 方法，因为我们不需要在这个组件中设置 data\u003C\u002Fspan\u003E\n  fetch ({ store, redirect }) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (!store.state.authUser) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E redirect(\u003Cspan class=\"hljs-string\"\u003E&#x27;\u002F&#x27;\u003C\u002Fspan\u003E)\n    }\n  }\n}\n\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u002F\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E在 \u003Ccode\u003Efetch\u003C\u002Fcode\u003E 方法中可以看到，如果用户没登录，我们会直接调 \u003Ccode\u003Eredirect(&#39;\u002F&#39;)\u003C\u002Fcode\u003E 跳转页面回首页。\u003C\u002Fp\u003E\n"},contributors:[{author:"pi0"},{author:"NicoPennec"},{author:"Atinux"},{author:"alexchopin"},{author:"acidjazz"}]}],fetch:[],mutations:[]});