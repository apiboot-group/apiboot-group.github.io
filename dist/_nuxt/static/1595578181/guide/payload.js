__NUXT_JSONP__("/guide", {data:[{},{path:"\u002Fzh\u002Fguide\u002Findex",section:"guide",page:{attrs:{title:"关于 Nuxt.js",description:"2016 年 10 月 25 日, zeit.co 背后的团队对外发布了 Next.js，一个 React 的服务端渲染应用框架。几小时后，与 Next.js 异曲同工，一个基于 Vue.js 的服务端渲染应用框架应运而生，我们称之为：Nuxt.js。"},body:"\u003Cblockquote\u003E\n\u003Cp\u003E2016 年 10 月 25 日，\u003Ca href=\"https:\u002F\u002Fzeit.co\u002F\"\u003Ezeit.co\u003C\u002Fa\u003E 背后的团队对外发布了 \u003Ca href=\"https:\u002F\u002Fzeit.co\u002Fblog\u002Fnext\"\u003ENext.js\u003C\u002Fa\u003E，一个 React 的服务端渲染应用框架。几小时后，与 Next.js 异曲同工，一个基于 \u003Ca href=\"https:\u002F\u002Fvuejs.org\"\u003EVue.js\u003C\u002Fa\u003E 的服务端渲染应用框架应运而生，我们称之为：\u003Cstrong\u003ENuxt.js\u003C\u002Fstrong\u003E。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"nuxt-js-是什么-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#nuxt-js-是什么-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENuxt.js 是什么？\u003C\u002Fh2\u003E\u003Cp\u003ENuxt.js 是一个基于 Vue.js 的通用应用框架。\u003C\u002Fp\u003E\n\u003Cp\u003E通过对客户端\u002F服务端基础架构的抽象组织，Nuxt.js 主要关注的是应用的 \u003Cstrong\u003EUI渲染\u003C\u002Fstrong\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E我们的目标是创建一个灵活的应用框架，你可以基于它初始化新项目的基础结构代码，或者在已有 Node.js 项目中使用 Nuxt.js。\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt.js 预设了利用 Vue.js 开发\u003Cstrong\u003E服务端渲染\u003C\u002Fstrong\u003E的应用所需要的各种配置。\u003C\u002Fp\u003E\n\u003Cp\u003E除此之外，我们还提供了一种命令叫：\u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E ，为基于 Vue.js 的应用提供生成对应的静态站点的功能。\u003C\u002Fp\u003E\n\u003Cp\u003E我们相信这个命令所提供的功能，是向开发集成各种微服务（Microservices）的 Web 应用迈开的新一步。\u003C\u002Fp\u003E\n\u003Cp\u003E作为框架，Nuxt.js 为 \u003Ccode\u003E客户端\u002F服务端\u003C\u002Fcode\u003E 这种典型的应用架构模式提供了许多有用的特性，例如异步数据加载、中间件支持、布局支持等。\u003C\u002Fp\u003E\n\u003Ch2 id=\"nuxt-js-框架是如何运作的-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#nuxt-js-框架是如何运作的-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003ENuxt.js 框架是如何运作的？\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FavEUftE.png\" alt=\"基于 Vue、Webpack 和 Babel\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt.js 集成了以下组件\u002F框架，用于开发完整而强大的 Web 应用：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvue\"\u003EVue 2\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvue-router\"\u003EVue-Router\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvuex\"\u003EVuex\u003C\u002Fa\u003E (当配置了 \u003Ca href=\"\u002Fguide\u002Fvuex-store\"\u003EVuex 状态树配置项\u003C\u002Fa\u003E 时才会引入)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fssr.vuejs.org\u002Fen\u002F\"\u003EVue 服务器端渲染\u003C\u002Fa\u003E (排除使用 \u003Ca href=\"\u002Fapi\u002Fconfiguration-mode\"\u003E\u003Ccode\u003Emode: &#39;spa&#39;\u003C\u002Fcode\u003E\u003C\u002Fa\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fvue-meta\"\u003EVue-Meta\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E压缩并 gzip 后，总代码大小为：\u003Cstrong\u003E57kb\u003C\u002Fstrong\u003E （如果使用了 Vuex 特性的话为 60kb）。\u003C\u002Fp\u003E\n\u003Cp\u003E另外，Nuxt.js 使用 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fwebpack\u002Fwebpack\"\u003EWebpack\u003C\u002Fa\u003E 和 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvue-loader\"\u003Evue-loader\u003C\u002Fa\u003E 、 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbabel\u002Fbabel-loader\"\u003Ebabel-loader\u003C\u002Fa\u003E 来处理代码的自动化构建工作（如打包、代码分层、压缩等等）。\u003C\u002Fp\u003E\n\u003Ch2 id=\"特性\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#特性\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E特性\u003C\u002Fh2\u003E\u003Cul\u003E\n\u003Cli\u003E基于 Vue.js\u003C\u002Fli\u003E\n\u003Cli\u003E自动代码分层\u003C\u002Fli\u003E\n\u003Cli\u003E服务端渲染\u003C\u002Fli\u003E\n\u003Cli\u003E强大的路由功能，支持异步数据\u003C\u002Fli\u003E\n\u003Cli\u003E静态文件服务\u003C\u002Fli\u003E\n\u003Cli\u003EES2015+ 语法支持\u003C\u002Fli\u003E\n\u003Cli\u003E打包和压缩 JS 和 CSS\u003C\u002Fli\u003E\n\u003Cli\u003EHTML 头部标签管理\u003C\u002Fli\u003E\n\u003Cli\u003E本地开发支持热加载\u003C\u002Fli\u003E\n\u003Cli\u003E集成 ESLint\u003C\u002Fli\u003E\n\u003Cli\u003E支持各种样式预处理器： SASS、LESS、 Stylus 等等\u003C\u002Fli\u003E\n\u003Cli\u003E支持 HTTP\u002F2 推送\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"流程图\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#流程图\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E流程图\u003C\u002Fh2\u003E\u003Cp\u003E下图阐述了 Nuxt.js 应用一个完整的服务器请求到渲染（或用户通过 \u003Ccode\u003E&lt;nuxt-link&gt;\u003C\u002Fcode\u003E 切换路由渲染页面）的流程：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fnuxt-schema.svg\" alt=\"nuxt-schema\"\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"服务端渲染-通过ssr-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#服务端渲染-通过ssr-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E服务端渲染(通过SSR)\u003C\u002Fh2\u003E\u003Cp\u003E您可以使用\u003Cstrong\u003ENuxt.js\u003C\u002Fstrong\u003E作为框架来处理项目的所有UI呈现。\u003C\u002Fp\u003E\n\u003Cp\u003E启动时\u003Ccode\u003Enuxt\u003C\u002Fcode\u003E，它将启动具有热更新加载的开发服务器，并且\u003Ca href=\"https:\u002F\u002Fssr.vuejs.org\u002Fen\u002F\"\u003EVue 服务器端渲染\u003C\u002Fa\u003E配置为自动为服务器呈现应用程序。\u003C\u002Fp\u003E\n\u003Ch3 id=\"单页应用程序-spa-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#单页应用程序-spa-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E单页应用程序 (SPA)\u003C\u002Fh3\u003E\u003Cp\u003E如果您不想使用服务器端渲染或需要应用程序提供静态托管，则可以使用 \u003Ccode\u003Enuxt --spa\u003C\u002Fcode\u003E 命令即可使用 \u003Ccode\u003ESPA\u003C\u002Fcode\u003E 模式。\n它为您提供了强大的SPA部署机制，无需使用 \u003Ccode\u003ENode.js\u003C\u002Fcode\u003E 来运行应用程序或任何特殊的服务器端处理。\u003C\u002Fp\u003E\n\u003Cp\u003E可以查看 Nuxt.js 提供的各种 \u003Ca href=\"\u002Fguide\u002Fcommands\"\u003E命令\u003C\u002Fa\u003E 来了解更多相关使用信息。\u003C\u002Fp\u003E\n\u003Cp\u003E如果你的项目有自己的 Web 服务器（例如用 Express.js 启动的Web服务），你仍然可以将 Nuxt.js 当作是中间件来使用，负责UI渲染部分的功能。在开发通用的 Web 应用过程中，Nuxt.js 是可插拔的，没有太多的限制，可通过 \u003Ca href=\"\u002Fapi\u002Fnuxt\"\u003E开发编码中使用Nuxt.js\u003C\u002Fa\u003E 了解更多的信息。\u003C\u002Fp\u003E\n\u003Ch2 id=\"静态化-预渲染-\"\u003E\u003Ca class=\"anchor\" aria-hidden=\"true\" href=\"#静态化-预渲染-\"\u003E\u003Csvg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"\u003E\u003Cpath fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\u002F\u003E\u003C\u002Fsvg\u003E\u003C\u002Fa\u003E静态化 (预渲染)\u003C\u002Fh2\u003E\u003Cp\u003E支持 Vue.js 应用的静态化算是 Nuxt.js 的一个创新点，通过 \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E 命令实现。\u003C\u002Fp\u003E\n\u003Cp\u003E该命令依据应用的路由配置将每一个路由静态化成为对应的 HTML 文件。\u003C\u002Fp\u003E\n\u003Cdiv\u003E\n  \u003Ca href=\"https:\u002F\u002Fvueschool.io\u002Fcourses\u002Fstatic-site-generation-with-nuxtjs?friend=nuxt\" target=\"_blank\" class=\"Promote\"\u003E\n    \u003Cimg src=\"\u002Fstatic-site-generation-with-nuxtjs.png\" alt=\"Static Site Generation with Nuxt.js by vueschool\"\u002F\u003E\n    \u003Cdiv class=\"Promote__Content\"\u003E\n      \u003Ch4 class=\"Promote__Content__Title\"\u003E使用Nuxt.js生成静态站点\u003C\u002Fh4\u003E\n      \u003Cp class=\"Promote__Content__Description\"\u003E了解如何生成静态站点(预渲染)用来提高性能和搜索引擎优化(SEO)，同时减少站点托管成本。\u003C\u002Fp\u003E\n      \u003Cp class=\"Promote__Content__Signature\"\u003E由VueSchool制作视频课程，用于支持Nuxt.js开发\u003C\u002Fp\u003E\n    \u003C\u002Fdiv\u003E\n  \u003C\u002Fa\u003E\n\u003C\u002Fdiv\u003E\n\n\u003Cp\u003E例如，以下文件结构：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs bash\"\u003E-| pages\u002F\n----| about.vue\n----| index.vue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E静态化后变成：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs \"\u003E-| dist\u002F\n----| about\u002F\n------| index.html\n----| index.html\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E静态化可以让你在任何一个静态站点服务商托管你的Web应用。\u003C\u002Fp\u003E\n\u003Cp\u003ENuxt.js 的官网就是一个绝佳的例子, 它静态化后托管在 \u003Ca href=\"https:\u002F\u002Fwww.netlify.com\"\u003ENetlify\u003C\u002Fa\u003E 上，也可以参考我们的 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxtjs.org\"\u003E源代码\u003C\u002Fa\u003E 。\u003C\u002Fp\u003E\n\u003Cp\u003E我们不希望每次更新部署 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fdocs\"\u003E@nuxt\u002Fdocs 仓库\u003C\u002Fa\u003E 的时候都要手工执行 \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E 命令生成静态文件，它会触发 Netlify 的钩子应用：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E克隆 \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fnuxt\u002Fnuxtjs.org\"\u003Enuxtjs.org repository\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E使用 \u003Ccode\u003Enpm install\u003C\u002Fcode\u003E 命令安装依赖\u003C\u002Fli\u003E\n\u003Cli\u003E运行 \u003Ccode\u003Enpm run generate\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E生成 \u003Ccode\u003Edist\u003C\u002Fcode\u003E 目录\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E我们现在就有了一个 \u003Cstrong\u003E无服务端的自动静态化的Web应用\u003C\u002Fstrong\u003E :)\u003C\u002Fp\u003E\n\u003Cp\u003E我们进一步考虑下电商应用的场景，利用 \u003Ccode\u003Enuxt generate\u003C\u002Fcode\u003E，是不是可以将应用静态化后部署在 CDN 服务器，每当一个商品的库存发生变化时，就重新静态化下，更新下商品的库存。但是如果用户访问的时候恰巧更新了呢？我们可以通过调用电商的 API ，保证用户访问的是最新的数据。这样相对于传统的电商应用来说，这种静态化的方案可以大大节省服务器的资源。\u003C\u002Fp\u003E\n\u003Cdiv class=\"Alert\"\u003E\n\n\u003Cp\u003E查看 \u003Ca href=\"\u002Ffaq\u002Fnetlify-deployment\"\u003E如何在Netlify上部署？\u003C\u002Fa\u003E 来获取更多相关信息。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n"},contributors:[{author:"warriorBrian"},{author:"xuexb"},{author:"Atinux"},{author:"sunhaokk"},{author:"manniL"},{author:"iskanderbroere"},{author:"nh0627"},{author:"dongsuo"},{author:"pi0"},{author:"kevinmarrec"},{author:"alexchopin"},{author:"ShanaMaid"}]}],fetch:[],mutations:[]});